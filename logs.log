2025-06-26 11:55:37,485:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-26 11:55:37,485:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-26 11:55:37,485:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-26 11:55:37,486:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-26 11:58:55,499:INFO:PyCaret ClassificationExperiment
2025-06-26 11:58:55,499:INFO:Logging name: clf-default-name
2025-06-26 11:58:55,501:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-06-26 11:58:55,501:INFO:version 3.3.2
2025-06-26 11:58:55,501:INFO:Initializing setup()
2025-06-26 11:58:55,501:INFO:self.USI: b7d7
2025-06-26 11:58:55,501:INFO:self._variable_keys: {'memory', 'X', 'target_param', 'idx', '_available_plots', 'html_param', 'exp_name_log', 'fold_groups_param', 'is_multiclass', 'pipeline', 'fold_generator', 'log_plots_param', 'fix_imbalance', 'gpu_n_jobs_param', 'y_test', 'seed', 'exp_id', 'n_jobs_param', 'logging_param', 'y_train', 'X_test', 'USI', 'y', 'X_train', 'data', 'gpu_param', 'fold_shuffle_param', '_ml_usecase'}
2025-06-26 11:58:55,501:INFO:Checking environment
2025-06-26 11:58:55,501:INFO:python_version: 3.11.13
2025-06-26 11:58:55,501:INFO:python_build: ('main', 'Jun  5 2025 13:03:15')
2025-06-26 11:58:55,501:INFO:machine: AMD64
2025-06-26 11:58:55,501:INFO:platform: Windows-10-10.0.22631-SP0
2025-06-26 11:58:55,506:INFO:Memory: svmem(total=12674457600, available=2601168896, percent=79.5, used=10073288704, free=2601168896)
2025-06-26 11:58:55,507:INFO:Physical Core: 4
2025-06-26 11:58:55,507:INFO:Logical Core: 8
2025-06-26 11:58:55,507:INFO:Checking libraries
2025-06-26 11:58:55,507:INFO:System:
2025-06-26 11:58:55,507:INFO:    python: 3.11.13 | packaged by Anaconda, Inc. | (main, Jun  5 2025, 13:03:15) [MSC v.1929 64 bit (AMD64)]
2025-06-26 11:58:55,507:INFO:executable: d:\ML_notes\.conda\python.exe
2025-06-26 11:58:55,507:INFO:   machine: Windows-10-10.0.22631-SP0
2025-06-26 11:58:55,507:INFO:PyCaret required dependencies:
2025-06-26 11:58:55,583:INFO:                 pip: 25.1
2025-06-26 11:58:55,583:INFO:          setuptools: 78.1.1
2025-06-26 11:58:55,583:INFO:             pycaret: 3.3.2
2025-06-26 11:58:55,583:INFO:             IPython: 9.3.0
2025-06-26 11:58:55,583:INFO:          ipywidgets: 8.1.7
2025-06-26 11:58:55,583:INFO:                tqdm: 4.67.1
2025-06-26 11:58:55,583:INFO:               numpy: 1.26.4
2025-06-26 11:58:55,583:INFO:              pandas: 2.1.4
2025-06-26 11:58:55,583:INFO:              jinja2: 3.1.6
2025-06-26 11:58:55,583:INFO:               scipy: 1.11.4
2025-06-26 11:58:55,583:INFO:              joblib: 1.3.2
2025-06-26 11:58:55,583:INFO:             sklearn: 1.4.2
2025-06-26 11:58:55,583:INFO:                pyod: 2.0.5
2025-06-26 11:58:55,583:INFO:            imblearn: 0.13.0
2025-06-26 11:58:55,583:INFO:   category_encoders: 2.7.0
2025-06-26 11:58:55,583:INFO:            lightgbm: 4.6.0
2025-06-26 11:58:55,583:INFO:               numba: 0.61.0
2025-06-26 11:58:55,583:INFO:            requests: 2.32.4
2025-06-26 11:58:55,583:INFO:          matplotlib: 3.7.5
2025-06-26 11:58:55,583:INFO:          scikitplot: 0.3.7
2025-06-26 11:58:55,583:INFO:         yellowbrick: 1.5
2025-06-26 11:58:55,583:INFO:              plotly: 5.24.1
2025-06-26 11:58:55,583:INFO:    plotly-resampler: Not installed
2025-06-26 11:58:55,583:INFO:             kaleido: 1.0.0
2025-06-26 11:58:55,583:INFO:           schemdraw: 0.15
2025-06-26 11:58:55,583:INFO:         statsmodels: 0.14.4
2025-06-26 11:58:55,583:INFO:              sktime: 0.26.0
2025-06-26 11:58:55,583:INFO:               tbats: 1.1.3
2025-06-26 11:58:55,583:INFO:            pmdarima: 2.0.4
2025-06-26 11:58:55,583:INFO:              psutil: 7.0.0
2025-06-26 11:58:55,583:INFO:          markupsafe: 3.0.2
2025-06-26 11:58:55,584:INFO:             pickle5: Not installed
2025-06-26 11:58:55,584:INFO:         cloudpickle: 3.1.1
2025-06-26 11:58:55,584:INFO:         deprecation: 2.1.0
2025-06-26 11:58:55,584:INFO:              xxhash: 3.5.0
2025-06-26 11:58:55,584:INFO:           wurlitzer: Not installed
2025-06-26 11:58:55,584:INFO:PyCaret optional dependencies:
2025-06-26 11:58:55,593:INFO:                shap: Not installed
2025-06-26 11:58:55,593:INFO:           interpret: Not installed
2025-06-26 11:58:55,593:INFO:                umap: Not installed
2025-06-26 11:58:55,593:INFO:     ydata_profiling: 4.16.1
2025-06-26 11:58:55,593:INFO:  explainerdashboard: Not installed
2025-06-26 11:58:55,593:INFO:             autoviz: Not installed
2025-06-26 11:58:55,593:INFO:           fairlearn: Not installed
2025-06-26 11:58:55,593:INFO:          deepchecks: Not installed
2025-06-26 11:58:55,593:INFO:             xgboost: Not installed
2025-06-26 11:58:55,593:INFO:            catboost: Not installed
2025-06-26 11:58:55,593:INFO:              kmodes: Not installed
2025-06-26 11:58:55,593:INFO:             mlxtend: Not installed
2025-06-26 11:58:55,593:INFO:       statsforecast: Not installed
2025-06-26 11:58:55,593:INFO:        tune_sklearn: Not installed
2025-06-26 11:58:55,593:INFO:                 ray: Not installed
2025-06-26 11:58:55,593:INFO:            hyperopt: Not installed
2025-06-26 11:58:55,593:INFO:              optuna: Not installed
2025-06-26 11:58:55,593:INFO:               skopt: Not installed
2025-06-26 11:58:55,593:INFO:              mlflow: Not installed
2025-06-26 11:58:55,593:INFO:              gradio: Not installed
2025-06-26 11:58:55,593:INFO:             fastapi: Not installed
2025-06-26 11:58:55,593:INFO:             uvicorn: Not installed
2025-06-26 11:58:55,593:INFO:              m2cgen: Not installed
2025-06-26 11:58:55,593:INFO:           evidently: Not installed
2025-06-26 11:58:55,593:INFO:               fugue: Not installed
2025-06-26 11:58:55,593:INFO:           streamlit: Not installed
2025-06-26 11:58:55,593:INFO:             prophet: Not installed
2025-06-26 11:58:55,593:INFO:None
2025-06-26 11:58:55,593:INFO:Set up data.
2025-06-26 11:58:55,598:INFO:Set up folding strategy.
2025-06-26 11:58:55,598:INFO:Set up train/test split.
2025-06-26 11:58:55,604:INFO:Set up index.
2025-06-26 11:58:55,605:INFO:Assigning column types.
2025-06-26 11:58:55,608:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-06-26 11:58:55,641:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-26 11:58:55,644:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-26 11:58:55,674:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-26 11:58:55,675:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-26 11:58:55,707:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-26 11:58:55,708:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-26 11:58:55,728:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-26 11:58:55,729:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-26 11:58:55,729:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-06-26 11:58:55,764:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-26 11:58:55,785:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-26 11:58:55,785:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-26 11:58:55,822:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-26 11:58:55,845:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-26 11:58:55,845:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-26 11:58:55,845:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-06-26 11:58:55,905:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-26 11:58:55,906:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-26 11:58:55,961:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-26 11:58:55,961:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-26 11:58:55,963:INFO:Preparing preprocessing pipeline...
2025-06-26 11:58:55,966:INFO:Set up label encoding.
2025-06-26 11:58:55,966:INFO:Set up simple imputation.
2025-06-26 11:58:55,986:INFO:Finished creating preprocessing pipeline.
2025-06-26 11:58:55,991:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\YOGA\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['sepal_length', 'sepal_width',
                                             'petal_length', 'petal_width'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-06-26 11:58:55,991:INFO:Creating final display dataframe.
2025-06-26 11:58:56,034:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8              Numeric features   
9                    Preprocess   
10              Imputation type   
11           Numeric imputation   
12       Categorical imputation   
13               Fold Generator   
14                  Fold Number   
15                     CPU Jobs   
16                      Use GPU   
17               Log Experiment   
18              Experiment Name   
19                          USI   

                                                Value  
0                                                5442  
1                                             species  
2                                          Multiclass  
3   Iris-setosa: 0, Iris-versicolor: 1, Iris-virgi...  
4                                            (150, 5)  
5                                            (150, 5)  
6                                            (105, 5)  
7                                             (45, 5)  
8                                                   4  
9                                                True  
10                                             simple  
11                                               mean  
12                                               mode  
13                                    StratifiedKFold  
14                                                 10  
15                                                 -1  
16                                              False  
17                                              False  
18                                   clf-default-name  
19                                               b7d7  
2025-06-26 11:58:56,101:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-26 11:58:56,101:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-26 11:58:56,164:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-26 11:58:56,164:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-26 11:58:56,165:INFO:setup() successfully completed in 0.67s...............
2025-06-26 11:58:56,165:INFO:Initializing compare_models()
2025-06-26 11:58:56,165:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001580EE28610>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001580EE28610>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2025-06-26 11:58:56,166:INFO:Checking exceptions
2025-06-26 11:58:56,168:INFO:Preparing display monitor
2025-06-26 11:58:56,192:INFO:Initializing Logistic Regression
2025-06-26 11:58:56,193:INFO:Total runtime is 1.6669432322184246e-05 minutes
2025-06-26 11:58:56,196:INFO:SubProcess create_model() called ==================================
2025-06-26 11:58:56,197:INFO:Initializing create_model()
2025-06-26 11:58:56,197:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001580EE28610>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001580F384D10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-26 11:58:56,197:INFO:Checking exceptions
2025-06-26 11:58:56,197:INFO:Importing libraries
2025-06-26 11:58:56,197:INFO:Copying training dataset
2025-06-26 11:58:56,200:INFO:Defining folds
2025-06-26 11:58:56,200:INFO:Declaring metric variables
2025-06-26 11:58:56,203:INFO:Importing untrained model
2025-06-26 11:58:56,208:INFO:Logistic Regression Imported successfully
2025-06-26 11:58:56,216:INFO:Starting cross validation
2025-06-26 11:58:56,216:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-26 11:59:01,074:WARNING:d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-26 11:59:01,076:WARNING:d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-26 11:59:01,078:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,079:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,083:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,084:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,089:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,092:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,234:WARNING:d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-26 11:59:01,235:WARNING:d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-26 11:59:01,238:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,239:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,242:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,245:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,245:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,247:WARNING:d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-26 11:59:01,251:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,252:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,257:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,259:WARNING:d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-26 11:59:01,260:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,262:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,266:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,270:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,292:WARNING:d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-26 11:59:01,297:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,301:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,306:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,318:WARNING:d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-26 11:59:01,324:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,328:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,332:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,339:WARNING:d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-26 11:59:01,343:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,347:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,350:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,437:WARNING:d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-26 11:59:01,439:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,441:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,443:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,451:INFO:Calculating mean and std
2025-06-26 11:59:01,454:INFO:Creating metrics dataframe
2025-06-26 11:59:01,456:INFO:Uploading results into container
2025-06-26 11:59:01,457:INFO:Uploading model into container now
2025-06-26 11:59:01,457:INFO:_master_model_container: 1
2025-06-26 11:59:01,457:INFO:_display_container: 2
2025-06-26 11:59:01,458:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5442, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-06-26 11:59:01,458:INFO:create_model() successfully completed......................................
2025-06-26 11:59:01,561:INFO:SubProcess create_model() end ==================================
2025-06-26 11:59:01,561:INFO:Creating metrics dataframe
2025-06-26 11:59:01,566:INFO:Initializing K Neighbors Classifier
2025-06-26 11:59:01,567:INFO:Total runtime is 0.089593239625295 minutes
2025-06-26 11:59:01,571:INFO:SubProcess create_model() called ==================================
2025-06-26 11:59:01,572:INFO:Initializing create_model()
2025-06-26 11:59:01,572:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001580EE28610>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001580F384D10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-26 11:59:01,572:INFO:Checking exceptions
2025-06-26 11:59:01,572:INFO:Importing libraries
2025-06-26 11:59:01,572:INFO:Copying training dataset
2025-06-26 11:59:01,574:INFO:Defining folds
2025-06-26 11:59:01,574:INFO:Declaring metric variables
2025-06-26 11:59:01,578:INFO:Importing untrained model
2025-06-26 11:59:01,582:INFO:K Neighbors Classifier Imported successfully
2025-06-26 11:59:01,590:INFO:Starting cross validation
2025-06-26 11:59:01,590:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-26 11:59:01,674:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,675:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,676:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,677:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,677:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,677:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,677:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,677:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,678:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,678:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,678:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,679:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,679:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,680:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,680:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,681:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,681:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,682:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,682:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,683:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,683:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,683:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,684:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,734:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,736:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,738:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,739:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,740:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,740:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,750:INFO:Calculating mean and std
2025-06-26 11:59:01,751:INFO:Creating metrics dataframe
2025-06-26 11:59:01,753:INFO:Uploading results into container
2025-06-26 11:59:01,754:INFO:Uploading model into container now
2025-06-26 11:59:01,754:INFO:_master_model_container: 2
2025-06-26 11:59:01,754:INFO:_display_container: 2
2025-06-26 11:59:01,754:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-06-26 11:59:01,754:INFO:create_model() successfully completed......................................
2025-06-26 11:59:01,837:INFO:SubProcess create_model() end ==================================
2025-06-26 11:59:01,837:INFO:Creating metrics dataframe
2025-06-26 11:59:01,844:INFO:Initializing Naive Bayes
2025-06-26 11:59:01,844:INFO:Total runtime is 0.09421231746673583 minutes
2025-06-26 11:59:01,846:INFO:SubProcess create_model() called ==================================
2025-06-26 11:59:01,847:INFO:Initializing create_model()
2025-06-26 11:59:01,847:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001580EE28610>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001580F384D10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-26 11:59:01,847:INFO:Checking exceptions
2025-06-26 11:59:01,847:INFO:Importing libraries
2025-06-26 11:59:01,847:INFO:Copying training dataset
2025-06-26 11:59:01,849:INFO:Defining folds
2025-06-26 11:59:01,850:INFO:Declaring metric variables
2025-06-26 11:59:01,853:INFO:Importing untrained model
2025-06-26 11:59:01,857:INFO:Naive Bayes Imported successfully
2025-06-26 11:59:01,863:INFO:Starting cross validation
2025-06-26 11:59:01,864:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-26 11:59:01,899:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,901:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,901:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,902:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,902:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,904:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,904:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,904:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,905:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,905:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,906:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,906:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,907:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,908:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,908:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,909:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,911:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,929:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,929:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,931:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,931:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,933:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,933:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,941:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,942:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,943:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,945:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,945:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,946:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:01,955:INFO:Calculating mean and std
2025-06-26 11:59:01,955:INFO:Creating metrics dataframe
2025-06-26 11:59:01,956:INFO:Uploading results into container
2025-06-26 11:59:01,956:INFO:Uploading model into container now
2025-06-26 11:59:01,957:INFO:_master_model_container: 3
2025-06-26 11:59:01,957:INFO:_display_container: 2
2025-06-26 11:59:01,957:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-06-26 11:59:01,957:INFO:create_model() successfully completed......................................
2025-06-26 11:59:02,050:INFO:SubProcess create_model() end ==================================
2025-06-26 11:59:02,051:INFO:Creating metrics dataframe
2025-06-26 11:59:02,059:INFO:Initializing Decision Tree Classifier
2025-06-26 11:59:02,059:INFO:Total runtime is 0.09779059489568075 minutes
2025-06-26 11:59:02,062:INFO:SubProcess create_model() called ==================================
2025-06-26 11:59:02,062:INFO:Initializing create_model()
2025-06-26 11:59:02,062:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001580EE28610>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001580F384D10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-26 11:59:02,062:INFO:Checking exceptions
2025-06-26 11:59:02,062:INFO:Importing libraries
2025-06-26 11:59:02,062:INFO:Copying training dataset
2025-06-26 11:59:02,065:INFO:Defining folds
2025-06-26 11:59:02,066:INFO:Declaring metric variables
2025-06-26 11:59:02,068:INFO:Importing untrained model
2025-06-26 11:59:02,074:INFO:Decision Tree Classifier Imported successfully
2025-06-26 11:59:02,090:INFO:Starting cross validation
2025-06-26 11:59:02,093:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-26 11:59:02,146:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,146:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,148:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,149:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,149:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,151:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,151:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,151:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,152:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,156:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,156:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,156:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,158:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,158:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,161:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,166:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,167:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,170:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,170:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,172:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,173:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,174:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,175:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,179:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,180:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,182:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,182:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,184:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,184:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,197:INFO:Calculating mean and std
2025-06-26 11:59:02,197:INFO:Creating metrics dataframe
2025-06-26 11:59:02,199:INFO:Uploading results into container
2025-06-26 11:59:02,199:INFO:Uploading model into container now
2025-06-26 11:59:02,200:INFO:_master_model_container: 4
2025-06-26 11:59:02,200:INFO:_display_container: 2
2025-06-26 11:59:02,200:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5442, splitter='best')
2025-06-26 11:59:02,200:INFO:create_model() successfully completed......................................
2025-06-26 11:59:02,295:INFO:SubProcess create_model() end ==================================
2025-06-26 11:59:02,295:INFO:Creating metrics dataframe
2025-06-26 11:59:02,301:INFO:Initializing SVM - Linear Kernel
2025-06-26 11:59:02,301:INFO:Total runtime is 0.10181612173716227 minutes
2025-06-26 11:59:02,305:INFO:SubProcess create_model() called ==================================
2025-06-26 11:59:02,305:INFO:Initializing create_model()
2025-06-26 11:59:02,305:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001580EE28610>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001580F384D10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-26 11:59:02,305:INFO:Checking exceptions
2025-06-26 11:59:02,305:INFO:Importing libraries
2025-06-26 11:59:02,307:INFO:Copying training dataset
2025-06-26 11:59:02,310:INFO:Defining folds
2025-06-26 11:59:02,311:INFO:Declaring metric variables
2025-06-26 11:59:02,313:INFO:Importing untrained model
2025-06-26 11:59:02,316:INFO:SVM - Linear Kernel Imported successfully
2025-06-26 11:59:02,323:INFO:Starting cross validation
2025-06-26 11:59:02,324:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-26 11:59:02,377:WARNING:d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-26 11:59:02,377:WARNING:d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-26 11:59:02,377:WARNING:d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-26 11:59:02,378:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,378:WARNING:d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-26 11:59:02,378:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,379:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,379:WARNING:d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-26 11:59:02,380:WARNING:d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-26 11:59:02,380:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,381:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,381:WARNING:d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-26 11:59:02,381:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,381:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,381:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,382:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,382:WARNING:d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-26 11:59:02,382:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,383:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,383:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-26 11:59:02,384:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,384:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,384:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,385:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-26 11:59:02,384:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,385:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,385:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

ric.capitalize()} is", len(result))

2025-06-26 11:59:02,388:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,388:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,388:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,389:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,392:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,392:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,394:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-26 11:59:02,395:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,418:WARNING:d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-26 11:59:02,418:WARNING:d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-26 11:59:02,419:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,420:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,421:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,421:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,422:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-26 11:59:02,422:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-26 11:59:02,422:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,424:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,434:INFO:Calculating mean and std
2025-06-26 11:59:02,435:INFO:Creating metrics dataframe
2025-06-26 11:59:02,437:INFO:Uploading results into container
2025-06-26 11:59:02,438:INFO:Uploading model into container now
2025-06-26 11:59:02,438:INFO:_master_model_container: 5
2025-06-26 11:59:02,438:INFO:_display_container: 2
2025-06-26 11:59:02,439:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=5442, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-06-26 11:59:02,439:INFO:create_model() successfully completed......................................
2025-06-26 11:59:02,525:INFO:SubProcess create_model() end ==================================
2025-06-26 11:59:02,525:INFO:Creating metrics dataframe
2025-06-26 11:59:02,530:INFO:Initializing Ridge Classifier
2025-06-26 11:59:02,530:INFO:Total runtime is 0.10564616123835245 minutes
2025-06-26 11:59:02,532:INFO:SubProcess create_model() called ==================================
2025-06-26 11:59:02,533:INFO:Initializing create_model()
2025-06-26 11:59:02,533:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001580EE28610>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001580F384D10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-26 11:59:02,533:INFO:Checking exceptions
2025-06-26 11:59:02,533:INFO:Importing libraries
2025-06-26 11:59:02,533:INFO:Copying training dataset
2025-06-26 11:59:02,538:INFO:Defining folds
2025-06-26 11:59:02,538:INFO:Declaring metric variables
2025-06-26 11:59:02,541:INFO:Importing untrained model
2025-06-26 11:59:02,545:INFO:Ridge Classifier Imported successfully
2025-06-26 11:59:02,552:INFO:Starting cross validation
2025-06-26 11:59:02,553:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-26 11:59:02,596:WARNING:d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-26 11:59:02,597:WARNING:d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-26 11:59:02,597:WARNING:d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-26 11:59:02,597:WARNING:d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-26 11:59:02,599:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,599:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,599:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,599:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,601:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,602:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,603:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,604:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,605:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,606:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,606:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,607:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,597:WARNING:d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-26 11:59:02,609:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,610:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,610:WARNING:d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-26 11:59:02,612:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,612:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,613:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,615:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,615:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,616:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,617:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,626:WARNING:d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-26 11:59:02,627:WARNING:d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-26 11:59:02,627:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,628:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,629:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,629:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,631:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-26 11:59:02,631:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,632:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:02,641:INFO:Calculating mean and std
2025-06-26 11:59:02,641:INFO:Creating metrics dataframe
2025-06-26 11:59:02,643:INFO:Uploading results into container
2025-06-26 11:59:02,643:INFO:Uploading model into container now
2025-06-26 11:59:02,643:INFO:_master_model_container: 6
2025-06-26 11:59:02,643:INFO:_display_container: 2
2025-06-26 11:59:02,644:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=5442, solver='auto',
                tol=0.0001)
2025-06-26 11:59:02,644:INFO:create_model() successfully completed......................................
2025-06-26 11:59:02,740:INFO:SubProcess create_model() end ==================================
2025-06-26 11:59:02,740:INFO:Creating metrics dataframe
2025-06-26 11:59:02,747:INFO:Initializing Random Forest Classifier
2025-06-26 11:59:02,747:INFO:Total runtime is 0.10925471385320026 minutes
2025-06-26 11:59:02,750:INFO:SubProcess create_model() called ==================================
2025-06-26 11:59:02,750:INFO:Initializing create_model()
2025-06-26 11:59:02,750:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001580EE28610>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001580F384D10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-26 11:59:02,751:INFO:Checking exceptions
2025-06-26 11:59:02,751:INFO:Importing libraries
2025-06-26 11:59:02,751:INFO:Copying training dataset
2025-06-26 11:59:02,755:INFO:Defining folds
2025-06-26 11:59:02,755:INFO:Declaring metric variables
2025-06-26 11:59:02,758:INFO:Importing untrained model
2025-06-26 11:59:02,762:INFO:Random Forest Classifier Imported successfully
2025-06-26 11:59:02,769:INFO:Starting cross validation
2025-06-26 11:59:02,770:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-26 11:59:03,040:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,041:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,041:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,041:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,044:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,045:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,045:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,045:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,045:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,046:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,048:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,048:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,049:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,049:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,054:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,074:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,075:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,076:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,076:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,078:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,078:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,079:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,080:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,080:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,239:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,240:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,241:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,242:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,242:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,243:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,252:INFO:Calculating mean and std
2025-06-26 11:59:03,254:INFO:Creating metrics dataframe
2025-06-26 11:59:03,255:INFO:Uploading results into container
2025-06-26 11:59:03,256:INFO:Uploading model into container now
2025-06-26 11:59:03,256:INFO:_master_model_container: 7
2025-06-26 11:59:03,256:INFO:_display_container: 2
2025-06-26 11:59:03,257:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=5442, verbose=0,
                       warm_start=False)
2025-06-26 11:59:03,257:INFO:create_model() successfully completed......................................
2025-06-26 11:59:03,345:INFO:SubProcess create_model() end ==================================
2025-06-26 11:59:03,345:INFO:Creating metrics dataframe
2025-06-26 11:59:03,350:INFO:Initializing Quadratic Discriminant Analysis
2025-06-26 11:59:03,350:INFO:Total runtime is 0.11930934985478718 minutes
2025-06-26 11:59:03,354:INFO:SubProcess create_model() called ==================================
2025-06-26 11:59:03,355:INFO:Initializing create_model()
2025-06-26 11:59:03,355:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001580EE28610>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001580F384D10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-26 11:59:03,355:INFO:Checking exceptions
2025-06-26 11:59:03,355:INFO:Importing libraries
2025-06-26 11:59:03,355:INFO:Copying training dataset
2025-06-26 11:59:03,357:INFO:Defining folds
2025-06-26 11:59:03,357:INFO:Declaring metric variables
2025-06-26 11:59:03,361:INFO:Importing untrained model
2025-06-26 11:59:03,365:INFO:Quadratic Discriminant Analysis Imported successfully
2025-06-26 11:59:03,371:INFO:Starting cross validation
2025-06-26 11:59:03,372:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-26 11:59:03,415:WARNING:d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-26 11:59:03,415:WARNING:d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-26 11:59:03,415:WARNING:d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-26 11:59:03,415:WARNING:d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-26 11:59:03,416:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,416:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,416:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,416:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,420:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,420:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,420:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,421:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,421:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,421:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,422:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,423:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,423:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,423:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,423:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,424:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,424:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,424:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,425:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,426:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,440:WARNING:d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-26 11:59:03,440:WARNING:d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-26 11:59:03,441:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,441:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,442:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,443:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,444:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,444:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,450:INFO:Calculating mean and std
2025-06-26 11:59:03,450:INFO:Creating metrics dataframe
2025-06-26 11:59:03,451:INFO:Uploading results into container
2025-06-26 11:59:03,452:INFO:Uploading model into container now
2025-06-26 11:59:03,453:INFO:_master_model_container: 8
2025-06-26 11:59:03,453:INFO:_display_container: 2
2025-06-26 11:59:03,453:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-06-26 11:59:03,453:INFO:create_model() successfully completed......................................
2025-06-26 11:59:03,543:INFO:SubProcess create_model() end ==================================
2025-06-26 11:59:03,543:INFO:Creating metrics dataframe
2025-06-26 11:59:03,548:INFO:Initializing Ada Boost Classifier
2025-06-26 11:59:03,548:INFO:Total runtime is 0.12260639270146687 minutes
2025-06-26 11:59:03,551:INFO:SubProcess create_model() called ==================================
2025-06-26 11:59:03,551:INFO:Initializing create_model()
2025-06-26 11:59:03,551:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001580EE28610>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001580F384D10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-26 11:59:03,551:INFO:Checking exceptions
2025-06-26 11:59:03,552:INFO:Importing libraries
2025-06-26 11:59:03,552:INFO:Copying training dataset
2025-06-26 11:59:03,556:INFO:Defining folds
2025-06-26 11:59:03,556:INFO:Declaring metric variables
2025-06-26 11:59:03,559:INFO:Importing untrained model
2025-06-26 11:59:03,563:INFO:Ada Boost Classifier Imported successfully
2025-06-26 11:59:03,569:INFO:Starting cross validation
2025-06-26 11:59:03,570:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-26 11:59:03,589:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-26 11:59:03,590:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-26 11:59:03,590:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-26 11:59:03,591:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-26 11:59:03,593:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-26 11:59:03,593:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-26 11:59:03,594:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-26 11:59:03,600:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-26 11:59:03,708:WARNING:d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-26 11:59:03,710:WARNING:d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-26 11:59:03,711:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,711:WARNING:d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-26 11:59:03,712:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,713:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,714:WARNING:d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-26 11:59:03,714:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,715:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,716:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,716:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,716:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,719:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,719:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,719:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,720:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,722:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,722:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,724:WARNING:d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-26 11:59:03,725:WARNING:d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-26 11:59:03,726:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,727:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,729:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,730:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,731:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,732:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,733:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,735:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-26 11:59:03,736:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-26 11:59:03,738:WARNING:d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-26 11:59:03,740:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,743:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,746:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,804:WARNING:d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-26 11:59:03,805:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,806:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,807:WARNING:d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-26 11:59:03,808:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,808:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,809:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,811:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:03,823:INFO:Calculating mean and std
2025-06-26 11:59:03,824:INFO:Creating metrics dataframe
2025-06-26 11:59:03,825:INFO:Uploading results into container
2025-06-26 11:59:03,825:INFO:Uploading model into container now
2025-06-26 11:59:03,825:INFO:_master_model_container: 9
2025-06-26 11:59:03,825:INFO:_display_container: 2
2025-06-26 11:59:03,826:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=5442)
2025-06-26 11:59:03,826:INFO:create_model() successfully completed......................................
2025-06-26 11:59:03,908:INFO:SubProcess create_model() end ==================================
2025-06-26 11:59:03,908:INFO:Creating metrics dataframe
2025-06-26 11:59:03,917:INFO:Initializing Gradient Boosting Classifier
2025-06-26 11:59:03,917:INFO:Total runtime is 0.12875186204910277 minutes
2025-06-26 11:59:03,922:INFO:SubProcess create_model() called ==================================
2025-06-26 11:59:03,922:INFO:Initializing create_model()
2025-06-26 11:59:03,923:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001580EE28610>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001580F384D10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-26 11:59:03,923:INFO:Checking exceptions
2025-06-26 11:59:03,923:INFO:Importing libraries
2025-06-26 11:59:03,923:INFO:Copying training dataset
2025-06-26 11:59:03,926:INFO:Defining folds
2025-06-26 11:59:03,926:INFO:Declaring metric variables
2025-06-26 11:59:03,929:INFO:Importing untrained model
2025-06-26 11:59:03,932:INFO:Gradient Boosting Classifier Imported successfully
2025-06-26 11:59:03,938:INFO:Starting cross validation
2025-06-26 11:59:03,939:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-26 11:59:04,308:WARNING:d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-26 11:59:04,311:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:04,314:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:04,314:WARNING:d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-26 11:59:04,316:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:04,317:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:04,320:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:04,321:WARNING:d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-26 11:59:04,322:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:04,323:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:04,325:WARNING:d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-26 11:59:04,325:WARNING:d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-26 11:59:04,325:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:04,326:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:04,327:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:04,328:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:04,329:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:04,330:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:04,333:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:04,333:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:04,342:WARNING:d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-26 11:59:04,343:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:04,346:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:04,349:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:04,354:WARNING:d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-26 11:59:04,355:WARNING:d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-26 11:59:04,355:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:04,357:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:04,358:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:04,359:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:04,359:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:04,360:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:04,548:WARNING:d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-26 11:59:04,548:WARNING:d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-26 11:59:04,549:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:04,549:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:04,551:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:04,552:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:04,555:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:04,555:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:04,565:INFO:Calculating mean and std
2025-06-26 11:59:04,566:INFO:Creating metrics dataframe
2025-06-26 11:59:04,568:INFO:Uploading results into container
2025-06-26 11:59:04,569:INFO:Uploading model into container now
2025-06-26 11:59:04,570:INFO:_master_model_container: 10
2025-06-26 11:59:04,570:INFO:_display_container: 2
2025-06-26 11:59:04,571:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=5442, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-06-26 11:59:04,571:INFO:create_model() successfully completed......................................
2025-06-26 11:59:04,662:INFO:SubProcess create_model() end ==================================
2025-06-26 11:59:04,662:INFO:Creating metrics dataframe
2025-06-26 11:59:04,670:INFO:Initializing Linear Discriminant Analysis
2025-06-26 11:59:04,670:INFO:Total runtime is 0.14130269289016723 minutes
2025-06-26 11:59:04,673:INFO:SubProcess create_model() called ==================================
2025-06-26 11:59:04,674:INFO:Initializing create_model()
2025-06-26 11:59:04,674:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001580EE28610>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001580F384D10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-26 11:59:04,674:INFO:Checking exceptions
2025-06-26 11:59:04,674:INFO:Importing libraries
2025-06-26 11:59:04,674:INFO:Copying training dataset
2025-06-26 11:59:04,678:INFO:Defining folds
2025-06-26 11:59:04,678:INFO:Declaring metric variables
2025-06-26 11:59:04,681:INFO:Importing untrained model
2025-06-26 11:59:04,685:INFO:Linear Discriminant Analysis Imported successfully
2025-06-26 11:59:04,692:INFO:Starting cross validation
2025-06-26 11:59:04,693:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-26 11:59:04,731:WARNING:d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-26 11:59:04,733:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:04,737:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:04,739:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:04,758:WARNING:d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-26 11:59:04,759:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:04,760:WARNING:d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-26 11:59:04,762:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:04,762:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:04,762:WARNING:d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-26 11:59:04,764:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:04,765:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:04,765:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:04,766:WARNING:d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-26 11:59:04,767:WARNING:d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-26 11:59:04,767:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:04,770:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:04,770:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:04,771:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:04,772:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:04,773:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:04,773:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:04,777:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:04,794:WARNING:d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-26 11:59:04,795:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:04,796:WARNING:d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-26 11:59:04,797:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:04,797:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:04,799:WARNING:d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-26 11:59:04,799:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:04,799:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:04,800:WARNING:d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-26 11:59:04,800:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:04,801:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:04,802:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:04,804:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:04,805:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:04,806:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:04,807:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:04,819:INFO:Calculating mean and std
2025-06-26 11:59:04,820:INFO:Creating metrics dataframe
2025-06-26 11:59:04,822:INFO:Uploading results into container
2025-06-26 11:59:04,822:INFO:Uploading model into container now
2025-06-26 11:59:04,822:INFO:_master_model_container: 11
2025-06-26 11:59:04,822:INFO:_display_container: 2
2025-06-26 11:59:04,823:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-06-26 11:59:04,823:INFO:create_model() successfully completed......................................
2025-06-26 11:59:04,923:INFO:SubProcess create_model() end ==================================
2025-06-26 11:59:04,923:INFO:Creating metrics dataframe
2025-06-26 11:59:04,930:INFO:Initializing Extra Trees Classifier
2025-06-26 11:59:04,930:INFO:Total runtime is 0.14563671747843424 minutes
2025-06-26 11:59:04,932:INFO:SubProcess create_model() called ==================================
2025-06-26 11:59:04,933:INFO:Initializing create_model()
2025-06-26 11:59:04,933:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001580EE28610>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001580F384D10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-26 11:59:04,934:INFO:Checking exceptions
2025-06-26 11:59:04,934:INFO:Importing libraries
2025-06-26 11:59:04,934:INFO:Copying training dataset
2025-06-26 11:59:04,938:INFO:Defining folds
2025-06-26 11:59:04,938:INFO:Declaring metric variables
2025-06-26 11:59:04,942:INFO:Importing untrained model
2025-06-26 11:59:04,946:INFO:Extra Trees Classifier Imported successfully
2025-06-26 11:59:04,951:INFO:Starting cross validation
2025-06-26 11:59:04,953:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-26 11:59:05,195:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:05,195:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:05,198:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:05,201:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:05,202:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:05,208:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:05,209:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:05,211:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:05,211:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:05,213:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:05,213:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:05,213:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:05,214:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:05,214:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:05,216:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:05,216:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:05,217:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:05,220:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:05,220:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:05,221:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:05,277:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:05,280:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:05,281:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:05,356:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:05,358:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:05,358:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:05,360:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:05,360:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:05,362:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:05,373:INFO:Calculating mean and std
2025-06-26 11:59:05,374:INFO:Creating metrics dataframe
2025-06-26 11:59:05,375:INFO:Uploading results into container
2025-06-26 11:59:05,376:INFO:Uploading model into container now
2025-06-26 11:59:05,376:INFO:_master_model_container: 12
2025-06-26 11:59:05,376:INFO:_display_container: 2
2025-06-26 11:59:05,377:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=5442, verbose=0,
                     warm_start=False)
2025-06-26 11:59:05,377:INFO:create_model() successfully completed......................................
2025-06-26 11:59:05,475:INFO:SubProcess create_model() end ==================================
2025-06-26 11:59:05,476:INFO:Creating metrics dataframe
2025-06-26 11:59:05,483:INFO:Initializing Light Gradient Boosting Machine
2025-06-26 11:59:05,483:INFO:Total runtime is 0.15485194921493528 minutes
2025-06-26 11:59:05,488:INFO:SubProcess create_model() called ==================================
2025-06-26 11:59:05,489:INFO:Initializing create_model()
2025-06-26 11:59:05,489:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001580EE28610>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001580F384D10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-26 11:59:05,489:INFO:Checking exceptions
2025-06-26 11:59:05,489:INFO:Importing libraries
2025-06-26 11:59:05,489:INFO:Copying training dataset
2025-06-26 11:59:05,493:INFO:Defining folds
2025-06-26 11:59:05,493:INFO:Declaring metric variables
2025-06-26 11:59:05,495:INFO:Importing untrained model
2025-06-26 11:59:05,499:INFO:Light Gradient Boosting Machine Imported successfully
2025-06-26 11:59:05,508:INFO:Starting cross validation
2025-06-26 11:59:05,509:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-26 11:59:05,853:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:05,856:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:05,860:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:05,866:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:05,871:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:05,871:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:05,872:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:05,874:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:05,874:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:05,876:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:05,877:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:05,879:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:05,917:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:05,922:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:05,925:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:05,931:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:05,933:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:05,938:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:05,942:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:05,946:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:05,948:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:05,966:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:05,969:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:05,972:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:06,079:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:06,082:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:06,084:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:06,090:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:06,093:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:06,095:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:06,109:INFO:Calculating mean and std
2025-06-26 11:59:06,110:INFO:Creating metrics dataframe
2025-06-26 11:59:06,113:INFO:Uploading results into container
2025-06-26 11:59:06,114:INFO:Uploading model into container now
2025-06-26 11:59:06,114:INFO:_master_model_container: 13
2025-06-26 11:59:06,114:INFO:_display_container: 2
2025-06-26 11:59:06,115:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5442, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-06-26 11:59:06,115:INFO:create_model() successfully completed......................................
2025-06-26 11:59:06,235:INFO:SubProcess create_model() end ==================================
2025-06-26 11:59:06,235:INFO:Creating metrics dataframe
2025-06-26 11:59:06,244:INFO:Initializing Dummy Classifier
2025-06-26 11:59:06,244:INFO:Total runtime is 0.1675334811210632 minutes
2025-06-26 11:59:06,247:INFO:SubProcess create_model() called ==================================
2025-06-26 11:59:06,247:INFO:Initializing create_model()
2025-06-26 11:59:06,247:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001580EE28610>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001580F384D10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-26 11:59:06,247:INFO:Checking exceptions
2025-06-26 11:59:06,247:INFO:Importing libraries
2025-06-26 11:59:06,247:INFO:Copying training dataset
2025-06-26 11:59:06,250:INFO:Defining folds
2025-06-26 11:59:06,250:INFO:Declaring metric variables
2025-06-26 11:59:06,256:INFO:Importing untrained model
2025-06-26 11:59:06,259:INFO:Dummy Classifier Imported successfully
2025-06-26 11:59:06,265:INFO:Starting cross validation
2025-06-26 11:59:06,266:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-26 11:59:06,297:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:06,298:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:06,299:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:06,299:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:06,300:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:06,301:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:06,302:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-26 11:59:06,302:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:06,302:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:06,302:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-26 11:59:06,303:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-26 11:59:06,304:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:06,304:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:06,304:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:06,305:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:06,305:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

ric.capitalize()} is", len(result))

2025-06-26 11:59:06,306:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-26 11:59:06,308:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:06,308:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:06,311:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:06,313:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-26 11:59:06,315:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:06,315:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:06,321:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:06,321:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:06,322:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-26 11:59:06,324:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:06,328:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:06,329:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:06,330:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:06,331:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:06,331:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-26 11:59:06,332:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-26 11:59:06,332:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:06,333:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:06,333:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:06,335:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:06,337:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-26 11:59:06,339:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-26 11:59:06,346:INFO:Calculating mean and std
2025-06-26 11:59:06,347:INFO:Creating metrics dataframe
2025-06-26 11:59:06,348:INFO:Uploading results into container
2025-06-26 11:59:06,348:INFO:Uploading model into container now
2025-06-26 11:59:06,348:INFO:_master_model_container: 14
2025-06-26 11:59:06,348:INFO:_display_container: 2
2025-06-26 11:59:06,349:INFO:DummyClassifier(constant=None, random_state=5442, strategy='prior')
2025-06-26 11:59:06,349:INFO:create_model() successfully completed......................................
2025-06-26 11:59:06,447:INFO:SubProcess create_model() end ==================================
2025-06-26 11:59:06,448:INFO:Creating metrics dataframe
2025-06-26 11:59:06,460:WARNING:d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-06-26 11:59:06,466:INFO:Initializing create_model()
2025-06-26 11:59:06,467:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001580EE28610>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-26 11:59:06,467:INFO:Checking exceptions
2025-06-26 11:59:06,469:INFO:Importing libraries
2025-06-26 11:59:06,469:INFO:Copying training dataset
2025-06-26 11:59:06,473:INFO:Defining folds
2025-06-26 11:59:06,473:INFO:Declaring metric variables
2025-06-26 11:59:06,474:INFO:Importing untrained model
2025-06-26 11:59:06,474:INFO:Declaring custom model
2025-06-26 11:59:06,474:INFO:Linear Discriminant Analysis Imported successfully
2025-06-26 11:59:06,475:INFO:Cross validation set to False
2025-06-26 11:59:06,475:INFO:Fitting Model
2025-06-26 11:59:06,480:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-06-26 11:59:06,480:INFO:create_model() successfully completed......................................
2025-06-26 11:59:06,598:INFO:_master_model_container: 14
2025-06-26 11:59:06,598:INFO:_display_container: 2
2025-06-26 11:59:06,598:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-06-26 11:59:06,598:INFO:compare_models() successfully completed......................................
2025-06-26 12:12:21,671:INFO:PyCaret ClassificationExperiment
2025-06-26 12:12:21,671:INFO:Logging name: clf-default-name
2025-06-26 12:12:21,671:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-06-26 12:12:21,671:INFO:version 3.3.2
2025-06-26 12:12:21,671:INFO:Initializing setup()
2025-06-26 12:12:21,671:INFO:self.USI: 6375
2025-06-26 12:12:21,671:INFO:self._variable_keys: {'memory', 'X', 'target_param', 'idx', '_available_plots', 'html_param', 'exp_name_log', 'fold_groups_param', 'is_multiclass', 'pipeline', 'fold_generator', 'log_plots_param', 'fix_imbalance', 'gpu_n_jobs_param', 'y_test', 'seed', 'exp_id', 'n_jobs_param', 'logging_param', 'y_train', 'X_test', 'USI', 'y', 'X_train', 'data', 'gpu_param', 'fold_shuffle_param', '_ml_usecase'}
2025-06-26 12:12:21,671:INFO:Checking environment
2025-06-26 12:12:21,671:INFO:python_version: 3.11.13
2025-06-26 12:12:21,671:INFO:python_build: ('main', 'Jun  5 2025 13:03:15')
2025-06-26 12:12:21,672:INFO:machine: AMD64
2025-06-26 12:12:21,672:INFO:platform: Windows-10-10.0.22631-SP0
2025-06-26 12:12:21,678:INFO:Memory: svmem(total=12674457600, available=2090598400, percent=83.5, used=10583859200, free=2090598400)
2025-06-26 12:12:21,678:INFO:Physical Core: 4
2025-06-26 12:12:21,679:INFO:Logical Core: 8
2025-06-26 12:12:21,679:INFO:Checking libraries
2025-06-26 12:12:21,679:INFO:System:
2025-06-26 12:12:21,679:INFO:    python: 3.11.13 | packaged by Anaconda, Inc. | (main, Jun  5 2025, 13:03:15) [MSC v.1929 64 bit (AMD64)]
2025-06-26 12:12:21,679:INFO:executable: d:\ML_notes\.conda\python.exe
2025-06-26 12:12:21,679:INFO:   machine: Windows-10-10.0.22631-SP0
2025-06-26 12:12:21,679:INFO:PyCaret required dependencies:
2025-06-26 12:12:21,679:INFO:                 pip: 25.1
2025-06-26 12:12:21,679:INFO:          setuptools: 78.1.1
2025-06-26 12:12:21,679:INFO:             pycaret: 3.3.2
2025-06-26 12:12:21,679:INFO:             IPython: 9.3.0
2025-06-26 12:12:21,679:INFO:          ipywidgets: 8.1.7
2025-06-26 12:12:21,679:INFO:                tqdm: 4.67.1
2025-06-26 12:12:21,679:INFO:               numpy: 1.26.4
2025-06-26 12:12:21,679:INFO:              pandas: 2.1.4
2025-06-26 12:12:21,679:INFO:              jinja2: 3.1.6
2025-06-26 12:12:21,679:INFO:               scipy: 1.11.4
2025-06-26 12:12:21,679:INFO:              joblib: 1.3.2
2025-06-26 12:12:21,679:INFO:             sklearn: 1.4.2
2025-06-26 12:12:21,679:INFO:                pyod: 2.0.5
2025-06-26 12:12:21,679:INFO:            imblearn: 0.13.0
2025-06-26 12:12:21,679:INFO:   category_encoders: 2.7.0
2025-06-26 12:12:21,680:INFO:            lightgbm: 4.6.0
2025-06-26 12:12:21,680:INFO:               numba: 0.61.0
2025-06-26 12:12:21,680:INFO:            requests: 2.32.4
2025-06-26 12:12:21,680:INFO:          matplotlib: 3.7.5
2025-06-26 12:12:21,680:INFO:          scikitplot: 0.3.7
2025-06-26 12:12:21,680:INFO:         yellowbrick: 1.5
2025-06-26 12:12:21,680:INFO:              plotly: 5.24.1
2025-06-26 12:12:21,680:INFO:    plotly-resampler: Not installed
2025-06-26 12:12:21,680:INFO:             kaleido: 1.0.0
2025-06-26 12:12:21,680:INFO:           schemdraw: 0.15
2025-06-26 12:12:21,680:INFO:         statsmodels: 0.14.4
2025-06-26 12:12:21,680:INFO:              sktime: 0.26.0
2025-06-26 12:12:21,680:INFO:               tbats: 1.1.3
2025-06-26 12:12:21,680:INFO:            pmdarima: 2.0.4
2025-06-26 12:12:21,680:INFO:              psutil: 7.0.0
2025-06-26 12:12:21,680:INFO:          markupsafe: 3.0.2
2025-06-26 12:12:21,680:INFO:             pickle5: Not installed
2025-06-26 12:12:21,680:INFO:         cloudpickle: 3.1.1
2025-06-26 12:12:21,680:INFO:         deprecation: 2.1.0
2025-06-26 12:12:21,680:INFO:              xxhash: 3.5.0
2025-06-26 12:12:21,680:INFO:           wurlitzer: Not installed
2025-06-26 12:12:21,681:INFO:PyCaret optional dependencies:
2025-06-26 12:12:21,681:INFO:                shap: Not installed
2025-06-26 12:12:21,681:INFO:           interpret: Not installed
2025-06-26 12:12:21,681:INFO:                umap: Not installed
2025-06-26 12:12:21,681:INFO:     ydata_profiling: 4.16.1
2025-06-26 12:12:21,681:INFO:  explainerdashboard: Not installed
2025-06-26 12:12:21,681:INFO:             autoviz: Not installed
2025-06-26 12:12:21,681:INFO:           fairlearn: Not installed
2025-06-26 12:12:21,681:INFO:          deepchecks: Not installed
2025-06-26 12:12:21,681:INFO:             xgboost: Not installed
2025-06-26 12:12:21,681:INFO:            catboost: Not installed
2025-06-26 12:12:21,681:INFO:              kmodes: Not installed
2025-06-26 12:12:21,681:INFO:             mlxtend: Not installed
2025-06-26 12:12:21,681:INFO:       statsforecast: Not installed
2025-06-26 12:12:21,681:INFO:        tune_sklearn: Not installed
2025-06-26 12:12:21,681:INFO:                 ray: Not installed
2025-06-26 12:12:21,681:INFO:            hyperopt: Not installed
2025-06-26 12:12:21,681:INFO:              optuna: Not installed
2025-06-26 12:12:21,681:INFO:               skopt: Not installed
2025-06-26 12:12:21,681:INFO:              mlflow: Not installed
2025-06-26 12:12:21,681:INFO:              gradio: Not installed
2025-06-26 12:12:21,681:INFO:             fastapi: Not installed
2025-06-26 12:12:21,681:INFO:             uvicorn: Not installed
2025-06-26 12:12:21,681:INFO:              m2cgen: Not installed
2025-06-26 12:12:21,681:INFO:           evidently: Not installed
2025-06-26 12:12:21,681:INFO:               fugue: Not installed
2025-06-26 12:12:21,681:INFO:           streamlit: Not installed
2025-06-26 12:12:21,681:INFO:             prophet: Not installed
2025-06-26 12:12:21,681:INFO:None
2025-06-26 12:12:21,682:INFO:Set up data.
2025-06-26 12:12:21,688:INFO:Set up folding strategy.
2025-06-26 12:12:21,688:INFO:Set up train/test split.
2025-06-26 12:12:21,695:INFO:Set up index.
2025-06-26 12:12:21,696:INFO:Assigning column types.
2025-06-26 12:12:21,699:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-06-26 12:12:21,731:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-26 12:12:21,731:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-26 12:12:21,751:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-26 12:12:21,751:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-26 12:12:21,785:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-26 12:12:21,785:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-26 12:12:21,806:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-26 12:12:21,807:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-26 12:12:21,807:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-06-26 12:12:21,840:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-26 12:12:21,862:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-26 12:12:21,863:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-26 12:12:21,896:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-26 12:12:21,917:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-26 12:12:21,917:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-26 12:12:21,918:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-06-26 12:12:21,971:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-26 12:12:21,971:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-26 12:12:22,026:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-26 12:12:22,027:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-26 12:12:22,028:INFO:Preparing preprocessing pipeline...
2025-06-26 12:12:22,029:INFO:Set up simple imputation.
2025-06-26 12:12:22,043:INFO:Finished creating preprocessing pipeline.
2025-06-26 12:12:22,046:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\YOGA\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'Annual_Income',
                                             'Total_Spend', 'Years_as_Customer',
                                             'Num_of_Purchases',
                                             'Average_Transaction_Amount',
                                             'Num_of_Returns',
                                             'Num_of_Support_Contacts',
                                             'Satisfaction_Score',
                                             'Last_Purchase_Days_Ago',
                                             'Gender_Fem...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-06-26 12:12:22,046:INFO:Creating final display dataframe.
2025-06-26 12:12:22,102:INFO:Setup _display_container:                     Description              Value
0                    Session id               4020
1                        Target  Target_Churn_True
2                   Target type             Binary
3           Original data shape         (1000, 20)
4        Transformed data shape         (1000, 20)
5   Transformed train set shape          (700, 20)
6    Transformed test set shape          (300, 20)
7              Numeric features                 19
8                    Preprocess               True
9               Imputation type             simple
10           Numeric imputation               mean
11       Categorical imputation               mode
12               Fold Generator    StratifiedKFold
13                  Fold Number                 10
14                     CPU Jobs                 -1
15                      Use GPU              False
16               Log Experiment              False
17              Experiment Name   clf-default-name
18                          USI               6375
2025-06-26 12:12:22,170:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-26 12:12:22,170:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-26 12:12:22,227:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-26 12:12:22,227:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-26 12:12:22,228:INFO:setup() successfully completed in 0.56s...............
2025-06-26 12:12:22,229:INFO:Initializing compare_models()
2025-06-26 12:12:22,229:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001580F2FE190>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001580F2FE190>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2025-06-26 12:12:22,229:INFO:Checking exceptions
2025-06-26 12:12:22,235:INFO:Preparing display monitor
2025-06-26 12:12:22,260:INFO:Initializing Logistic Regression
2025-06-26 12:12:22,261:INFO:Total runtime is 1.663366953531901e-05 minutes
2025-06-26 12:12:22,266:INFO:SubProcess create_model() called ==================================
2025-06-26 12:12:22,266:INFO:Initializing create_model()
2025-06-26 12:12:22,266:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001580F2FE190>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001580E5D8450>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-26 12:12:22,266:INFO:Checking exceptions
2025-06-26 12:12:22,266:INFO:Importing libraries
2025-06-26 12:12:22,266:INFO:Copying training dataset
2025-06-26 12:12:22,277:INFO:Defining folds
2025-06-26 12:12:22,277:INFO:Declaring metric variables
2025-06-26 12:12:22,303:INFO:Importing untrained model
2025-06-26 12:12:22,306:INFO:Logistic Regression Imported successfully
2025-06-26 12:12:22,318:INFO:Starting cross validation
2025-06-26 12:12:22,319:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-26 12:12:26,764:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-26 12:12:26,767:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-26 12:12:26,815:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-26 12:12:26,867:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-26 12:12:26,916:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-26 12:12:26,921:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-26 12:12:26,991:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-26 12:12:27,026:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-26 12:12:27,027:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-26 12:12:27,043:INFO:Calculating mean and std
2025-06-26 12:12:27,044:INFO:Creating metrics dataframe
2025-06-26 12:12:27,045:INFO:Uploading results into container
2025-06-26 12:12:27,046:INFO:Uploading model into container now
2025-06-26 12:12:27,046:INFO:_master_model_container: 1
2025-06-26 12:12:27,046:INFO:_display_container: 2
2025-06-26 12:12:27,046:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4020, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-06-26 12:12:27,047:INFO:create_model() successfully completed......................................
2025-06-26 12:12:27,150:INFO:SubProcess create_model() end ==================================
2025-06-26 12:12:27,150:INFO:Creating metrics dataframe
2025-06-26 12:12:27,155:INFO:Initializing K Neighbors Classifier
2025-06-26 12:12:27,155:INFO:Total runtime is 0.08158425490061443 minutes
2025-06-26 12:12:27,159:INFO:SubProcess create_model() called ==================================
2025-06-26 12:12:27,160:INFO:Initializing create_model()
2025-06-26 12:12:27,160:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001580F2FE190>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001580E5D8450>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-26 12:12:27,160:INFO:Checking exceptions
2025-06-26 12:12:27,160:INFO:Importing libraries
2025-06-26 12:12:27,160:INFO:Copying training dataset
2025-06-26 12:12:27,165:INFO:Defining folds
2025-06-26 12:12:27,165:INFO:Declaring metric variables
2025-06-26 12:12:27,168:INFO:Importing untrained model
2025-06-26 12:12:27,172:INFO:K Neighbors Classifier Imported successfully
2025-06-26 12:12:27,179:INFO:Starting cross validation
2025-06-26 12:12:27,180:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-26 12:12:27,348:INFO:Calculating mean and std
2025-06-26 12:12:27,349:INFO:Creating metrics dataframe
2025-06-26 12:12:27,350:INFO:Uploading results into container
2025-06-26 12:12:27,351:INFO:Uploading model into container now
2025-06-26 12:12:27,351:INFO:_master_model_container: 2
2025-06-26 12:12:27,351:INFO:_display_container: 2
2025-06-26 12:12:27,351:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-06-26 12:12:27,351:INFO:create_model() successfully completed......................................
2025-06-26 12:12:27,441:INFO:SubProcess create_model() end ==================================
2025-06-26 12:12:27,441:INFO:Creating metrics dataframe
2025-06-26 12:12:27,447:INFO:Initializing Naive Bayes
2025-06-26 12:12:27,447:INFO:Total runtime is 0.0864548961321513 minutes
2025-06-26 12:12:27,449:INFO:SubProcess create_model() called ==================================
2025-06-26 12:12:27,450:INFO:Initializing create_model()
2025-06-26 12:12:27,450:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001580F2FE190>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001580E5D8450>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-26 12:12:27,450:INFO:Checking exceptions
2025-06-26 12:12:27,450:INFO:Importing libraries
2025-06-26 12:12:27,450:INFO:Copying training dataset
2025-06-26 12:12:27,454:INFO:Defining folds
2025-06-26 12:12:27,454:INFO:Declaring metric variables
2025-06-26 12:12:27,457:INFO:Importing untrained model
2025-06-26 12:12:27,462:INFO:Naive Bayes Imported successfully
2025-06-26 12:12:27,468:INFO:Starting cross validation
2025-06-26 12:12:27,469:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-26 12:12:27,557:INFO:Calculating mean and std
2025-06-26 12:12:27,558:INFO:Creating metrics dataframe
2025-06-26 12:12:27,561:INFO:Uploading results into container
2025-06-26 12:12:27,561:INFO:Uploading model into container now
2025-06-26 12:12:27,562:INFO:_master_model_container: 3
2025-06-26 12:12:27,562:INFO:_display_container: 2
2025-06-26 12:12:27,562:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-06-26 12:12:27,562:INFO:create_model() successfully completed......................................
2025-06-26 12:12:27,647:INFO:SubProcess create_model() end ==================================
2025-06-26 12:12:27,647:INFO:Creating metrics dataframe
2025-06-26 12:12:27,653:INFO:Initializing Decision Tree Classifier
2025-06-26 12:12:27,653:INFO:Total runtime is 0.08988908529281617 minutes
2025-06-26 12:12:27,656:INFO:SubProcess create_model() called ==================================
2025-06-26 12:12:27,657:INFO:Initializing create_model()
2025-06-26 12:12:27,657:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001580F2FE190>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001580E5D8450>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-26 12:12:27,657:INFO:Checking exceptions
2025-06-26 12:12:27,657:INFO:Importing libraries
2025-06-26 12:12:27,657:INFO:Copying training dataset
2025-06-26 12:12:27,663:INFO:Defining folds
2025-06-26 12:12:27,663:INFO:Declaring metric variables
2025-06-26 12:12:27,667:INFO:Importing untrained model
2025-06-26 12:12:27,670:INFO:Decision Tree Classifier Imported successfully
2025-06-26 12:12:27,678:INFO:Starting cross validation
2025-06-26 12:12:27,679:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-26 12:12:27,778:INFO:Calculating mean and std
2025-06-26 12:12:27,779:INFO:Creating metrics dataframe
2025-06-26 12:12:27,781:INFO:Uploading results into container
2025-06-26 12:12:27,781:INFO:Uploading model into container now
2025-06-26 12:12:27,782:INFO:_master_model_container: 4
2025-06-26 12:12:27,782:INFO:_display_container: 2
2025-06-26 12:12:27,782:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4020, splitter='best')
2025-06-26 12:12:27,782:INFO:create_model() successfully completed......................................
2025-06-26 12:12:27,867:INFO:SubProcess create_model() end ==================================
2025-06-26 12:12:27,867:INFO:Creating metrics dataframe
2025-06-26 12:12:27,872:INFO:Initializing SVM - Linear Kernel
2025-06-26 12:12:27,872:INFO:Total runtime is 0.09354246457417807 minutes
2025-06-26 12:12:27,876:INFO:SubProcess create_model() called ==================================
2025-06-26 12:12:27,877:INFO:Initializing create_model()
2025-06-26 12:12:27,877:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001580F2FE190>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001580E5D8450>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-26 12:12:27,877:INFO:Checking exceptions
2025-06-26 12:12:27,877:INFO:Importing libraries
2025-06-26 12:12:27,877:INFO:Copying training dataset
2025-06-26 12:12:27,882:INFO:Defining folds
2025-06-26 12:12:27,882:INFO:Declaring metric variables
2025-06-26 12:12:27,885:INFO:Importing untrained model
2025-06-26 12:12:27,890:INFO:SVM - Linear Kernel Imported successfully
2025-06-26 12:12:27,897:INFO:Starting cross validation
2025-06-26 12:12:27,898:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-26 12:12:27,937:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-26 12:12:27,941:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-26 12:12:27,982:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-26 12:12:28,005:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-26 12:12:28,009:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-26 12:12:28,022:INFO:Calculating mean and std
2025-06-26 12:12:28,023:INFO:Creating metrics dataframe
2025-06-26 12:12:28,025:INFO:Uploading results into container
2025-06-26 12:12:28,025:INFO:Uploading model into container now
2025-06-26 12:12:28,026:INFO:_master_model_container: 5
2025-06-26 12:12:28,026:INFO:_display_container: 2
2025-06-26 12:12:28,026:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=4020, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-06-26 12:12:28,026:INFO:create_model() successfully completed......................................
2025-06-26 12:12:28,113:INFO:SubProcess create_model() end ==================================
2025-06-26 12:12:28,113:INFO:Creating metrics dataframe
2025-06-26 12:12:28,120:INFO:Initializing Ridge Classifier
2025-06-26 12:12:28,120:INFO:Total runtime is 0.0976627786954244 minutes
2025-06-26 12:12:28,123:INFO:SubProcess create_model() called ==================================
2025-06-26 12:12:28,123:INFO:Initializing create_model()
2025-06-26 12:12:28,124:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001580F2FE190>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001580E5D8450>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-26 12:12:28,124:INFO:Checking exceptions
2025-06-26 12:12:28,124:INFO:Importing libraries
2025-06-26 12:12:28,124:INFO:Copying training dataset
2025-06-26 12:12:28,130:INFO:Defining folds
2025-06-26 12:12:28,130:INFO:Declaring metric variables
2025-06-26 12:12:28,132:INFO:Importing untrained model
2025-06-26 12:12:28,136:INFO:Ridge Classifier Imported successfully
2025-06-26 12:12:28,144:INFO:Starting cross validation
2025-06-26 12:12:28,145:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-26 12:12:28,221:INFO:Calculating mean and std
2025-06-26 12:12:28,221:INFO:Creating metrics dataframe
2025-06-26 12:12:28,222:INFO:Uploading results into container
2025-06-26 12:12:28,223:INFO:Uploading model into container now
2025-06-26 12:12:28,223:INFO:_master_model_container: 6
2025-06-26 12:12:28,223:INFO:_display_container: 2
2025-06-26 12:12:28,223:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=4020, solver='auto',
                tol=0.0001)
2025-06-26 12:12:28,223:INFO:create_model() successfully completed......................................
2025-06-26 12:12:28,310:INFO:SubProcess create_model() end ==================================
2025-06-26 12:12:28,310:INFO:Creating metrics dataframe
2025-06-26 12:12:28,315:INFO:Initializing Random Forest Classifier
2025-06-26 12:12:28,315:INFO:Total runtime is 0.10091906785964966 minutes
2025-06-26 12:12:28,317:INFO:SubProcess create_model() called ==================================
2025-06-26 12:12:28,318:INFO:Initializing create_model()
2025-06-26 12:12:28,318:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001580F2FE190>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001580E5D8450>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-26 12:12:28,318:INFO:Checking exceptions
2025-06-26 12:12:28,318:INFO:Importing libraries
2025-06-26 12:12:28,318:INFO:Copying training dataset
2025-06-26 12:12:28,322:INFO:Defining folds
2025-06-26 12:12:28,323:INFO:Declaring metric variables
2025-06-26 12:12:28,327:INFO:Importing untrained model
2025-06-26 12:12:28,331:INFO:Random Forest Classifier Imported successfully
2025-06-26 12:12:28,338:INFO:Starting cross validation
2025-06-26 12:12:28,338:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-26 12:12:29,031:INFO:Calculating mean and std
2025-06-26 12:12:29,032:INFO:Creating metrics dataframe
2025-06-26 12:12:29,033:INFO:Uploading results into container
2025-06-26 12:12:29,034:INFO:Uploading model into container now
2025-06-26 12:12:29,034:INFO:_master_model_container: 7
2025-06-26 12:12:29,034:INFO:_display_container: 2
2025-06-26 12:12:29,034:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=4020, verbose=0,
                       warm_start=False)
2025-06-26 12:12:29,035:INFO:create_model() successfully completed......................................
2025-06-26 12:12:29,132:INFO:SubProcess create_model() end ==================================
2025-06-26 12:12:29,133:INFO:Creating metrics dataframe
2025-06-26 12:12:29,140:INFO:Initializing Quadratic Discriminant Analysis
2025-06-26 12:12:29,140:INFO:Total runtime is 0.11467529932657877 minutes
2025-06-26 12:12:29,145:INFO:SubProcess create_model() called ==================================
2025-06-26 12:12:29,145:INFO:Initializing create_model()
2025-06-26 12:12:29,145:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001580F2FE190>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001580E5D8450>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-26 12:12:29,145:INFO:Checking exceptions
2025-06-26 12:12:29,145:INFO:Importing libraries
2025-06-26 12:12:29,145:INFO:Copying training dataset
2025-06-26 12:12:29,150:INFO:Defining folds
2025-06-26 12:12:29,150:INFO:Declaring metric variables
2025-06-26 12:12:29,155:INFO:Importing untrained model
2025-06-26 12:12:29,160:INFO:Quadratic Discriminant Analysis Imported successfully
2025-06-26 12:12:29,167:INFO:Starting cross validation
2025-06-26 12:12:29,168:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-26 12:12:29,198:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-26 12:12:29,198:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-26 12:12:29,199:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-26 12:12:29,201:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-26 12:12:29,208:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-26 12:12:29,213:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-26 12:12:29,216:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-26 12:12:29,228:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-26 12:12:29,233:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-26 12:12:29,235:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-26 12:12:29,258:INFO:Calculating mean and std
2025-06-26 12:12:29,260:INFO:Creating metrics dataframe
2025-06-26 12:12:29,262:INFO:Uploading results into container
2025-06-26 12:12:29,262:INFO:Uploading model into container now
2025-06-26 12:12:29,262:INFO:_master_model_container: 8
2025-06-26 12:12:29,263:INFO:_display_container: 2
2025-06-26 12:12:29,263:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-06-26 12:12:29,263:INFO:create_model() successfully completed......................................
2025-06-26 12:12:29,358:INFO:SubProcess create_model() end ==================================
2025-06-26 12:12:29,358:INFO:Creating metrics dataframe
2025-06-26 12:12:29,368:INFO:Initializing Ada Boost Classifier
2025-06-26 12:12:29,369:INFO:Total runtime is 0.11848613421122232 minutes
2025-06-26 12:12:29,372:INFO:SubProcess create_model() called ==================================
2025-06-26 12:12:29,372:INFO:Initializing create_model()
2025-06-26 12:12:29,372:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001580F2FE190>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001580E5D8450>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-26 12:12:29,372:INFO:Checking exceptions
2025-06-26 12:12:29,373:INFO:Importing libraries
2025-06-26 12:12:29,373:INFO:Copying training dataset
2025-06-26 12:12:29,379:INFO:Defining folds
2025-06-26 12:12:29,379:INFO:Declaring metric variables
2025-06-26 12:12:29,382:INFO:Importing untrained model
2025-06-26 12:12:29,385:INFO:Ada Boost Classifier Imported successfully
2025-06-26 12:12:29,392:INFO:Starting cross validation
2025-06-26 12:12:29,394:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-26 12:12:29,413:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-26 12:12:29,414:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-26 12:12:29,416:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-26 12:12:29,419:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-26 12:12:29,419:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-26 12:12:29,421:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-26 12:12:29,429:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-26 12:12:29,445:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-26 12:12:29,607:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-26 12:12:29,610:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-26 12:12:29,758:INFO:Calculating mean and std
2025-06-26 12:12:29,759:INFO:Creating metrics dataframe
2025-06-26 12:12:29,761:INFO:Uploading results into container
2025-06-26 12:12:29,762:INFO:Uploading model into container now
2025-06-26 12:12:29,762:INFO:_master_model_container: 9
2025-06-26 12:12:29,762:INFO:_display_container: 2
2025-06-26 12:12:29,763:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=4020)
2025-06-26 12:12:29,763:INFO:create_model() successfully completed......................................
2025-06-26 12:12:29,864:INFO:SubProcess create_model() end ==================================
2025-06-26 12:12:29,864:INFO:Creating metrics dataframe
2025-06-26 12:12:29,871:INFO:Initializing Gradient Boosting Classifier
2025-06-26 12:12:29,872:INFO:Total runtime is 0.12687317530314127 minutes
2025-06-26 12:12:29,876:INFO:SubProcess create_model() called ==================================
2025-06-26 12:12:29,876:INFO:Initializing create_model()
2025-06-26 12:12:29,876:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001580F2FE190>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001580E5D8450>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-26 12:12:29,876:INFO:Checking exceptions
2025-06-26 12:12:29,876:INFO:Importing libraries
2025-06-26 12:12:29,877:INFO:Copying training dataset
2025-06-26 12:12:29,881:INFO:Defining folds
2025-06-26 12:12:29,882:INFO:Declaring metric variables
2025-06-26 12:12:29,884:INFO:Importing untrained model
2025-06-26 12:12:29,889:INFO:Gradient Boosting Classifier Imported successfully
2025-06-26 12:12:29,896:INFO:Starting cross validation
2025-06-26 12:12:29,897:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-26 12:12:30,563:INFO:Calculating mean and std
2025-06-26 12:12:30,564:INFO:Creating metrics dataframe
2025-06-26 12:12:30,565:INFO:Uploading results into container
2025-06-26 12:12:30,566:INFO:Uploading model into container now
2025-06-26 12:12:30,566:INFO:_master_model_container: 10
2025-06-26 12:12:30,566:INFO:_display_container: 2
2025-06-26 12:12:30,567:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=4020, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-06-26 12:12:30,567:INFO:create_model() successfully completed......................................
2025-06-26 12:12:30,664:INFO:SubProcess create_model() end ==================================
2025-06-26 12:12:30,664:INFO:Creating metrics dataframe
2025-06-26 12:12:30,671:INFO:Initializing Linear Discriminant Analysis
2025-06-26 12:12:30,672:INFO:Total runtime is 0.1402052879333496 minutes
2025-06-26 12:12:30,681:INFO:SubProcess create_model() called ==================================
2025-06-26 12:12:30,682:INFO:Initializing create_model()
2025-06-26 12:12:30,682:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001580F2FE190>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001580E5D8450>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-26 12:12:30,682:INFO:Checking exceptions
2025-06-26 12:12:30,682:INFO:Importing libraries
2025-06-26 12:12:30,682:INFO:Copying training dataset
2025-06-26 12:12:30,688:INFO:Defining folds
2025-06-26 12:12:30,688:INFO:Declaring metric variables
2025-06-26 12:12:30,693:INFO:Importing untrained model
2025-06-26 12:12:30,698:INFO:Linear Discriminant Analysis Imported successfully
2025-06-26 12:12:30,704:INFO:Starting cross validation
2025-06-26 12:12:30,705:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-26 12:12:30,795:INFO:Calculating mean and std
2025-06-26 12:12:30,795:INFO:Creating metrics dataframe
2025-06-26 12:12:30,796:INFO:Uploading results into container
2025-06-26 12:12:30,797:INFO:Uploading model into container now
2025-06-26 12:12:30,797:INFO:_master_model_container: 11
2025-06-26 12:12:30,797:INFO:_display_container: 2
2025-06-26 12:12:30,798:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-06-26 12:12:30,798:INFO:create_model() successfully completed......................................
2025-06-26 12:12:30,932:INFO:SubProcess create_model() end ==================================
2025-06-26 12:12:30,932:INFO:Creating metrics dataframe
2025-06-26 12:12:30,943:INFO:Initializing Extra Trees Classifier
2025-06-26 12:12:30,944:INFO:Total runtime is 0.1447402596473694 minutes
2025-06-26 12:12:30,947:INFO:SubProcess create_model() called ==================================
2025-06-26 12:12:30,947:INFO:Initializing create_model()
2025-06-26 12:12:30,947:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001580F2FE190>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001580E5D8450>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-26 12:12:30,947:INFO:Checking exceptions
2025-06-26 12:12:30,947:INFO:Importing libraries
2025-06-26 12:12:30,947:INFO:Copying training dataset
2025-06-26 12:12:30,954:INFO:Defining folds
2025-06-26 12:12:30,954:INFO:Declaring metric variables
2025-06-26 12:12:30,958:INFO:Importing untrained model
2025-06-26 12:12:30,963:INFO:Extra Trees Classifier Imported successfully
2025-06-26 12:12:30,969:INFO:Starting cross validation
2025-06-26 12:12:30,970:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-26 12:12:31,491:INFO:Calculating mean and std
2025-06-26 12:12:31,492:INFO:Creating metrics dataframe
2025-06-26 12:12:31,493:INFO:Uploading results into container
2025-06-26 12:12:31,494:INFO:Uploading model into container now
2025-06-26 12:12:31,494:INFO:_master_model_container: 12
2025-06-26 12:12:31,494:INFO:_display_container: 2
2025-06-26 12:12:31,495:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=4020, verbose=0,
                     warm_start=False)
2025-06-26 12:12:31,495:INFO:create_model() successfully completed......................................
2025-06-26 12:12:31,594:INFO:SubProcess create_model() end ==================================
2025-06-26 12:12:31,594:INFO:Creating metrics dataframe
2025-06-26 12:12:31,602:INFO:Initializing Light Gradient Boosting Machine
2025-06-26 12:12:31,602:INFO:Total runtime is 0.15569858551025392 minutes
2025-06-26 12:12:31,605:INFO:SubProcess create_model() called ==================================
2025-06-26 12:12:31,605:INFO:Initializing create_model()
2025-06-26 12:12:31,605:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001580F2FE190>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001580E5D8450>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-26 12:12:31,605:INFO:Checking exceptions
2025-06-26 12:12:31,605:INFO:Importing libraries
2025-06-26 12:12:31,605:INFO:Copying training dataset
2025-06-26 12:12:31,611:INFO:Defining folds
2025-06-26 12:12:31,611:INFO:Declaring metric variables
2025-06-26 12:12:31,615:INFO:Importing untrained model
2025-06-26 12:12:31,619:INFO:Light Gradient Boosting Machine Imported successfully
2025-06-26 12:12:31,626:INFO:Starting cross validation
2025-06-26 12:12:31,627:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-26 12:12:32,433:INFO:Calculating mean and std
2025-06-26 12:12:32,434:INFO:Creating metrics dataframe
2025-06-26 12:12:32,436:INFO:Uploading results into container
2025-06-26 12:12:32,437:INFO:Uploading model into container now
2025-06-26 12:12:32,437:INFO:_master_model_container: 13
2025-06-26 12:12:32,438:INFO:_display_container: 2
2025-06-26 12:12:32,438:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=4020, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-06-26 12:12:32,438:INFO:create_model() successfully completed......................................
2025-06-26 12:12:32,559:INFO:SubProcess create_model() end ==================================
2025-06-26 12:12:32,559:INFO:Creating metrics dataframe
2025-06-26 12:12:32,566:INFO:Initializing Dummy Classifier
2025-06-26 12:12:32,567:INFO:Total runtime is 0.17178646326065064 minutes
2025-06-26 12:12:32,569:INFO:SubProcess create_model() called ==================================
2025-06-26 12:12:32,570:INFO:Initializing create_model()
2025-06-26 12:12:32,570:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001580F2FE190>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001580E5D8450>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-26 12:12:32,570:INFO:Checking exceptions
2025-06-26 12:12:32,570:INFO:Importing libraries
2025-06-26 12:12:32,570:INFO:Copying training dataset
2025-06-26 12:12:32,575:INFO:Defining folds
2025-06-26 12:12:32,575:INFO:Declaring metric variables
2025-06-26 12:12:32,579:INFO:Importing untrained model
2025-06-26 12:12:32,582:INFO:Dummy Classifier Imported successfully
2025-06-26 12:12:32,587:INFO:Starting cross validation
2025-06-26 12:12:32,588:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-26 12:12:32,662:INFO:Calculating mean and std
2025-06-26 12:12:32,662:INFO:Creating metrics dataframe
2025-06-26 12:12:32,663:INFO:Uploading results into container
2025-06-26 12:12:32,664:INFO:Uploading model into container now
2025-06-26 12:12:32,664:INFO:_master_model_container: 14
2025-06-26 12:12:32,664:INFO:_display_container: 2
2025-06-26 12:12:32,664:INFO:DummyClassifier(constant=None, random_state=4020, strategy='prior')
2025-06-26 12:12:32,664:INFO:create_model() successfully completed......................................
2025-06-26 12:12:32,751:INFO:SubProcess create_model() end ==================================
2025-06-26 12:12:32,751:INFO:Creating metrics dataframe
2025-06-26 12:12:32,760:WARNING:d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-06-26 12:12:32,767:INFO:Initializing create_model()
2025-06-26 12:12:32,768:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001580F2FE190>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=4020, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-26 12:12:32,768:INFO:Checking exceptions
2025-06-26 12:12:32,769:INFO:Importing libraries
2025-06-26 12:12:32,769:INFO:Copying training dataset
2025-06-26 12:12:32,773:INFO:Defining folds
2025-06-26 12:12:32,773:INFO:Declaring metric variables
2025-06-26 12:12:32,773:INFO:Importing untrained model
2025-06-26 12:12:32,773:INFO:Declaring custom model
2025-06-26 12:12:32,774:INFO:Extra Trees Classifier Imported successfully
2025-06-26 12:12:32,775:INFO:Cross validation set to False
2025-06-26 12:12:32,775:INFO:Fitting Model
2025-06-26 12:12:32,877:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=4020, verbose=0,
                     warm_start=False)
2025-06-26 12:12:32,878:INFO:create_model() successfully completed......................................
2025-06-26 12:12:32,992:INFO:_master_model_container: 14
2025-06-26 12:12:32,992:INFO:_display_container: 2
2025-06-26 12:12:32,993:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=4020, verbose=0,
                     warm_start=False)
2025-06-26 12:12:32,993:INFO:compare_models() successfully completed......................................
2025-06-30 10:11:20,959:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-30 10:11:20,960:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-30 10:11:20,960:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-30 10:11:20,960:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-30 10:11:21,421:INFO:PyCaret ClassificationExperiment
2025-06-30 10:11:21,422:INFO:Logging name: clf-default-name
2025-06-30 10:11:21,422:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-06-30 10:11:21,422:INFO:version 3.3.2
2025-06-30 10:11:21,422:INFO:Initializing setup()
2025-06-30 10:11:21,422:INFO:self.USI: c4db
2025-06-30 10:11:21,422:INFO:self._variable_keys: {'X', 'y_test', 'data', 'fold_generator', 'fix_imbalance', 'X_test', 'n_jobs_param', 'y_train', 'memory', 'fold_shuffle_param', 'idx', 'exp_name_log', 'seed', 'is_multiclass', 'html_param', 'pipeline', 'gpu_param', 'target_param', '_ml_usecase', 'log_plots_param', 'exp_id', 'logging_param', 'fold_groups_param', 'y', 'X_train', 'USI', 'gpu_n_jobs_param', '_available_plots'}
2025-06-30 10:11:21,422:INFO:Checking environment
2025-06-30 10:11:21,422:INFO:python_version: 3.11.13
2025-06-30 10:11:21,422:INFO:python_build: ('main', 'Jun  5 2025 13:03:15')
2025-06-30 10:11:21,422:INFO:machine: AMD64
2025-06-30 10:11:21,423:INFO:platform: Windows-10-10.0.22631-SP0
2025-06-30 10:11:21,430:INFO:Memory: svmem(total=12674457600, available=2710499328, percent=78.6, used=9963958272, free=2710499328)
2025-06-30 10:11:21,431:INFO:Physical Core: 4
2025-06-30 10:11:21,431:INFO:Logical Core: 8
2025-06-30 10:11:21,431:INFO:Checking libraries
2025-06-30 10:11:21,431:INFO:System:
2025-06-30 10:11:21,431:INFO:    python: 3.11.13 | packaged by Anaconda, Inc. | (main, Jun  5 2025, 13:03:15) [MSC v.1929 64 bit (AMD64)]
2025-06-30 10:11:21,431:INFO:executable: d:\ML_notes\.conda\python.exe
2025-06-30 10:11:21,431:INFO:   machine: Windows-10-10.0.22631-SP0
2025-06-30 10:11:21,431:INFO:PyCaret required dependencies:
2025-06-30 10:11:21,537:INFO:                 pip: 25.1
2025-06-30 10:11:21,537:INFO:          setuptools: 78.1.1
2025-06-30 10:11:21,537:INFO:             pycaret: 3.3.2
2025-06-30 10:11:21,537:INFO:             IPython: 9.3.0
2025-06-30 10:11:21,537:INFO:          ipywidgets: 8.1.7
2025-06-30 10:11:21,537:INFO:                tqdm: 4.67.1
2025-06-30 10:11:21,537:INFO:               numpy: 1.26.4
2025-06-30 10:11:21,537:INFO:              pandas: 2.1.4
2025-06-30 10:11:21,537:INFO:              jinja2: 3.1.6
2025-06-30 10:11:21,537:INFO:               scipy: 1.11.4
2025-06-30 10:11:21,537:INFO:              joblib: 1.3.2
2025-06-30 10:11:21,537:INFO:             sklearn: 1.4.2
2025-06-30 10:11:21,538:INFO:                pyod: 2.0.5
2025-06-30 10:11:21,538:INFO:            imblearn: 0.13.0
2025-06-30 10:11:21,538:INFO:   category_encoders: 2.7.0
2025-06-30 10:11:21,538:INFO:            lightgbm: 4.6.0
2025-06-30 10:11:21,538:INFO:               numba: 0.61.0
2025-06-30 10:11:21,538:INFO:            requests: 2.32.4
2025-06-30 10:11:21,538:INFO:          matplotlib: 3.7.5
2025-06-30 10:11:21,538:INFO:          scikitplot: 0.3.7
2025-06-30 10:11:21,538:INFO:         yellowbrick: 1.5
2025-06-30 10:11:21,538:INFO:              plotly: 5.24.1
2025-06-30 10:11:21,538:INFO:    plotly-resampler: Not installed
2025-06-30 10:11:21,538:INFO:             kaleido: 1.0.0
2025-06-30 10:11:21,538:INFO:           schemdraw: 0.15
2025-06-30 10:11:21,538:INFO:         statsmodels: 0.14.4
2025-06-30 10:11:21,538:INFO:              sktime: 0.26.0
2025-06-30 10:11:21,539:INFO:               tbats: 1.1.3
2025-06-30 10:11:21,539:INFO:            pmdarima: 2.0.4
2025-06-30 10:11:21,539:INFO:              psutil: 7.0.0
2025-06-30 10:11:21,539:INFO:          markupsafe: 3.0.2
2025-06-30 10:11:21,539:INFO:             pickle5: Not installed
2025-06-30 10:11:21,539:INFO:         cloudpickle: 3.1.1
2025-06-30 10:11:21,539:INFO:         deprecation: 2.1.0
2025-06-30 10:11:21,539:INFO:              xxhash: 3.5.0
2025-06-30 10:11:21,539:INFO:           wurlitzer: Not installed
2025-06-30 10:11:21,539:INFO:PyCaret optional dependencies:
2025-06-30 10:11:21,557:INFO:                shap: Not installed
2025-06-30 10:11:21,557:INFO:           interpret: Not installed
2025-06-30 10:11:21,557:INFO:                umap: Not installed
2025-06-30 10:11:21,557:INFO:     ydata_profiling: 4.16.1
2025-06-30 10:11:21,557:INFO:  explainerdashboard: Not installed
2025-06-30 10:11:21,558:INFO:             autoviz: Not installed
2025-06-30 10:11:21,558:INFO:           fairlearn: Not installed
2025-06-30 10:11:21,558:INFO:          deepchecks: Not installed
2025-06-30 10:11:21,558:INFO:             xgboost: Not installed
2025-06-30 10:11:21,558:INFO:            catboost: Not installed
2025-06-30 10:11:21,558:INFO:              kmodes: Not installed
2025-06-30 10:11:21,558:INFO:             mlxtend: Not installed
2025-06-30 10:11:21,558:INFO:       statsforecast: Not installed
2025-06-30 10:11:21,558:INFO:        tune_sklearn: Not installed
2025-06-30 10:11:21,558:INFO:                 ray: Not installed
2025-06-30 10:11:21,558:INFO:            hyperopt: Not installed
2025-06-30 10:11:21,558:INFO:              optuna: Not installed
2025-06-30 10:11:21,558:INFO:               skopt: Not installed
2025-06-30 10:11:21,559:INFO:              mlflow: Not installed
2025-06-30 10:11:21,559:INFO:              gradio: Not installed
2025-06-30 10:11:21,559:INFO:             fastapi: Not installed
2025-06-30 10:11:21,559:INFO:             uvicorn: Not installed
2025-06-30 10:11:21,559:INFO:              m2cgen: Not installed
2025-06-30 10:11:21,559:INFO:           evidently: Not installed
2025-06-30 10:11:21,559:INFO:               fugue: Not installed
2025-06-30 10:11:21,559:INFO:           streamlit: Not installed
2025-06-30 10:11:21,559:INFO:             prophet: Not installed
2025-06-30 10:11:21,559:INFO:None
2025-06-30 10:11:21,559:INFO:Set up data.
2025-06-30 10:11:21,567:INFO:Set up folding strategy.
2025-06-30 10:11:21,567:INFO:Set up train/test split.
2025-06-30 10:11:21,576:INFO:Set up index.
2025-06-30 10:11:21,577:INFO:Assigning column types.
2025-06-30 10:11:21,582:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-06-30 10:11:21,648:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-30 10:11:21,657:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-30 10:11:21,735:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-30 10:11:21,735:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-30 10:11:21,809:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-30 10:11:21,810:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-30 10:11:21,853:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-30 10:11:21,854:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-30 10:11:21,854:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-06-30 10:11:21,931:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-30 10:11:21,979:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-30 10:11:21,979:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-30 10:11:22,060:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-30 10:11:22,104:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-30 10:11:22,104:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-30 10:11:22,105:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-06-30 10:11:22,209:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-30 10:11:22,210:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-30 10:11:22,329:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-30 10:11:22,329:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-30 10:11:22,332:INFO:Preparing preprocessing pipeline...
2025-06-30 10:11:22,334:INFO:Set up simple imputation.
2025-06-30 10:11:22,402:INFO:Finished creating preprocessing pipeline.
2025-06-30 10:11:22,407:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\YOGA\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'Annual_Income',
                                             'Total_Spend', 'Years_as_Customer',
                                             'Num_of_Purchases',
                                             'Average_Transaction_Amount',
                                             'Num_of_Returns',
                                             'Num_of_Support_Contacts',
                                             'Satisfaction_Score',
                                             'Last_Purchase_Days_Ago',
                                             'Gender_Fem...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-06-30 10:11:22,407:INFO:Creating final display dataframe.
2025-06-30 10:11:22,544:INFO:Setup _display_container:                     Description              Value
0                    Session id               3448
1                        Target  Target_Churn_True
2                   Target type             Binary
3           Original data shape         (1000, 20)
4        Transformed data shape         (1000, 20)
5   Transformed train set shape          (700, 20)
6    Transformed test set shape          (300, 20)
7              Numeric features                 19
8                    Preprocess               True
9               Imputation type             simple
10           Numeric imputation               mean
11       Categorical imputation               mode
12               Fold Generator    StratifiedKFold
13                  Fold Number                 10
14                     CPU Jobs                 -1
15                      Use GPU              False
16               Log Experiment              False
17              Experiment Name   clf-default-name
18                          USI               c4db
2025-06-30 10:11:22,673:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-30 10:11:22,674:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-30 10:11:22,783:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-30 10:11:22,783:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-30 10:11:22,785:INFO:setup() successfully completed in 1.37s...............
2025-06-30 10:11:22,786:INFO:Initializing compare_models()
2025-06-30 10:11:22,786:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BF21E75E50>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001BF21E75E50>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2025-06-30 10:11:22,786:INFO:Checking exceptions
2025-06-30 10:11:22,796:INFO:Preparing display monitor
2025-06-30 10:11:22,834:INFO:Initializing Logistic Regression
2025-06-30 10:11:22,834:INFO:Total runtime is 0.0 minutes
2025-06-30 10:11:22,841:INFO:SubProcess create_model() called ==================================
2025-06-30 10:11:22,841:INFO:Initializing create_model()
2025-06-30 10:11:22,841:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BF21E75E50>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BF270C7210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-30 10:11:22,843:INFO:Checking exceptions
2025-06-30 10:11:22,843:INFO:Importing libraries
2025-06-30 10:11:22,843:INFO:Copying training dataset
2025-06-30 10:11:22,852:INFO:Defining folds
2025-06-30 10:11:22,854:INFO:Declaring metric variables
2025-06-30 10:11:22,862:INFO:Importing untrained model
2025-06-30 10:11:22,867:INFO:Logistic Regression Imported successfully
2025-06-30 10:11:22,880:INFO:Starting cross validation
2025-06-30 10:11:22,881:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-30 10:11:29,461:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-30 10:11:29,461:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-30 10:11:29,461:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-30 10:11:29,496:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-30 10:11:29,560:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-30 10:11:29,641:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-30 10:11:29,669:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-30 10:11:29,769:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-30 10:11:29,775:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-30 10:11:29,779:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-30 10:11:29,802:INFO:Calculating mean and std
2025-06-30 10:11:29,803:INFO:Creating metrics dataframe
2025-06-30 10:11:29,808:INFO:Uploading results into container
2025-06-30 10:11:29,809:INFO:Uploading model into container now
2025-06-30 10:11:29,809:INFO:_master_model_container: 1
2025-06-30 10:11:29,810:INFO:_display_container: 2
2025-06-30 10:11:29,810:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3448, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-06-30 10:11:29,810:INFO:create_model() successfully completed......................................
2025-06-30 10:11:29,930:INFO:SubProcess create_model() end ==================================
2025-06-30 10:11:29,930:INFO:Creating metrics dataframe
2025-06-30 10:11:29,942:INFO:Initializing K Neighbors Classifier
2025-06-30 10:11:29,942:INFO:Total runtime is 0.11845903396606446 minutes
2025-06-30 10:11:29,945:INFO:SubProcess create_model() called ==================================
2025-06-30 10:11:29,946:INFO:Initializing create_model()
2025-06-30 10:11:29,946:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BF21E75E50>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BF270C7210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-30 10:11:29,946:INFO:Checking exceptions
2025-06-30 10:11:29,946:INFO:Importing libraries
2025-06-30 10:11:29,946:INFO:Copying training dataset
2025-06-30 10:11:29,952:INFO:Defining folds
2025-06-30 10:11:29,952:INFO:Declaring metric variables
2025-06-30 10:11:29,958:INFO:Importing untrained model
2025-06-30 10:11:29,964:INFO:K Neighbors Classifier Imported successfully
2025-06-30 10:11:29,976:INFO:Starting cross validation
2025-06-30 10:11:29,977:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-30 10:11:30,284:INFO:Calculating mean and std
2025-06-30 10:11:30,285:INFO:Creating metrics dataframe
2025-06-30 10:11:30,288:INFO:Uploading results into container
2025-06-30 10:11:30,288:INFO:Uploading model into container now
2025-06-30 10:11:30,290:INFO:_master_model_container: 2
2025-06-30 10:11:30,290:INFO:_display_container: 2
2025-06-30 10:11:30,290:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-06-30 10:11:30,290:INFO:create_model() successfully completed......................................
2025-06-30 10:11:30,398:INFO:SubProcess create_model() end ==================================
2025-06-30 10:11:30,398:INFO:Creating metrics dataframe
2025-06-30 10:11:30,408:INFO:Initializing Naive Bayes
2025-06-30 10:11:30,408:INFO:Total runtime is 0.12622119983037314 minutes
2025-06-30 10:11:30,413:INFO:SubProcess create_model() called ==================================
2025-06-30 10:11:30,413:INFO:Initializing create_model()
2025-06-30 10:11:30,413:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BF21E75E50>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BF270C7210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-30 10:11:30,413:INFO:Checking exceptions
2025-06-30 10:11:30,413:INFO:Importing libraries
2025-06-30 10:11:30,413:INFO:Copying training dataset
2025-06-30 10:11:30,419:INFO:Defining folds
2025-06-30 10:11:30,419:INFO:Declaring metric variables
2025-06-30 10:11:30,426:INFO:Importing untrained model
2025-06-30 10:11:30,432:INFO:Naive Bayes Imported successfully
2025-06-30 10:11:30,440:INFO:Starting cross validation
2025-06-30 10:11:30,441:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-30 10:11:30,544:INFO:Calculating mean and std
2025-06-30 10:11:30,545:INFO:Creating metrics dataframe
2025-06-30 10:11:30,547:INFO:Uploading results into container
2025-06-30 10:11:30,548:INFO:Uploading model into container now
2025-06-30 10:11:30,549:INFO:_master_model_container: 3
2025-06-30 10:11:30,549:INFO:_display_container: 2
2025-06-30 10:11:30,550:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-06-30 10:11:30,550:INFO:create_model() successfully completed......................................
2025-06-30 10:11:30,666:INFO:SubProcess create_model() end ==================================
2025-06-30 10:11:30,666:INFO:Creating metrics dataframe
2025-06-30 10:11:30,676:INFO:Initializing Decision Tree Classifier
2025-06-30 10:11:30,676:INFO:Total runtime is 0.13069679737091067 minutes
2025-06-30 10:11:30,680:INFO:SubProcess create_model() called ==================================
2025-06-30 10:11:30,681:INFO:Initializing create_model()
2025-06-30 10:11:30,681:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BF21E75E50>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BF270C7210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-30 10:11:30,681:INFO:Checking exceptions
2025-06-30 10:11:30,681:INFO:Importing libraries
2025-06-30 10:11:30,681:INFO:Copying training dataset
2025-06-30 10:11:30,691:INFO:Defining folds
2025-06-30 10:11:30,691:INFO:Declaring metric variables
2025-06-30 10:11:30,695:INFO:Importing untrained model
2025-06-30 10:11:30,701:INFO:Decision Tree Classifier Imported successfully
2025-06-30 10:11:30,712:INFO:Starting cross validation
2025-06-30 10:11:30,714:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-30 10:11:30,833:INFO:Calculating mean and std
2025-06-30 10:11:30,834:INFO:Creating metrics dataframe
2025-06-30 10:11:30,836:INFO:Uploading results into container
2025-06-30 10:11:30,836:INFO:Uploading model into container now
2025-06-30 10:11:30,837:INFO:_master_model_container: 4
2025-06-30 10:11:30,837:INFO:_display_container: 2
2025-06-30 10:11:30,837:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3448, splitter='best')
2025-06-30 10:11:30,837:INFO:create_model() successfully completed......................................
2025-06-30 10:11:30,968:INFO:SubProcess create_model() end ==================================
2025-06-30 10:11:30,968:INFO:Creating metrics dataframe
2025-06-30 10:11:30,980:INFO:Initializing SVM - Linear Kernel
2025-06-30 10:11:30,980:INFO:Total runtime is 0.13575672308603925 minutes
2025-06-30 10:11:30,984:INFO:SubProcess create_model() called ==================================
2025-06-30 10:11:30,984:INFO:Initializing create_model()
2025-06-30 10:11:30,984:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BF21E75E50>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BF270C7210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-30 10:11:30,985:INFO:Checking exceptions
2025-06-30 10:11:30,985:INFO:Importing libraries
2025-06-30 10:11:30,985:INFO:Copying training dataset
2025-06-30 10:11:30,995:INFO:Defining folds
2025-06-30 10:11:30,995:INFO:Declaring metric variables
2025-06-30 10:11:31,001:INFO:Importing untrained model
2025-06-30 10:11:31,010:INFO:SVM - Linear Kernel Imported successfully
2025-06-30 10:11:31,020:INFO:Starting cross validation
2025-06-30 10:11:31,023:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-30 10:11:31,106:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-30 10:11:31,106:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-30 10:11:31,106:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-30 10:11:31,107:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-30 10:11:31,133:INFO:Calculating mean and std
2025-06-30 10:11:31,134:INFO:Creating metrics dataframe
2025-06-30 10:11:31,136:INFO:Uploading results into container
2025-06-30 10:11:31,139:INFO:Uploading model into container now
2025-06-30 10:11:31,140:INFO:_master_model_container: 5
2025-06-30 10:11:31,140:INFO:_display_container: 2
2025-06-30 10:11:31,141:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=3448, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-06-30 10:11:31,141:INFO:create_model() successfully completed......................................
2025-06-30 10:11:31,261:INFO:SubProcess create_model() end ==================================
2025-06-30 10:11:31,262:INFO:Creating metrics dataframe
2025-06-30 10:11:31,271:INFO:Initializing Ridge Classifier
2025-06-30 10:11:31,272:INFO:Total runtime is 0.14061971505482995 minutes
2025-06-30 10:11:31,278:INFO:SubProcess create_model() called ==================================
2025-06-30 10:11:31,278:INFO:Initializing create_model()
2025-06-30 10:11:31,278:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BF21E75E50>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BF270C7210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-30 10:11:31,279:INFO:Checking exceptions
2025-06-30 10:11:31,279:INFO:Importing libraries
2025-06-30 10:11:31,279:INFO:Copying training dataset
2025-06-30 10:11:31,284:INFO:Defining folds
2025-06-30 10:11:31,284:INFO:Declaring metric variables
2025-06-30 10:11:31,293:INFO:Importing untrained model
2025-06-30 10:11:31,298:INFO:Ridge Classifier Imported successfully
2025-06-30 10:11:31,305:INFO:Starting cross validation
2025-06-30 10:11:31,307:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-30 10:11:31,416:INFO:Calculating mean and std
2025-06-30 10:11:31,417:INFO:Creating metrics dataframe
2025-06-30 10:11:31,419:INFO:Uploading results into container
2025-06-30 10:11:31,420:INFO:Uploading model into container now
2025-06-30 10:11:31,420:INFO:_master_model_container: 6
2025-06-30 10:11:31,420:INFO:_display_container: 2
2025-06-30 10:11:31,421:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=3448, solver='auto',
                tol=0.0001)
2025-06-30 10:11:31,421:INFO:create_model() successfully completed......................................
2025-06-30 10:11:31,540:INFO:SubProcess create_model() end ==================================
2025-06-30 10:11:31,540:INFO:Creating metrics dataframe
2025-06-30 10:11:31,552:INFO:Initializing Random Forest Classifier
2025-06-30 10:11:31,552:INFO:Total runtime is 0.14528505404790246 minutes
2025-06-30 10:11:31,559:INFO:SubProcess create_model() called ==================================
2025-06-30 10:11:31,559:INFO:Initializing create_model()
2025-06-30 10:11:31,561:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BF21E75E50>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BF270C7210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-30 10:11:31,561:INFO:Checking exceptions
2025-06-30 10:11:31,561:INFO:Importing libraries
2025-06-30 10:11:31,561:INFO:Copying training dataset
2025-06-30 10:11:31,569:INFO:Defining folds
2025-06-30 10:11:31,570:INFO:Declaring metric variables
2025-06-30 10:11:31,577:INFO:Importing untrained model
2025-06-30 10:11:31,582:INFO:Random Forest Classifier Imported successfully
2025-06-30 10:11:31,596:INFO:Starting cross validation
2025-06-30 10:11:31,597:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-30 10:11:32,521:INFO:Calculating mean and std
2025-06-30 10:11:32,525:INFO:Creating metrics dataframe
2025-06-30 10:11:32,527:INFO:Uploading results into container
2025-06-30 10:11:32,527:INFO:Uploading model into container now
2025-06-30 10:11:32,528:INFO:_master_model_container: 7
2025-06-30 10:11:32,528:INFO:_display_container: 2
2025-06-30 10:11:32,529:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=3448, verbose=0,
                       warm_start=False)
2025-06-30 10:11:32,529:INFO:create_model() successfully completed......................................
2025-06-30 10:11:32,670:INFO:SubProcess create_model() end ==================================
2025-06-30 10:11:32,670:INFO:Creating metrics dataframe
2025-06-30 10:11:32,680:INFO:Initializing Quadratic Discriminant Analysis
2025-06-30 10:11:32,681:INFO:Total runtime is 0.16411198377609257 minutes
2025-06-30 10:11:32,684:INFO:SubProcess create_model() called ==================================
2025-06-30 10:11:32,684:INFO:Initializing create_model()
2025-06-30 10:11:32,684:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BF21E75E50>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BF270C7210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-30 10:11:32,684:INFO:Checking exceptions
2025-06-30 10:11:32,685:INFO:Importing libraries
2025-06-30 10:11:32,685:INFO:Copying training dataset
2025-06-30 10:11:32,696:INFO:Defining folds
2025-06-30 10:11:32,696:INFO:Declaring metric variables
2025-06-30 10:11:32,701:INFO:Importing untrained model
2025-06-30 10:11:32,707:INFO:Quadratic Discriminant Analysis Imported successfully
2025-06-30 10:11:32,714:INFO:Starting cross validation
2025-06-30 10:11:32,716:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-30 10:11:32,771:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-30 10:11:32,771:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-30 10:11:32,771:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-30 10:11:32,771:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-30 10:11:32,771:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-30 10:11:32,771:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-30 10:11:32,772:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-30 10:11:32,773:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-30 10:11:32,806:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-30 10:11:32,810:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-30 10:11:32,826:INFO:Calculating mean and std
2025-06-30 10:11:32,828:INFO:Creating metrics dataframe
2025-06-30 10:11:32,830:INFO:Uploading results into container
2025-06-30 10:11:32,830:INFO:Uploading model into container now
2025-06-30 10:11:32,831:INFO:_master_model_container: 8
2025-06-30 10:11:32,831:INFO:_display_container: 2
2025-06-30 10:11:32,832:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-06-30 10:11:32,832:INFO:create_model() successfully completed......................................
2025-06-30 10:11:32,930:INFO:SubProcess create_model() end ==================================
2025-06-30 10:11:32,930:INFO:Creating metrics dataframe
2025-06-30 10:11:32,942:INFO:Initializing Ada Boost Classifier
2025-06-30 10:11:32,942:INFO:Total runtime is 0.1684585531552633 minutes
2025-06-30 10:11:32,948:INFO:SubProcess create_model() called ==================================
2025-06-30 10:11:32,949:INFO:Initializing create_model()
2025-06-30 10:11:32,949:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BF21E75E50>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BF270C7210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-30 10:11:32,949:INFO:Checking exceptions
2025-06-30 10:11:32,950:INFO:Importing libraries
2025-06-30 10:11:32,950:INFO:Copying training dataset
2025-06-30 10:11:32,959:INFO:Defining folds
2025-06-30 10:11:32,960:INFO:Declaring metric variables
2025-06-30 10:11:32,965:INFO:Importing untrained model
2025-06-30 10:11:32,974:INFO:Ada Boost Classifier Imported successfully
2025-06-30 10:11:32,996:INFO:Starting cross validation
2025-06-30 10:11:32,997:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-30 10:11:33,050:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-30 10:11:33,050:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-30 10:11:33,050:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-30 10:11:33,050:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-30 10:11:33,050:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-30 10:11:33,266:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-30 10:11:33,274:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-30 10:11:33,444:INFO:Calculating mean and std
2025-06-30 10:11:33,445:INFO:Creating metrics dataframe
2025-06-30 10:11:33,448:INFO:Uploading results into container
2025-06-30 10:11:33,449:INFO:Uploading model into container now
2025-06-30 10:11:33,450:INFO:_master_model_container: 9
2025-06-30 10:11:33,450:INFO:_display_container: 2
2025-06-30 10:11:33,450:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=3448)
2025-06-30 10:11:33,451:INFO:create_model() successfully completed......................................
2025-06-30 10:11:33,574:INFO:SubProcess create_model() end ==================================
2025-06-30 10:11:33,574:INFO:Creating metrics dataframe
2025-06-30 10:11:33,584:INFO:Initializing Gradient Boosting Classifier
2025-06-30 10:11:33,584:INFO:Total runtime is 0.17916097243626916 minutes
2025-06-30 10:11:33,591:INFO:SubProcess create_model() called ==================================
2025-06-30 10:11:33,592:INFO:Initializing create_model()
2025-06-30 10:11:33,592:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BF21E75E50>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BF270C7210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-30 10:11:33,592:INFO:Checking exceptions
2025-06-30 10:11:33,592:INFO:Importing libraries
2025-06-30 10:11:33,592:INFO:Copying training dataset
2025-06-30 10:11:33,603:INFO:Defining folds
2025-06-30 10:11:33,603:INFO:Declaring metric variables
2025-06-30 10:11:33,609:INFO:Importing untrained model
2025-06-30 10:11:33,613:INFO:Gradient Boosting Classifier Imported successfully
2025-06-30 10:11:33,627:INFO:Starting cross validation
2025-06-30 10:11:33,630:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-30 10:11:34,490:INFO:Calculating mean and std
2025-06-30 10:11:34,492:INFO:Creating metrics dataframe
2025-06-30 10:11:34,495:INFO:Uploading results into container
2025-06-30 10:11:34,496:INFO:Uploading model into container now
2025-06-30 10:11:34,498:INFO:_master_model_container: 10
2025-06-30 10:11:34,498:INFO:_display_container: 2
2025-06-30 10:11:34,498:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=3448, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-06-30 10:11:34,498:INFO:create_model() successfully completed......................................
2025-06-30 10:11:34,624:INFO:SubProcess create_model() end ==================================
2025-06-30 10:11:34,624:INFO:Creating metrics dataframe
2025-06-30 10:11:34,633:INFO:Initializing Linear Discriminant Analysis
2025-06-30 10:11:34,633:INFO:Total runtime is 0.196650771299998 minutes
2025-06-30 10:11:34,639:INFO:SubProcess create_model() called ==================================
2025-06-30 10:11:34,639:INFO:Initializing create_model()
2025-06-30 10:11:34,639:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BF21E75E50>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BF270C7210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-30 10:11:34,640:INFO:Checking exceptions
2025-06-30 10:11:34,640:INFO:Importing libraries
2025-06-30 10:11:34,640:INFO:Copying training dataset
2025-06-30 10:11:34,647:INFO:Defining folds
2025-06-30 10:11:34,649:INFO:Declaring metric variables
2025-06-30 10:11:34,655:INFO:Importing untrained model
2025-06-30 10:11:34,663:INFO:Linear Discriminant Analysis Imported successfully
2025-06-30 10:11:34,679:INFO:Starting cross validation
2025-06-30 10:11:34,680:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-30 10:11:34,799:INFO:Calculating mean and std
2025-06-30 10:11:34,802:INFO:Creating metrics dataframe
2025-06-30 10:11:34,806:INFO:Uploading results into container
2025-06-30 10:11:34,807:INFO:Uploading model into container now
2025-06-30 10:11:34,807:INFO:_master_model_container: 11
2025-06-30 10:11:34,807:INFO:_display_container: 2
2025-06-30 10:11:34,808:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-06-30 10:11:34,808:INFO:create_model() successfully completed......................................
2025-06-30 10:11:34,933:INFO:SubProcess create_model() end ==================================
2025-06-30 10:11:34,933:INFO:Creating metrics dataframe
2025-06-30 10:11:34,945:INFO:Initializing Extra Trees Classifier
2025-06-30 10:11:34,945:INFO:Total runtime is 0.20184837182362877 minutes
2025-06-30 10:11:34,949:INFO:SubProcess create_model() called ==================================
2025-06-30 10:11:34,949:INFO:Initializing create_model()
2025-06-30 10:11:34,949:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BF21E75E50>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BF270C7210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-30 10:11:34,949:INFO:Checking exceptions
2025-06-30 10:11:34,949:INFO:Importing libraries
2025-06-30 10:11:34,950:INFO:Copying training dataset
2025-06-30 10:11:34,956:INFO:Defining folds
2025-06-30 10:11:34,956:INFO:Declaring metric variables
2025-06-30 10:11:34,962:INFO:Importing untrained model
2025-06-30 10:11:34,967:INFO:Extra Trees Classifier Imported successfully
2025-06-30 10:11:34,980:INFO:Starting cross validation
2025-06-30 10:11:34,981:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-30 10:11:35,708:INFO:Calculating mean and std
2025-06-30 10:11:35,710:INFO:Creating metrics dataframe
2025-06-30 10:11:35,712:INFO:Uploading results into container
2025-06-30 10:11:35,713:INFO:Uploading model into container now
2025-06-30 10:11:35,714:INFO:_master_model_container: 12
2025-06-30 10:11:35,714:INFO:_display_container: 2
2025-06-30 10:11:35,715:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=3448, verbose=0,
                     warm_start=False)
2025-06-30 10:11:35,715:INFO:create_model() successfully completed......................................
2025-06-30 10:11:35,838:INFO:SubProcess create_model() end ==================================
2025-06-30 10:11:35,839:INFO:Creating metrics dataframe
2025-06-30 10:11:35,851:INFO:Initializing Light Gradient Boosting Machine
2025-06-30 10:11:35,852:INFO:Total runtime is 0.21695109605789187 minutes
2025-06-30 10:11:35,861:INFO:SubProcess create_model() called ==================================
2025-06-30 10:11:35,861:INFO:Initializing create_model()
2025-06-30 10:11:35,862:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BF21E75E50>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BF270C7210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-30 10:11:35,862:INFO:Checking exceptions
2025-06-30 10:11:35,862:INFO:Importing libraries
2025-06-30 10:11:35,862:INFO:Copying training dataset
2025-06-30 10:11:35,876:INFO:Defining folds
2025-06-30 10:11:35,877:INFO:Declaring metric variables
2025-06-30 10:11:35,885:INFO:Importing untrained model
2025-06-30 10:11:35,895:INFO:Light Gradient Boosting Machine Imported successfully
2025-06-30 10:11:35,915:INFO:Starting cross validation
2025-06-30 10:11:35,916:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-30 10:11:37,638:INFO:Calculating mean and std
2025-06-30 10:11:37,642:INFO:Creating metrics dataframe
2025-06-30 10:11:37,645:INFO:Uploading results into container
2025-06-30 10:11:37,646:INFO:Uploading model into container now
2025-06-30 10:11:37,647:INFO:_master_model_container: 13
2025-06-30 10:11:37,647:INFO:_display_container: 2
2025-06-30 10:11:37,648:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=3448, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-06-30 10:11:37,648:INFO:create_model() successfully completed......................................
2025-06-30 10:11:37,795:INFO:SubProcess create_model() end ==================================
2025-06-30 10:11:37,795:INFO:Creating metrics dataframe
2025-06-30 10:11:37,807:INFO:Initializing Dummy Classifier
2025-06-30 10:11:37,807:INFO:Total runtime is 0.2495404640833537 minutes
2025-06-30 10:11:37,811:INFO:SubProcess create_model() called ==================================
2025-06-30 10:11:37,812:INFO:Initializing create_model()
2025-06-30 10:11:37,812:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BF21E75E50>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BF270C7210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-30 10:11:37,812:INFO:Checking exceptions
2025-06-30 10:11:37,812:INFO:Importing libraries
2025-06-30 10:11:37,812:INFO:Copying training dataset
2025-06-30 10:11:37,823:INFO:Defining folds
2025-06-30 10:11:37,823:INFO:Declaring metric variables
2025-06-30 10:11:37,829:INFO:Importing untrained model
2025-06-30 10:11:37,835:INFO:Dummy Classifier Imported successfully
2025-06-30 10:11:37,848:INFO:Starting cross validation
2025-06-30 10:11:37,849:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-30 10:11:37,960:INFO:Calculating mean and std
2025-06-30 10:11:37,961:INFO:Creating metrics dataframe
2025-06-30 10:11:37,963:INFO:Uploading results into container
2025-06-30 10:11:37,963:INFO:Uploading model into container now
2025-06-30 10:11:37,964:INFO:_master_model_container: 14
2025-06-30 10:11:37,964:INFO:_display_container: 2
2025-06-30 10:11:37,964:INFO:DummyClassifier(constant=None, random_state=3448, strategy='prior')
2025-06-30 10:11:37,964:INFO:create_model() successfully completed......................................
2025-06-30 10:11:38,094:INFO:SubProcess create_model() end ==================================
2025-06-30 10:11:38,095:INFO:Creating metrics dataframe
2025-06-30 10:11:38,114:WARNING:d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-06-30 10:11:38,125:INFO:Initializing create_model()
2025-06-30 10:11:38,126:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BF21E75E50>, estimator=DummyClassifier(constant=None, random_state=3448, strategy='prior'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-30 10:11:38,126:INFO:Checking exceptions
2025-06-30 10:11:38,129:INFO:Importing libraries
2025-06-30 10:11:38,129:INFO:Copying training dataset
2025-06-30 10:11:38,135:INFO:Defining folds
2025-06-30 10:11:38,135:INFO:Declaring metric variables
2025-06-30 10:11:38,136:INFO:Importing untrained model
2025-06-30 10:11:38,137:INFO:Declaring custom model
2025-06-30 10:11:38,138:INFO:Dummy Classifier Imported successfully
2025-06-30 10:11:38,140:INFO:Cross validation set to False
2025-06-30 10:11:38,140:INFO:Fitting Model
2025-06-30 10:11:38,156:INFO:DummyClassifier(constant=None, random_state=3448, strategy='prior')
2025-06-30 10:11:38,157:INFO:create_model() successfully completed......................................
2025-06-30 10:11:38,346:INFO:_master_model_container: 14
2025-06-30 10:11:38,346:INFO:_display_container: 2
2025-06-30 10:11:38,346:INFO:DummyClassifier(constant=None, random_state=3448, strategy='prior')
2025-06-30 10:11:38,347:INFO:compare_models() successfully completed......................................
2025-06-30 10:13:26,102:INFO:PyCaret ClassificationExperiment
2025-06-30 10:13:26,102:INFO:Logging name: clf-default-name
2025-06-30 10:13:26,102:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-06-30 10:13:26,102:INFO:version 3.3.2
2025-06-30 10:13:26,102:INFO:Initializing setup()
2025-06-30 10:13:26,102:INFO:self.USI: 1b20
2025-06-30 10:13:26,102:INFO:self._variable_keys: {'X', 'y_test', 'data', 'fold_generator', 'fix_imbalance', 'X_test', 'n_jobs_param', 'y_train', 'memory', 'fold_shuffle_param', 'idx', 'exp_name_log', 'seed', 'is_multiclass', 'html_param', 'pipeline', 'gpu_param', 'target_param', '_ml_usecase', 'log_plots_param', 'exp_id', 'logging_param', 'fold_groups_param', 'y', 'X_train', 'USI', 'gpu_n_jobs_param', '_available_plots'}
2025-06-30 10:13:26,102:INFO:Checking environment
2025-06-30 10:13:26,102:INFO:python_version: 3.11.13
2025-06-30 10:13:26,102:INFO:python_build: ('main', 'Jun  5 2025 13:03:15')
2025-06-30 10:13:26,102:INFO:machine: AMD64
2025-06-30 10:13:26,102:INFO:platform: Windows-10-10.0.22631-SP0
2025-06-30 10:13:26,108:INFO:Memory: svmem(total=12674457600, available=1960390656, percent=84.5, used=10714066944, free=1960390656)
2025-06-30 10:13:26,108:INFO:Physical Core: 4
2025-06-30 10:13:26,108:INFO:Logical Core: 8
2025-06-30 10:13:26,108:INFO:Checking libraries
2025-06-30 10:13:26,108:INFO:System:
2025-06-30 10:13:26,108:INFO:    python: 3.11.13 | packaged by Anaconda, Inc. | (main, Jun  5 2025, 13:03:15) [MSC v.1929 64 bit (AMD64)]
2025-06-30 10:13:26,109:INFO:executable: d:\ML_notes\.conda\python.exe
2025-06-30 10:13:26,109:INFO:   machine: Windows-10-10.0.22631-SP0
2025-06-30 10:13:26,109:INFO:PyCaret required dependencies:
2025-06-30 10:13:26,109:INFO:                 pip: 25.1
2025-06-30 10:13:26,109:INFO:          setuptools: 78.1.1
2025-06-30 10:13:26,109:INFO:             pycaret: 3.3.2
2025-06-30 10:13:26,109:INFO:             IPython: 9.3.0
2025-06-30 10:13:26,109:INFO:          ipywidgets: 8.1.7
2025-06-30 10:13:26,109:INFO:                tqdm: 4.67.1
2025-06-30 10:13:26,109:INFO:               numpy: 1.26.4
2025-06-30 10:13:26,109:INFO:              pandas: 2.1.4
2025-06-30 10:13:26,109:INFO:              jinja2: 3.1.6
2025-06-30 10:13:26,109:INFO:               scipy: 1.11.4
2025-06-30 10:13:26,109:INFO:              joblib: 1.3.2
2025-06-30 10:13:26,109:INFO:             sklearn: 1.4.2
2025-06-30 10:13:26,109:INFO:                pyod: 2.0.5
2025-06-30 10:13:26,109:INFO:            imblearn: 0.13.0
2025-06-30 10:13:26,109:INFO:   category_encoders: 2.7.0
2025-06-30 10:13:26,109:INFO:            lightgbm: 4.6.0
2025-06-30 10:13:26,109:INFO:               numba: 0.61.0
2025-06-30 10:13:26,109:INFO:            requests: 2.32.4
2025-06-30 10:13:26,109:INFO:          matplotlib: 3.7.5
2025-06-30 10:13:26,109:INFO:          scikitplot: 0.3.7
2025-06-30 10:13:26,110:INFO:         yellowbrick: 1.5
2025-06-30 10:13:26,110:INFO:              plotly: 5.24.1
2025-06-30 10:13:26,110:INFO:    plotly-resampler: Not installed
2025-06-30 10:13:26,110:INFO:             kaleido: 1.0.0
2025-06-30 10:13:26,110:INFO:           schemdraw: 0.15
2025-06-30 10:13:26,110:INFO:         statsmodels: 0.14.4
2025-06-30 10:13:26,110:INFO:              sktime: 0.26.0
2025-06-30 10:13:26,110:INFO:               tbats: 1.1.3
2025-06-30 10:13:26,110:INFO:            pmdarima: 2.0.4
2025-06-30 10:13:26,110:INFO:              psutil: 7.0.0
2025-06-30 10:13:26,110:INFO:          markupsafe: 3.0.2
2025-06-30 10:13:26,110:INFO:             pickle5: Not installed
2025-06-30 10:13:26,110:INFO:         cloudpickle: 3.1.1
2025-06-30 10:13:26,110:INFO:         deprecation: 2.1.0
2025-06-30 10:13:26,110:INFO:              xxhash: 3.5.0
2025-06-30 10:13:26,110:INFO:           wurlitzer: Not installed
2025-06-30 10:13:26,110:INFO:PyCaret optional dependencies:
2025-06-30 10:13:26,110:INFO:                shap: Not installed
2025-06-30 10:13:26,110:INFO:           interpret: Not installed
2025-06-30 10:13:26,110:INFO:                umap: Not installed
2025-06-30 10:13:26,110:INFO:     ydata_profiling: 4.16.1
2025-06-30 10:13:26,110:INFO:  explainerdashboard: Not installed
2025-06-30 10:13:26,110:INFO:             autoviz: Not installed
2025-06-30 10:13:26,110:INFO:           fairlearn: Not installed
2025-06-30 10:13:26,110:INFO:          deepchecks: Not installed
2025-06-30 10:13:26,111:INFO:             xgboost: Not installed
2025-06-30 10:13:26,111:INFO:            catboost: Not installed
2025-06-30 10:13:26,111:INFO:              kmodes: Not installed
2025-06-30 10:13:26,111:INFO:             mlxtend: Not installed
2025-06-30 10:13:26,111:INFO:       statsforecast: Not installed
2025-06-30 10:13:26,111:INFO:        tune_sklearn: Not installed
2025-06-30 10:13:26,111:INFO:                 ray: Not installed
2025-06-30 10:13:26,111:INFO:            hyperopt: Not installed
2025-06-30 10:13:26,111:INFO:              optuna: Not installed
2025-06-30 10:13:26,111:INFO:               skopt: Not installed
2025-06-30 10:13:26,111:INFO:              mlflow: Not installed
2025-06-30 10:13:26,111:INFO:              gradio: Not installed
2025-06-30 10:13:26,111:INFO:             fastapi: Not installed
2025-06-30 10:13:26,111:INFO:             uvicorn: Not installed
2025-06-30 10:13:26,111:INFO:              m2cgen: Not installed
2025-06-30 10:13:26,111:INFO:           evidently: Not installed
2025-06-30 10:13:26,111:INFO:               fugue: Not installed
2025-06-30 10:13:26,111:INFO:           streamlit: Not installed
2025-06-30 10:13:26,111:INFO:             prophet: Not installed
2025-06-30 10:13:26,111:INFO:None
2025-06-30 10:13:26,111:INFO:Set up data.
2025-06-30 10:13:26,117:INFO:Set up folding strategy.
2025-06-30 10:13:26,117:INFO:Set up train/test split.
2025-06-30 10:13:26,123:INFO:Set up index.
2025-06-30 10:13:26,123:INFO:Assigning column types.
2025-06-30 10:13:26,129:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-06-30 10:13:26,176:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-30 10:13:26,176:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-30 10:13:26,206:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-30 10:13:26,207:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-30 10:13:26,259:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-30 10:13:26,261:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-30 10:13:26,293:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-30 10:13:26,293:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-30 10:13:26,294:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-06-30 10:13:26,350:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-30 10:13:26,390:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-30 10:13:26,390:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-30 10:13:26,448:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-30 10:13:26,482:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-30 10:13:26,482:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-30 10:13:26,483:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-06-30 10:13:26,569:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-30 10:13:26,571:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-30 10:13:26,662:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-30 10:13:26,663:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-30 10:13:26,664:INFO:Preparing preprocessing pipeline...
2025-06-30 10:13:26,665:INFO:Set up simple imputation.
2025-06-30 10:13:26,695:INFO:Finished creating preprocessing pipeline.
2025-06-30 10:13:26,698:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\YOGA\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'Annual_Income',
                                             'Total_Spend', 'Years_as_Customer',
                                             'Num_of_Purchases',
                                             'Average_Transaction_Amount',
                                             'Num_of_Returns',
                                             'Num_of_Support_Contacts',
                                             'Satisfaction_Score',
                                             'Last_Purchase_Days_Ago',
                                             'Gender_Fem...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-06-30 10:13:26,699:INFO:Creating final display dataframe.
2025-06-30 10:13:26,800:INFO:Setup _display_container:                     Description              Value
0                    Session id               5714
1                        Target  Target_Churn_True
2                   Target type             Binary
3           Original data shape         (1000, 20)
4        Transformed data shape         (1000, 20)
5   Transformed train set shape          (700, 20)
6    Transformed test set shape          (300, 20)
7              Numeric features                 19
8                    Preprocess               True
9               Imputation type             simple
10           Numeric imputation               mean
11       Categorical imputation               mode
12               Fold Generator    StratifiedKFold
13                  Fold Number                 10
14                     CPU Jobs                 -1
15                      Use GPU              False
16               Log Experiment              False
17              Experiment Name   clf-default-name
18                          USI               1b20
2025-06-30 10:13:26,933:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-30 10:13:26,933:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-30 10:13:27,024:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-30 10:13:27,025:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-30 10:13:27,027:INFO:setup() successfully completed in 0.93s...............
2025-06-30 10:13:27,028:INFO:Initializing compare_models()
2025-06-30 10:13:27,028:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BF270B88D0>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001BF270B88D0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2025-06-30 10:13:27,028:INFO:Checking exceptions
2025-06-30 10:13:27,032:INFO:Preparing display monitor
2025-06-30 10:13:27,071:INFO:Initializing Logistic Regression
2025-06-30 10:13:27,071:INFO:Total runtime is 0.0 minutes
2025-06-30 10:13:27,079:INFO:SubProcess create_model() called ==================================
2025-06-30 10:13:27,080:INFO:Initializing create_model()
2025-06-30 10:13:27,080:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BF270B88D0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BF7FCF63D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-30 10:13:27,080:INFO:Checking exceptions
2025-06-30 10:13:27,080:INFO:Importing libraries
2025-06-30 10:13:27,080:INFO:Copying training dataset
2025-06-30 10:13:27,093:INFO:Defining folds
2025-06-30 10:13:27,093:INFO:Declaring metric variables
2025-06-30 10:13:27,098:INFO:Importing untrained model
2025-06-30 10:13:27,102:INFO:Logistic Regression Imported successfully
2025-06-30 10:13:27,112:INFO:Starting cross validation
2025-06-30 10:13:27,113:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-30 10:13:27,415:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-30 10:13:27,431:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-30 10:13:27,444:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-30 10:13:27,446:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-30 10:13:27,556:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-30 10:13:27,557:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-30 10:13:27,563:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-30 10:13:27,591:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-30 10:13:27,646:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-30 10:13:27,663:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-30 10:13:27,684:INFO:Calculating mean and std
2025-06-30 10:13:27,684:INFO:Creating metrics dataframe
2025-06-30 10:13:27,689:INFO:Uploading results into container
2025-06-30 10:13:27,690:INFO:Uploading model into container now
2025-06-30 10:13:27,690:INFO:_master_model_container: 1
2025-06-30 10:13:27,690:INFO:_display_container: 2
2025-06-30 10:13:27,691:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5714, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-06-30 10:13:27,691:INFO:create_model() successfully completed......................................
2025-06-30 10:13:27,849:INFO:SubProcess create_model() end ==================================
2025-06-30 10:13:27,849:INFO:Creating metrics dataframe
2025-06-30 10:13:27,863:INFO:Initializing K Neighbors Classifier
2025-06-30 10:13:27,863:INFO:Total runtime is 0.013193190097808838 minutes
2025-06-30 10:13:27,869:INFO:SubProcess create_model() called ==================================
2025-06-30 10:13:27,869:INFO:Initializing create_model()
2025-06-30 10:13:27,869:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BF270B88D0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BF7FCF63D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-30 10:13:27,869:INFO:Checking exceptions
2025-06-30 10:13:27,870:INFO:Importing libraries
2025-06-30 10:13:27,870:INFO:Copying training dataset
2025-06-30 10:13:27,880:INFO:Defining folds
2025-06-30 10:13:27,880:INFO:Declaring metric variables
2025-06-30 10:13:27,883:INFO:Importing untrained model
2025-06-30 10:13:27,891:INFO:K Neighbors Classifier Imported successfully
2025-06-30 10:13:27,900:INFO:Starting cross validation
2025-06-30 10:13:27,902:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-30 10:13:28,034:INFO:Calculating mean and std
2025-06-30 10:13:28,034:INFO:Creating metrics dataframe
2025-06-30 10:13:28,037:INFO:Uploading results into container
2025-06-30 10:13:28,038:INFO:Uploading model into container now
2025-06-30 10:13:28,039:INFO:_master_model_container: 2
2025-06-30 10:13:28,040:INFO:_display_container: 2
2025-06-30 10:13:28,041:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-06-30 10:13:28,041:INFO:create_model() successfully completed......................................
2025-06-30 10:13:28,184:INFO:SubProcess create_model() end ==================================
2025-06-30 10:13:28,184:INFO:Creating metrics dataframe
2025-06-30 10:13:28,198:INFO:Initializing Naive Bayes
2025-06-30 10:13:28,199:INFO:Total runtime is 0.018789990743001302 minutes
2025-06-30 10:13:28,207:INFO:SubProcess create_model() called ==================================
2025-06-30 10:13:28,208:INFO:Initializing create_model()
2025-06-30 10:13:28,208:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BF270B88D0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BF7FCF63D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-30 10:13:28,208:INFO:Checking exceptions
2025-06-30 10:13:28,208:INFO:Importing libraries
2025-06-30 10:13:28,208:INFO:Copying training dataset
2025-06-30 10:13:28,214:INFO:Defining folds
2025-06-30 10:13:28,215:INFO:Declaring metric variables
2025-06-30 10:13:28,224:INFO:Importing untrained model
2025-06-30 10:13:28,229:INFO:Naive Bayes Imported successfully
2025-06-30 10:13:28,248:INFO:Starting cross validation
2025-06-30 10:13:28,249:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-30 10:13:28,358:INFO:Calculating mean and std
2025-06-30 10:13:28,360:INFO:Creating metrics dataframe
2025-06-30 10:13:28,362:INFO:Uploading results into container
2025-06-30 10:13:28,362:INFO:Uploading model into container now
2025-06-30 10:13:28,363:INFO:_master_model_container: 3
2025-06-30 10:13:28,363:INFO:_display_container: 2
2025-06-30 10:13:28,363:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-06-30 10:13:28,364:INFO:create_model() successfully completed......................................
2025-06-30 10:13:28,534:INFO:SubProcess create_model() end ==================================
2025-06-30 10:13:28,534:INFO:Creating metrics dataframe
2025-06-30 10:13:28,547:INFO:Initializing Decision Tree Classifier
2025-06-30 10:13:28,547:INFO:Total runtime is 0.0245989720026652 minutes
2025-06-30 10:13:28,551:INFO:SubProcess create_model() called ==================================
2025-06-30 10:13:28,552:INFO:Initializing create_model()
2025-06-30 10:13:28,552:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BF270B88D0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BF7FCF63D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-30 10:13:28,552:INFO:Checking exceptions
2025-06-30 10:13:28,552:INFO:Importing libraries
2025-06-30 10:13:28,552:INFO:Copying training dataset
2025-06-30 10:13:28,563:INFO:Defining folds
2025-06-30 10:13:28,563:INFO:Declaring metric variables
2025-06-30 10:13:28,568:INFO:Importing untrained model
2025-06-30 10:13:28,577:INFO:Decision Tree Classifier Imported successfully
2025-06-30 10:13:28,587:INFO:Starting cross validation
2025-06-30 10:13:28,591:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-30 10:13:28,755:INFO:Calculating mean and std
2025-06-30 10:13:28,759:INFO:Creating metrics dataframe
2025-06-30 10:13:28,762:INFO:Uploading results into container
2025-06-30 10:13:28,763:INFO:Uploading model into container now
2025-06-30 10:13:28,763:INFO:_master_model_container: 4
2025-06-30 10:13:28,764:INFO:_display_container: 2
2025-06-30 10:13:28,764:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5714, splitter='best')
2025-06-30 10:13:28,764:INFO:create_model() successfully completed......................................
2025-06-30 10:13:28,920:INFO:SubProcess create_model() end ==================================
2025-06-30 10:13:28,920:INFO:Creating metrics dataframe
2025-06-30 10:13:28,935:INFO:Initializing SVM - Linear Kernel
2025-06-30 10:13:28,935:INFO:Total runtime is 0.031052966912587483 minutes
2025-06-30 10:13:28,943:INFO:SubProcess create_model() called ==================================
2025-06-30 10:13:28,944:INFO:Initializing create_model()
2025-06-30 10:13:28,944:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BF270B88D0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BF7FCF63D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-30 10:13:28,944:INFO:Checking exceptions
2025-06-30 10:13:28,944:INFO:Importing libraries
2025-06-30 10:13:28,944:INFO:Copying training dataset
2025-06-30 10:13:28,952:INFO:Defining folds
2025-06-30 10:13:28,953:INFO:Declaring metric variables
2025-06-30 10:13:28,962:INFO:Importing untrained model
2025-06-30 10:13:28,967:INFO:SVM - Linear Kernel Imported successfully
2025-06-30 10:13:28,980:INFO:Starting cross validation
2025-06-30 10:13:28,982:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-30 10:13:29,049:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-30 10:13:29,058:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-30 10:13:29,108:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-30 10:13:29,125:INFO:Calculating mean and std
2025-06-30 10:13:29,127:INFO:Creating metrics dataframe
2025-06-30 10:13:29,129:INFO:Uploading results into container
2025-06-30 10:13:29,130:INFO:Uploading model into container now
2025-06-30 10:13:29,130:INFO:_master_model_container: 5
2025-06-30 10:13:29,130:INFO:_display_container: 2
2025-06-30 10:13:29,131:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=5714, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-06-30 10:13:29,131:INFO:create_model() successfully completed......................................
2025-06-30 10:13:29,299:INFO:SubProcess create_model() end ==================================
2025-06-30 10:13:29,299:INFO:Creating metrics dataframe
2025-06-30 10:13:29,315:INFO:Initializing Ridge Classifier
2025-06-30 10:13:29,315:INFO:Total runtime is 0.03739711840947469 minutes
2025-06-30 10:13:29,324:INFO:SubProcess create_model() called ==================================
2025-06-30 10:13:29,324:INFO:Initializing create_model()
2025-06-30 10:13:29,325:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BF270B88D0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BF7FCF63D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-30 10:13:29,325:INFO:Checking exceptions
2025-06-30 10:13:29,325:INFO:Importing libraries
2025-06-30 10:13:29,325:INFO:Copying training dataset
2025-06-30 10:13:29,335:INFO:Defining folds
2025-06-30 10:13:29,336:INFO:Declaring metric variables
2025-06-30 10:13:29,343:INFO:Importing untrained model
2025-06-30 10:13:29,349:INFO:Ridge Classifier Imported successfully
2025-06-30 10:13:29,361:INFO:Starting cross validation
2025-06-30 10:13:29,363:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-30 10:13:29,532:INFO:Calculating mean and std
2025-06-30 10:13:29,533:INFO:Creating metrics dataframe
2025-06-30 10:13:29,535:INFO:Uploading results into container
2025-06-30 10:13:29,537:INFO:Uploading model into container now
2025-06-30 10:13:29,539:INFO:_master_model_container: 6
2025-06-30 10:13:29,539:INFO:_display_container: 2
2025-06-30 10:13:29,540:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=5714, solver='auto',
                tol=0.0001)
2025-06-30 10:13:29,540:INFO:create_model() successfully completed......................................
2025-06-30 10:13:29,682:INFO:SubProcess create_model() end ==================================
2025-06-30 10:13:29,682:INFO:Creating metrics dataframe
2025-06-30 10:13:29,696:INFO:Initializing Random Forest Classifier
2025-06-30 10:13:29,696:INFO:Total runtime is 0.04373603661855062 minutes
2025-06-30 10:13:29,701:INFO:SubProcess create_model() called ==================================
2025-06-30 10:13:29,701:INFO:Initializing create_model()
2025-06-30 10:13:29,701:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BF270B88D0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BF7FCF63D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-30 10:13:29,701:INFO:Checking exceptions
2025-06-30 10:13:29,702:INFO:Importing libraries
2025-06-30 10:13:29,702:INFO:Copying training dataset
2025-06-30 10:13:29,711:INFO:Defining folds
2025-06-30 10:13:29,711:INFO:Declaring metric variables
2025-06-30 10:13:29,717:INFO:Importing untrained model
2025-06-30 10:13:29,723:INFO:Random Forest Classifier Imported successfully
2025-06-30 10:13:29,732:INFO:Starting cross validation
2025-06-30 10:13:29,733:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-30 10:13:30,807:INFO:Calculating mean and std
2025-06-30 10:13:30,809:INFO:Creating metrics dataframe
2025-06-30 10:13:30,811:INFO:Uploading results into container
2025-06-30 10:13:30,811:INFO:Uploading model into container now
2025-06-30 10:13:30,812:INFO:_master_model_container: 7
2025-06-30 10:13:30,812:INFO:_display_container: 2
2025-06-30 10:13:30,812:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=5714, verbose=0,
                       warm_start=False)
2025-06-30 10:13:30,813:INFO:create_model() successfully completed......................................
2025-06-30 10:13:30,977:INFO:SubProcess create_model() end ==================================
2025-06-30 10:13:30,977:INFO:Creating metrics dataframe
2025-06-30 10:13:30,987:INFO:Initializing Quadratic Discriminant Analysis
2025-06-30 10:13:30,987:INFO:Total runtime is 0.06525394519170125 minutes
2025-06-30 10:13:30,995:INFO:SubProcess create_model() called ==================================
2025-06-30 10:13:30,996:INFO:Initializing create_model()
2025-06-30 10:13:30,996:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BF270B88D0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BF7FCF63D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-30 10:13:30,996:INFO:Checking exceptions
2025-06-30 10:13:30,996:INFO:Importing libraries
2025-06-30 10:13:30,996:INFO:Copying training dataset
2025-06-30 10:13:31,010:INFO:Defining folds
2025-06-30 10:13:31,011:INFO:Declaring metric variables
2025-06-30 10:13:31,017:INFO:Importing untrained model
2025-06-30 10:13:31,027:INFO:Quadratic Discriminant Analysis Imported successfully
2025-06-30 10:13:31,044:INFO:Starting cross validation
2025-06-30 10:13:31,045:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-30 10:13:31,088:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-30 10:13:31,091:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-30 10:13:31,097:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-30 10:13:31,108:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-30 10:13:31,109:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-30 10:13:31,123:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-30 10:13:31,131:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-30 10:13:31,136:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-30 10:13:31,137:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-30 10:13:31,148:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-30 10:13:31,189:INFO:Calculating mean and std
2025-06-30 10:13:31,190:INFO:Creating metrics dataframe
2025-06-30 10:13:31,194:INFO:Uploading results into container
2025-06-30 10:13:31,195:INFO:Uploading model into container now
2025-06-30 10:13:31,196:INFO:_master_model_container: 8
2025-06-30 10:13:31,196:INFO:_display_container: 2
2025-06-30 10:13:31,197:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-06-30 10:13:31,197:INFO:create_model() successfully completed......................................
2025-06-30 10:13:31,345:INFO:SubProcess create_model() end ==================================
2025-06-30 10:13:31,345:INFO:Creating metrics dataframe
2025-06-30 10:13:31,359:INFO:Initializing Ada Boost Classifier
2025-06-30 10:13:31,359:INFO:Total runtime is 0.07145888805389404 minutes
2025-06-30 10:13:31,363:INFO:SubProcess create_model() called ==================================
2025-06-30 10:13:31,364:INFO:Initializing create_model()
2025-06-30 10:13:31,364:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BF270B88D0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BF7FCF63D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-30 10:13:31,364:INFO:Checking exceptions
2025-06-30 10:13:31,365:INFO:Importing libraries
2025-06-30 10:13:31,365:INFO:Copying training dataset
2025-06-30 10:13:31,374:INFO:Defining folds
2025-06-30 10:13:31,375:INFO:Declaring metric variables
2025-06-30 10:13:31,381:INFO:Importing untrained model
2025-06-30 10:13:31,386:INFO:Ada Boost Classifier Imported successfully
2025-06-30 10:13:31,399:INFO:Starting cross validation
2025-06-30 10:13:31,400:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-30 10:13:31,435:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-30 10:13:31,436:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-30 10:13:31,441:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-30 10:13:31,442:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-30 10:13:31,443:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-30 10:13:31,444:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-30 10:13:31,481:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-30 10:13:31,483:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-30 10:13:31,696:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-30 10:13:31,712:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-30 10:13:31,912:INFO:Calculating mean and std
2025-06-30 10:13:31,913:INFO:Creating metrics dataframe
2025-06-30 10:13:31,916:INFO:Uploading results into container
2025-06-30 10:13:31,916:INFO:Uploading model into container now
2025-06-30 10:13:31,917:INFO:_master_model_container: 9
2025-06-30 10:13:31,917:INFO:_display_container: 2
2025-06-30 10:13:31,918:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=5714)
2025-06-30 10:13:31,919:INFO:create_model() successfully completed......................................
2025-06-30 10:13:32,064:INFO:SubProcess create_model() end ==================================
2025-06-30 10:13:32,065:INFO:Creating metrics dataframe
2025-06-30 10:13:32,081:INFO:Initializing Gradient Boosting Classifier
2025-06-30 10:13:32,081:INFO:Total runtime is 0.0834978739420573 minutes
2025-06-30 10:13:32,087:INFO:SubProcess create_model() called ==================================
2025-06-30 10:13:32,088:INFO:Initializing create_model()
2025-06-30 10:13:32,088:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BF270B88D0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BF7FCF63D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-30 10:13:32,088:INFO:Checking exceptions
2025-06-30 10:13:32,088:INFO:Importing libraries
2025-06-30 10:13:32,090:INFO:Copying training dataset
2025-06-30 10:13:32,098:INFO:Defining folds
2025-06-30 10:13:32,098:INFO:Declaring metric variables
2025-06-30 10:13:32,107:INFO:Importing untrained model
2025-06-30 10:13:32,113:INFO:Gradient Boosting Classifier Imported successfully
2025-06-30 10:13:32,126:INFO:Starting cross validation
2025-06-30 10:13:32,127:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-30 10:13:33,053:INFO:Calculating mean and std
2025-06-30 10:13:33,056:INFO:Creating metrics dataframe
2025-06-30 10:13:33,057:INFO:Uploading results into container
2025-06-30 10:13:33,058:INFO:Uploading model into container now
2025-06-30 10:13:33,058:INFO:_master_model_container: 10
2025-06-30 10:13:33,058:INFO:_display_container: 2
2025-06-30 10:13:33,060:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=5714, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-06-30 10:13:33,060:INFO:create_model() successfully completed......................................
2025-06-30 10:13:33,189:INFO:SubProcess create_model() end ==================================
2025-06-30 10:13:33,189:INFO:Creating metrics dataframe
2025-06-30 10:13:33,204:INFO:Initializing Linear Discriminant Analysis
2025-06-30 10:13:33,204:INFO:Total runtime is 0.1022010644276937 minutes
2025-06-30 10:13:33,223:INFO:SubProcess create_model() called ==================================
2025-06-30 10:13:33,223:INFO:Initializing create_model()
2025-06-30 10:13:33,224:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BF270B88D0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BF7FCF63D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-30 10:13:33,224:INFO:Checking exceptions
2025-06-30 10:13:33,224:INFO:Importing libraries
2025-06-30 10:13:33,224:INFO:Copying training dataset
2025-06-30 10:13:33,241:INFO:Defining folds
2025-06-30 10:13:33,241:INFO:Declaring metric variables
2025-06-30 10:13:33,254:INFO:Importing untrained model
2025-06-30 10:13:33,261:INFO:Linear Discriminant Analysis Imported successfully
2025-06-30 10:13:33,280:INFO:Starting cross validation
2025-06-30 10:13:33,281:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-30 10:13:33,387:INFO:Calculating mean and std
2025-06-30 10:13:33,389:INFO:Creating metrics dataframe
2025-06-30 10:13:33,392:INFO:Uploading results into container
2025-06-30 10:13:33,392:INFO:Uploading model into container now
2025-06-30 10:13:33,393:INFO:_master_model_container: 11
2025-06-30 10:13:33,393:INFO:_display_container: 2
2025-06-30 10:13:33,394:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-06-30 10:13:33,394:INFO:create_model() successfully completed......................................
2025-06-30 10:13:33,515:INFO:SubProcess create_model() end ==================================
2025-06-30 10:13:33,515:INFO:Creating metrics dataframe
2025-06-30 10:13:33,530:INFO:Initializing Extra Trees Classifier
2025-06-30 10:13:33,530:INFO:Total runtime is 0.10763803323109945 minutes
2025-06-30 10:13:33,537:INFO:SubProcess create_model() called ==================================
2025-06-30 10:13:33,537:INFO:Initializing create_model()
2025-06-30 10:13:33,537:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BF270B88D0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BF7FCF63D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-30 10:13:33,537:INFO:Checking exceptions
2025-06-30 10:13:33,537:INFO:Importing libraries
2025-06-30 10:13:33,538:INFO:Copying training dataset
2025-06-30 10:13:33,547:INFO:Defining folds
2025-06-30 10:13:33,547:INFO:Declaring metric variables
2025-06-30 10:13:33,555:INFO:Importing untrained model
2025-06-30 10:13:33,560:INFO:Extra Trees Classifier Imported successfully
2025-06-30 10:13:33,572:INFO:Starting cross validation
2025-06-30 10:13:33,573:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-30 10:13:34,219:INFO:Calculating mean and std
2025-06-30 10:13:34,221:INFO:Creating metrics dataframe
2025-06-30 10:13:34,222:INFO:Uploading results into container
2025-06-30 10:13:34,223:INFO:Uploading model into container now
2025-06-30 10:13:34,224:INFO:_master_model_container: 12
2025-06-30 10:13:34,224:INFO:_display_container: 2
2025-06-30 10:13:34,225:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=5714, verbose=0,
                     warm_start=False)
2025-06-30 10:13:34,225:INFO:create_model() successfully completed......................................
2025-06-30 10:13:34,336:INFO:SubProcess create_model() end ==================================
2025-06-30 10:13:34,336:INFO:Creating metrics dataframe
2025-06-30 10:13:34,345:INFO:Initializing Light Gradient Boosting Machine
2025-06-30 10:13:34,345:INFO:Total runtime is 0.12122668027877809 minutes
2025-06-30 10:13:34,351:INFO:SubProcess create_model() called ==================================
2025-06-30 10:13:34,352:INFO:Initializing create_model()
2025-06-30 10:13:34,352:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BF270B88D0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BF7FCF63D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-30 10:13:34,352:INFO:Checking exceptions
2025-06-30 10:13:34,353:INFO:Importing libraries
2025-06-30 10:13:34,353:INFO:Copying training dataset
2025-06-30 10:13:34,362:INFO:Defining folds
2025-06-30 10:13:34,362:INFO:Declaring metric variables
2025-06-30 10:13:34,369:INFO:Importing untrained model
2025-06-30 10:13:34,374:INFO:Light Gradient Boosting Machine Imported successfully
2025-06-30 10:13:34,382:INFO:Starting cross validation
2025-06-30 10:13:34,383:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-30 10:13:35,388:INFO:Calculating mean and std
2025-06-30 10:13:35,390:INFO:Creating metrics dataframe
2025-06-30 10:13:35,394:INFO:Uploading results into container
2025-06-30 10:13:35,394:INFO:Uploading model into container now
2025-06-30 10:13:35,395:INFO:_master_model_container: 13
2025-06-30 10:13:35,395:INFO:_display_container: 2
2025-06-30 10:13:35,396:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5714, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-06-30 10:13:35,396:INFO:create_model() successfully completed......................................
2025-06-30 10:13:35,531:INFO:SubProcess create_model() end ==================================
2025-06-30 10:13:35,531:INFO:Creating metrics dataframe
2025-06-30 10:13:35,544:INFO:Initializing Dummy Classifier
2025-06-30 10:13:35,544:INFO:Total runtime is 0.14120389620463053 minutes
2025-06-30 10:13:35,548:INFO:SubProcess create_model() called ==================================
2025-06-30 10:13:35,548:INFO:Initializing create_model()
2025-06-30 10:13:35,548:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BF270B88D0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BF7FCF63D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-30 10:13:35,548:INFO:Checking exceptions
2025-06-30 10:13:35,548:INFO:Importing libraries
2025-06-30 10:13:35,548:INFO:Copying training dataset
2025-06-30 10:13:35,556:INFO:Defining folds
2025-06-30 10:13:35,557:INFO:Declaring metric variables
2025-06-30 10:13:35,562:INFO:Importing untrained model
2025-06-30 10:13:35,566:INFO:Dummy Classifier Imported successfully
2025-06-30 10:13:35,576:INFO:Starting cross validation
2025-06-30 10:13:35,577:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-30 10:13:35,673:INFO:Calculating mean and std
2025-06-30 10:13:35,674:INFO:Creating metrics dataframe
2025-06-30 10:13:35,677:INFO:Uploading results into container
2025-06-30 10:13:35,677:INFO:Uploading model into container now
2025-06-30 10:13:35,678:INFO:_master_model_container: 14
2025-06-30 10:13:35,678:INFO:_display_container: 2
2025-06-30 10:13:35,679:INFO:DummyClassifier(constant=None, random_state=5714, strategy='prior')
2025-06-30 10:13:35,679:INFO:create_model() successfully completed......................................
2025-06-30 10:13:35,794:INFO:SubProcess create_model() end ==================================
2025-06-30 10:13:35,795:INFO:Creating metrics dataframe
2025-06-30 10:13:35,807:WARNING:d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-06-30 10:13:35,816:INFO:Initializing create_model()
2025-06-30 10:13:35,817:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BF270B88D0>, estimator=DummyClassifier(constant=None, random_state=5714, strategy='prior'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-30 10:13:35,817:INFO:Checking exceptions
2025-06-30 10:13:35,822:INFO:Importing libraries
2025-06-30 10:13:35,822:INFO:Copying training dataset
2025-06-30 10:13:35,826:INFO:Defining folds
2025-06-30 10:13:35,826:INFO:Declaring metric variables
2025-06-30 10:13:35,826:INFO:Importing untrained model
2025-06-30 10:13:35,827:INFO:Declaring custom model
2025-06-30 10:13:35,827:INFO:Dummy Classifier Imported successfully
2025-06-30 10:13:35,827:INFO:Cross validation set to False
2025-06-30 10:13:35,827:INFO:Fitting Model
2025-06-30 10:13:35,832:INFO:DummyClassifier(constant=None, random_state=5714, strategy='prior')
2025-06-30 10:13:35,832:INFO:create_model() successfully completed......................................
2025-06-30 10:13:35,971:INFO:_master_model_container: 14
2025-06-30 10:13:35,971:INFO:_display_container: 2
2025-06-30 10:13:35,971:INFO:DummyClassifier(constant=None, random_state=5714, strategy='prior')
2025-06-30 10:13:35,972:INFO:compare_models() successfully completed......................................
2025-06-30 10:34:17,720:INFO:PyCaret ClassificationExperiment
2025-06-30 10:34:17,721:INFO:Logging name: clf-default-name
2025-06-30 10:34:17,721:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-06-30 10:34:17,721:INFO:version 3.3.2
2025-06-30 10:34:17,721:INFO:Initializing setup()
2025-06-30 10:34:17,721:INFO:self.USI: f028
2025-06-30 10:34:17,721:INFO:self._variable_keys: {'X', 'y_test', 'data', 'fold_generator', 'fix_imbalance', 'X_test', 'n_jobs_param', 'y_train', 'memory', 'fold_shuffle_param', 'idx', 'exp_name_log', 'seed', 'is_multiclass', 'html_param', 'pipeline', 'gpu_param', 'target_param', '_ml_usecase', 'log_plots_param', 'exp_id', 'logging_param', 'fold_groups_param', 'y', 'X_train', 'USI', 'gpu_n_jobs_param', '_available_plots'}
2025-06-30 10:34:17,721:INFO:Checking environment
2025-06-30 10:34:17,721:INFO:python_version: 3.11.13
2025-06-30 10:34:17,721:INFO:python_build: ('main', 'Jun  5 2025 13:03:15')
2025-06-30 10:34:17,721:INFO:machine: AMD64
2025-06-30 10:34:17,721:INFO:platform: Windows-10-10.0.22631-SP0
2025-06-30 10:34:17,728:INFO:Memory: svmem(total=12674457600, available=3197116416, percent=74.8, used=9477341184, free=3197116416)
2025-06-30 10:34:17,729:INFO:Physical Core: 4
2025-06-30 10:34:17,729:INFO:Logical Core: 8
2025-06-30 10:34:17,729:INFO:Checking libraries
2025-06-30 10:34:17,729:INFO:System:
2025-06-30 10:34:17,729:INFO:    python: 3.11.13 | packaged by Anaconda, Inc. | (main, Jun  5 2025, 13:03:15) [MSC v.1929 64 bit (AMD64)]
2025-06-30 10:34:17,729:INFO:executable: d:\ML_notes\.conda\python.exe
2025-06-30 10:34:17,729:INFO:   machine: Windows-10-10.0.22631-SP0
2025-06-30 10:34:17,729:INFO:PyCaret required dependencies:
2025-06-30 10:34:17,729:INFO:                 pip: 25.1
2025-06-30 10:34:17,729:INFO:          setuptools: 78.1.1
2025-06-30 10:34:17,729:INFO:             pycaret: 3.3.2
2025-06-30 10:34:17,729:INFO:             IPython: 9.3.0
2025-06-30 10:34:17,729:INFO:          ipywidgets: 8.1.7
2025-06-30 10:34:17,729:INFO:                tqdm: 4.67.1
2025-06-30 10:34:17,729:INFO:               numpy: 1.26.4
2025-06-30 10:34:17,729:INFO:              pandas: 2.1.4
2025-06-30 10:34:17,730:INFO:              jinja2: 3.1.6
2025-06-30 10:34:17,730:INFO:               scipy: 1.11.4
2025-06-30 10:34:17,730:INFO:              joblib: 1.3.2
2025-06-30 10:34:17,730:INFO:             sklearn: 1.4.2
2025-06-30 10:34:17,730:INFO:                pyod: 2.0.5
2025-06-30 10:34:17,730:INFO:            imblearn: 0.13.0
2025-06-30 10:34:17,730:INFO:   category_encoders: 2.7.0
2025-06-30 10:34:17,730:INFO:            lightgbm: 4.6.0
2025-06-30 10:34:17,730:INFO:               numba: 0.61.0
2025-06-30 10:34:17,730:INFO:            requests: 2.32.4
2025-06-30 10:34:17,730:INFO:          matplotlib: 3.7.5
2025-06-30 10:34:17,730:INFO:          scikitplot: 0.3.7
2025-06-30 10:34:17,730:INFO:         yellowbrick: 1.5
2025-06-30 10:34:17,730:INFO:              plotly: 5.24.1
2025-06-30 10:34:17,730:INFO:    plotly-resampler: Not installed
2025-06-30 10:34:17,730:INFO:             kaleido: 1.0.0
2025-06-30 10:34:17,730:INFO:           schemdraw: 0.15
2025-06-30 10:34:17,731:INFO:         statsmodels: 0.14.4
2025-06-30 10:34:17,731:INFO:              sktime: 0.26.0
2025-06-30 10:34:17,731:INFO:               tbats: 1.1.3
2025-06-30 10:34:17,731:INFO:            pmdarima: 2.0.4
2025-06-30 10:34:17,731:INFO:              psutil: 7.0.0
2025-06-30 10:34:17,731:INFO:          markupsafe: 3.0.2
2025-06-30 10:34:17,731:INFO:             pickle5: Not installed
2025-06-30 10:34:17,731:INFO:         cloudpickle: 3.1.1
2025-06-30 10:34:17,731:INFO:         deprecation: 2.1.0
2025-06-30 10:34:17,731:INFO:              xxhash: 3.5.0
2025-06-30 10:34:17,731:INFO:           wurlitzer: Not installed
2025-06-30 10:34:17,731:INFO:PyCaret optional dependencies:
2025-06-30 10:34:17,731:INFO:                shap: Not installed
2025-06-30 10:34:17,731:INFO:           interpret: Not installed
2025-06-30 10:34:17,731:INFO:                umap: Not installed
2025-06-30 10:34:17,731:INFO:     ydata_profiling: 4.16.1
2025-06-30 10:34:17,731:INFO:  explainerdashboard: Not installed
2025-06-30 10:34:17,731:INFO:             autoviz: Not installed
2025-06-30 10:34:17,731:INFO:           fairlearn: Not installed
2025-06-30 10:34:17,731:INFO:          deepchecks: Not installed
2025-06-30 10:34:17,731:INFO:             xgboost: Not installed
2025-06-30 10:34:17,731:INFO:            catboost: Not installed
2025-06-30 10:34:17,731:INFO:              kmodes: Not installed
2025-06-30 10:34:17,731:INFO:             mlxtend: Not installed
2025-06-30 10:34:17,732:INFO:       statsforecast: Not installed
2025-06-30 10:34:17,732:INFO:        tune_sklearn: Not installed
2025-06-30 10:34:17,732:INFO:                 ray: Not installed
2025-06-30 10:34:17,732:INFO:            hyperopt: Not installed
2025-06-30 10:34:17,732:INFO:              optuna: Not installed
2025-06-30 10:34:17,732:INFO:               skopt: Not installed
2025-06-30 10:34:17,732:INFO:              mlflow: Not installed
2025-06-30 10:34:17,732:INFO:              gradio: Not installed
2025-06-30 10:34:17,732:INFO:             fastapi: Not installed
2025-06-30 10:34:17,732:INFO:             uvicorn: Not installed
2025-06-30 10:34:17,732:INFO:              m2cgen: Not installed
2025-06-30 10:34:17,732:INFO:           evidently: Not installed
2025-06-30 10:34:17,732:INFO:               fugue: Not installed
2025-06-30 10:34:17,732:INFO:           streamlit: Not installed
2025-06-30 10:34:17,732:INFO:             prophet: Not installed
2025-06-30 10:34:17,732:INFO:None
2025-06-30 10:34:17,732:INFO:Set up data.
2025-06-30 10:34:17,739:INFO:Set up folding strategy.
2025-06-30 10:34:17,740:INFO:Set up train/test split.
2025-06-30 10:34:17,746:INFO:Set up index.
2025-06-30 10:34:17,746:INFO:Assigning column types.
2025-06-30 10:34:17,750:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-06-30 10:34:17,801:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-30 10:34:17,802:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-30 10:34:17,845:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-30 10:34:17,846:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-30 10:34:17,910:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-30 10:34:17,911:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-30 10:34:17,955:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-30 10:34:17,956:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-30 10:34:17,957:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-06-30 10:34:18,025:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-30 10:34:18,064:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-30 10:34:18,064:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-30 10:34:18,175:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-30 10:34:18,209:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-30 10:34:18,210:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-30 10:34:18,210:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-06-30 10:34:18,306:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-30 10:34:18,307:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-30 10:34:18,409:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-30 10:34:18,410:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-30 10:34:18,411:INFO:Preparing preprocessing pipeline...
2025-06-30 10:34:18,414:INFO:Set up simple imputation.
2025-06-30 10:34:18,440:INFO:Finished creating preprocessing pipeline.
2025-06-30 10:34:18,444:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\YOGA\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'Annual_Income',
                                             'Total_Spend', 'Years_as_Customer',
                                             'Num_of_Purchases',
                                             'Average_Transaction_Amount',
                                             'Num_of_Returns',
                                             'Num_of_Support_Contacts',
                                             'Satisfaction_Score',
                                             'Last_Purchase_Days_Ago',
                                             'Gender_Fem...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-06-30 10:34:18,444:INFO:Creating final display dataframe.
2025-06-30 10:34:18,548:INFO:Setup _display_container:                     Description              Value
0                    Session id               4852
1                        Target  Target_Churn_True
2                   Target type             Binary
3           Original data shape         (1000, 20)
4        Transformed data shape         (1000, 20)
5   Transformed train set shape          (700, 20)
6    Transformed test set shape          (300, 20)
7              Numeric features                 19
8                    Preprocess               True
9               Imputation type             simple
10           Numeric imputation               mean
11       Categorical imputation               mode
12               Fold Generator    StratifiedKFold
13                  Fold Number                 10
14                     CPU Jobs                 -1
15                      Use GPU              False
16               Log Experiment              False
17              Experiment Name   clf-default-name
18                          USI               f028
2025-06-30 10:34:18,668:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-30 10:34:18,668:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-30 10:34:18,763:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-30 10:34:18,763:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-30 10:34:18,765:INFO:setup() successfully completed in 1.05s...............
2025-06-30 10:34:18,766:INFO:Initializing compare_models()
2025-06-30 10:34:18,766:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BF29DAD710>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001BF29DAD710>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2025-06-30 10:34:18,766:INFO:Checking exceptions
2025-06-30 10:34:18,773:INFO:Preparing display monitor
2025-06-30 10:34:18,808:INFO:Initializing Logistic Regression
2025-06-30 10:34:18,809:INFO:Total runtime is 1.6617774963378907e-05 minutes
2025-06-30 10:34:18,813:INFO:SubProcess create_model() called ==================================
2025-06-30 10:34:18,814:INFO:Initializing create_model()
2025-06-30 10:34:18,814:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BF29DAD710>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BF21F25550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-30 10:34:18,814:INFO:Checking exceptions
2025-06-30 10:34:18,814:INFO:Importing libraries
2025-06-30 10:34:18,814:INFO:Copying training dataset
2025-06-30 10:34:18,825:INFO:Defining folds
2025-06-30 10:34:18,826:INFO:Declaring metric variables
2025-06-30 10:34:18,830:INFO:Importing untrained model
2025-06-30 10:34:18,839:INFO:Logistic Regression Imported successfully
2025-06-30 10:34:18,848:INFO:Starting cross validation
2025-06-30 10:34:18,850:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-30 10:34:25,856:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-30 10:34:25,891:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-30 10:34:25,906:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-30 10:34:25,997:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-30 10:34:26,139:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-30 10:34:26,157:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-30 10:34:26,181:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-30 10:34:26,213:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-30 10:34:26,244:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-30 10:34:26,255:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-30 10:34:26,279:INFO:Calculating mean and std
2025-06-30 10:34:26,280:INFO:Creating metrics dataframe
2025-06-30 10:34:26,282:INFO:Uploading results into container
2025-06-30 10:34:26,283:INFO:Uploading model into container now
2025-06-30 10:34:26,284:INFO:_master_model_container: 1
2025-06-30 10:34:26,284:INFO:_display_container: 2
2025-06-30 10:34:26,286:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4852, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-06-30 10:34:26,286:INFO:create_model() successfully completed......................................
2025-06-30 10:34:26,479:INFO:SubProcess create_model() end ==================================
2025-06-30 10:34:26,479:INFO:Creating metrics dataframe
2025-06-30 10:34:26,490:INFO:Initializing K Neighbors Classifier
2025-06-30 10:34:26,490:INFO:Total runtime is 0.12803194125493367 minutes
2025-06-30 10:34:26,494:INFO:SubProcess create_model() called ==================================
2025-06-30 10:34:26,494:INFO:Initializing create_model()
2025-06-30 10:34:26,494:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BF29DAD710>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BF21F25550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-30 10:34:26,494:INFO:Checking exceptions
2025-06-30 10:34:26,495:INFO:Importing libraries
2025-06-30 10:34:26,495:INFO:Copying training dataset
2025-06-30 10:34:26,502:INFO:Defining folds
2025-06-30 10:34:26,504:INFO:Declaring metric variables
2025-06-30 10:34:26,509:INFO:Importing untrained model
2025-06-30 10:34:26,517:INFO:K Neighbors Classifier Imported successfully
2025-06-30 10:34:26,529:INFO:Starting cross validation
2025-06-30 10:34:26,531:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-30 10:34:26,820:INFO:Calculating mean and std
2025-06-30 10:34:26,825:INFO:Creating metrics dataframe
2025-06-30 10:34:26,828:INFO:Uploading results into container
2025-06-30 10:34:26,829:INFO:Uploading model into container now
2025-06-30 10:34:26,830:INFO:_master_model_container: 2
2025-06-30 10:34:26,830:INFO:_display_container: 2
2025-06-30 10:34:26,830:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-06-30 10:34:26,830:INFO:create_model() successfully completed......................................
2025-06-30 10:34:27,083:INFO:SubProcess create_model() end ==================================
2025-06-30 10:34:27,083:INFO:Creating metrics dataframe
2025-06-30 10:34:27,097:INFO:Initializing Naive Bayes
2025-06-30 10:34:27,098:INFO:Total runtime is 0.13817137479782104 minutes
2025-06-30 10:34:27,104:INFO:SubProcess create_model() called ==================================
2025-06-30 10:34:27,104:INFO:Initializing create_model()
2025-06-30 10:34:27,105:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BF29DAD710>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BF21F25550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-30 10:34:27,105:INFO:Checking exceptions
2025-06-30 10:34:27,105:INFO:Importing libraries
2025-06-30 10:34:27,105:INFO:Copying training dataset
2025-06-30 10:34:27,119:INFO:Defining folds
2025-06-30 10:34:27,120:INFO:Declaring metric variables
2025-06-30 10:34:27,128:INFO:Importing untrained model
2025-06-30 10:34:27,135:INFO:Naive Bayes Imported successfully
2025-06-30 10:34:27,198:INFO:Starting cross validation
2025-06-30 10:34:27,200:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-30 10:34:27,345:INFO:Calculating mean and std
2025-06-30 10:34:27,346:INFO:Creating metrics dataframe
2025-06-30 10:34:27,349:INFO:Uploading results into container
2025-06-30 10:34:27,350:INFO:Uploading model into container now
2025-06-30 10:34:27,350:INFO:_master_model_container: 3
2025-06-30 10:34:27,350:INFO:_display_container: 2
2025-06-30 10:34:27,350:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-06-30 10:34:27,350:INFO:create_model() successfully completed......................................
2025-06-30 10:34:27,558:INFO:SubProcess create_model() end ==================================
2025-06-30 10:34:27,558:INFO:Creating metrics dataframe
2025-06-30 10:34:27,565:INFO:Initializing Decision Tree Classifier
2025-06-30 10:34:27,565:INFO:Total runtime is 0.14595052401224773 minutes
2025-06-30 10:34:27,573:INFO:SubProcess create_model() called ==================================
2025-06-30 10:34:27,573:INFO:Initializing create_model()
2025-06-30 10:34:27,573:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BF29DAD710>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BF21F25550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-30 10:34:27,573:INFO:Checking exceptions
2025-06-30 10:34:27,574:INFO:Importing libraries
2025-06-30 10:34:27,574:INFO:Copying training dataset
2025-06-30 10:34:27,580:INFO:Defining folds
2025-06-30 10:34:27,580:INFO:Declaring metric variables
2025-06-30 10:34:27,587:INFO:Importing untrained model
2025-06-30 10:34:27,593:INFO:Decision Tree Classifier Imported successfully
2025-06-30 10:34:27,605:INFO:Starting cross validation
2025-06-30 10:34:27,607:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-30 10:34:27,730:INFO:Calculating mean and std
2025-06-30 10:34:27,731:INFO:Creating metrics dataframe
2025-06-30 10:34:27,733:INFO:Uploading results into container
2025-06-30 10:34:27,733:INFO:Uploading model into container now
2025-06-30 10:34:27,734:INFO:_master_model_container: 4
2025-06-30 10:34:27,734:INFO:_display_container: 2
2025-06-30 10:34:27,737:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4852, splitter='best')
2025-06-30 10:34:27,737:INFO:create_model() successfully completed......................................
2025-06-30 10:34:27,895:INFO:SubProcess create_model() end ==================================
2025-06-30 10:34:27,895:INFO:Creating metrics dataframe
2025-06-30 10:34:27,905:INFO:Initializing SVM - Linear Kernel
2025-06-30 10:34:27,905:INFO:Total runtime is 0.1516231377919515 minutes
2025-06-30 10:34:27,908:INFO:SubProcess create_model() called ==================================
2025-06-30 10:34:27,909:INFO:Initializing create_model()
2025-06-30 10:34:27,909:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BF29DAD710>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BF21F25550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-30 10:34:27,909:INFO:Checking exceptions
2025-06-30 10:34:27,909:INFO:Importing libraries
2025-06-30 10:34:27,909:INFO:Copying training dataset
2025-06-30 10:34:27,915:INFO:Defining folds
2025-06-30 10:34:27,915:INFO:Declaring metric variables
2025-06-30 10:34:27,921:INFO:Importing untrained model
2025-06-30 10:34:27,927:INFO:SVM - Linear Kernel Imported successfully
2025-06-30 10:34:27,939:INFO:Starting cross validation
2025-06-30 10:34:27,941:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-30 10:34:27,999:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-30 10:34:28,002:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-30 10:34:28,027:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-30 10:34:28,050:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-30 10:34:28,076:INFO:Calculating mean and std
2025-06-30 10:34:28,077:INFO:Creating metrics dataframe
2025-06-30 10:34:28,079:INFO:Uploading results into container
2025-06-30 10:34:28,080:INFO:Uploading model into container now
2025-06-30 10:34:28,080:INFO:_master_model_container: 5
2025-06-30 10:34:28,080:INFO:_display_container: 2
2025-06-30 10:34:28,081:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=4852, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-06-30 10:34:28,081:INFO:create_model() successfully completed......................................
2025-06-30 10:34:28,283:INFO:SubProcess create_model() end ==================================
2025-06-30 10:34:28,283:INFO:Creating metrics dataframe
2025-06-30 10:34:28,297:INFO:Initializing Ridge Classifier
2025-06-30 10:34:28,297:INFO:Total runtime is 0.15815594991048176 minutes
2025-06-30 10:34:28,305:INFO:SubProcess create_model() called ==================================
2025-06-30 10:34:28,306:INFO:Initializing create_model()
2025-06-30 10:34:28,308:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BF29DAD710>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BF21F25550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-30 10:34:28,309:INFO:Checking exceptions
2025-06-30 10:34:28,309:INFO:Importing libraries
2025-06-30 10:34:28,309:INFO:Copying training dataset
2025-06-30 10:34:28,317:INFO:Defining folds
2025-06-30 10:34:28,318:INFO:Declaring metric variables
2025-06-30 10:34:28,330:INFO:Importing untrained model
2025-06-30 10:34:28,334:INFO:Ridge Classifier Imported successfully
2025-06-30 10:34:28,348:INFO:Starting cross validation
2025-06-30 10:34:28,349:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-30 10:34:28,482:INFO:Calculating mean and std
2025-06-30 10:34:28,484:INFO:Creating metrics dataframe
2025-06-30 10:34:28,490:INFO:Uploading results into container
2025-06-30 10:34:28,491:INFO:Uploading model into container now
2025-06-30 10:34:28,491:INFO:_master_model_container: 6
2025-06-30 10:34:28,491:INFO:_display_container: 2
2025-06-30 10:34:28,492:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=4852, solver='auto',
                tol=0.0001)
2025-06-30 10:34:28,492:INFO:create_model() successfully completed......................................
2025-06-30 10:34:28,688:INFO:SubProcess create_model() end ==================================
2025-06-30 10:34:28,688:INFO:Creating metrics dataframe
2025-06-30 10:34:28,698:INFO:Initializing Random Forest Classifier
2025-06-30 10:34:28,698:INFO:Total runtime is 0.16483914454778034 minutes
2025-06-30 10:34:28,706:INFO:SubProcess create_model() called ==================================
2025-06-30 10:34:28,707:INFO:Initializing create_model()
2025-06-30 10:34:28,707:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BF29DAD710>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BF21F25550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-30 10:34:28,707:INFO:Checking exceptions
2025-06-30 10:34:28,707:INFO:Importing libraries
2025-06-30 10:34:28,707:INFO:Copying training dataset
2025-06-30 10:34:28,721:INFO:Defining folds
2025-06-30 10:34:28,721:INFO:Declaring metric variables
2025-06-30 10:34:28,727:INFO:Importing untrained model
2025-06-30 10:34:28,733:INFO:Random Forest Classifier Imported successfully
2025-06-30 10:34:28,746:INFO:Starting cross validation
2025-06-30 10:34:28,747:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-30 10:34:29,673:INFO:Calculating mean and std
2025-06-30 10:34:29,674:INFO:Creating metrics dataframe
2025-06-30 10:34:29,677:INFO:Uploading results into container
2025-06-30 10:34:29,677:INFO:Uploading model into container now
2025-06-30 10:34:29,678:INFO:_master_model_container: 7
2025-06-30 10:34:29,679:INFO:_display_container: 2
2025-06-30 10:34:29,680:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=4852, verbose=0,
                       warm_start=False)
2025-06-30 10:34:29,680:INFO:create_model() successfully completed......................................
2025-06-30 10:34:29,842:INFO:SubProcess create_model() end ==================================
2025-06-30 10:34:29,842:INFO:Creating metrics dataframe
2025-06-30 10:34:29,855:INFO:Initializing Quadratic Discriminant Analysis
2025-06-30 10:34:29,855:INFO:Total runtime is 0.1841218074162801 minutes
2025-06-30 10:34:29,859:INFO:SubProcess create_model() called ==================================
2025-06-30 10:34:29,859:INFO:Initializing create_model()
2025-06-30 10:34:29,860:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BF29DAD710>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BF21F25550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-30 10:34:29,860:INFO:Checking exceptions
2025-06-30 10:34:29,860:INFO:Importing libraries
2025-06-30 10:34:29,860:INFO:Copying training dataset
2025-06-30 10:34:29,866:INFO:Defining folds
2025-06-30 10:34:29,867:INFO:Declaring metric variables
2025-06-30 10:34:29,875:INFO:Importing untrained model
2025-06-30 10:34:29,879:INFO:Quadratic Discriminant Analysis Imported successfully
2025-06-30 10:34:29,889:INFO:Starting cross validation
2025-06-30 10:34:29,891:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-30 10:34:29,926:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-30 10:34:29,933:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-30 10:34:29,940:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-30 10:34:29,943:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-30 10:34:29,945:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-30 10:34:29,949:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-30 10:34:29,964:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-30 10:34:29,977:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-30 10:34:29,983:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-30 10:34:30,004:INFO:Calculating mean and std
2025-06-30 10:34:30,005:INFO:Creating metrics dataframe
2025-06-30 10:34:30,008:INFO:Uploading results into container
2025-06-30 10:34:30,008:INFO:Uploading model into container now
2025-06-30 10:34:30,009:INFO:_master_model_container: 8
2025-06-30 10:34:30,009:INFO:_display_container: 2
2025-06-30 10:34:30,009:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-06-30 10:34:30,010:INFO:create_model() successfully completed......................................
2025-06-30 10:34:30,166:INFO:SubProcess create_model() end ==================================
2025-06-30 10:34:30,166:INFO:Creating metrics dataframe
2025-06-30 10:34:30,177:INFO:Initializing Ada Boost Classifier
2025-06-30 10:34:30,177:INFO:Total runtime is 0.1894870082537333 minutes
2025-06-30 10:34:30,181:INFO:SubProcess create_model() called ==================================
2025-06-30 10:34:30,181:INFO:Initializing create_model()
2025-06-30 10:34:30,181:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BF29DAD710>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BF21F25550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-30 10:34:30,181:INFO:Checking exceptions
2025-06-30 10:34:30,181:INFO:Importing libraries
2025-06-30 10:34:30,181:INFO:Copying training dataset
2025-06-30 10:34:30,193:INFO:Defining folds
2025-06-30 10:34:30,193:INFO:Declaring metric variables
2025-06-30 10:34:30,199:INFO:Importing untrained model
2025-06-30 10:34:30,209:INFO:Ada Boost Classifier Imported successfully
2025-06-30 10:34:30,221:INFO:Starting cross validation
2025-06-30 10:34:30,223:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-30 10:34:30,255:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-30 10:34:30,256:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-30 10:34:30,261:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-30 10:34:30,264:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-30 10:34:30,267:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-30 10:34:30,268:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-30 10:34:30,276:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-30 10:34:30,280:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-30 10:34:30,481:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-30 10:34:30,492:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-30 10:34:30,662:INFO:Calculating mean and std
2025-06-30 10:34:30,664:INFO:Creating metrics dataframe
2025-06-30 10:34:30,673:INFO:Uploading results into container
2025-06-30 10:34:30,674:INFO:Uploading model into container now
2025-06-30 10:34:30,676:INFO:_master_model_container: 9
2025-06-30 10:34:30,676:INFO:_display_container: 2
2025-06-30 10:34:30,677:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=4852)
2025-06-30 10:34:30,678:INFO:create_model() successfully completed......................................
2025-06-30 10:34:30,917:INFO:SubProcess create_model() end ==================================
2025-06-30 10:34:30,917:INFO:Creating metrics dataframe
2025-06-30 10:34:30,928:INFO:Initializing Gradient Boosting Classifier
2025-06-30 10:34:30,928:INFO:Total runtime is 0.20199649731318153 minutes
2025-06-30 10:34:30,934:INFO:SubProcess create_model() called ==================================
2025-06-30 10:34:30,934:INFO:Initializing create_model()
2025-06-30 10:34:30,937:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BF29DAD710>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BF21F25550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-30 10:34:30,937:INFO:Checking exceptions
2025-06-30 10:34:30,937:INFO:Importing libraries
2025-06-30 10:34:30,938:INFO:Copying training dataset
2025-06-30 10:34:30,946:INFO:Defining folds
2025-06-30 10:34:30,946:INFO:Declaring metric variables
2025-06-30 10:34:30,953:INFO:Importing untrained model
2025-06-30 10:34:30,963:INFO:Gradient Boosting Classifier Imported successfully
2025-06-30 10:34:30,997:INFO:Starting cross validation
2025-06-30 10:34:30,998:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-30 10:34:31,829:INFO:Calculating mean and std
2025-06-30 10:34:31,831:INFO:Creating metrics dataframe
2025-06-30 10:34:31,837:INFO:Uploading results into container
2025-06-30 10:34:31,838:INFO:Uploading model into container now
2025-06-30 10:34:31,839:INFO:_master_model_container: 10
2025-06-30 10:34:31,839:INFO:_display_container: 2
2025-06-30 10:34:31,839:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=4852, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-06-30 10:34:31,839:INFO:create_model() successfully completed......................................
2025-06-30 10:34:32,030:INFO:SubProcess create_model() end ==================================
2025-06-30 10:34:32,030:INFO:Creating metrics dataframe
2025-06-30 10:34:32,045:INFO:Initializing Linear Discriminant Analysis
2025-06-30 10:34:32,045:INFO:Total runtime is 0.2206286311149597 minutes
2025-06-30 10:34:32,050:INFO:SubProcess create_model() called ==================================
2025-06-30 10:34:32,052:INFO:Initializing create_model()
2025-06-30 10:34:32,053:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BF29DAD710>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BF21F25550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-30 10:34:32,053:INFO:Checking exceptions
2025-06-30 10:34:32,053:INFO:Importing libraries
2025-06-30 10:34:32,053:INFO:Copying training dataset
2025-06-30 10:34:32,065:INFO:Defining folds
2025-06-30 10:34:32,065:INFO:Declaring metric variables
2025-06-30 10:34:32,071:INFO:Importing untrained model
2025-06-30 10:34:32,082:INFO:Linear Discriminant Analysis Imported successfully
2025-06-30 10:34:32,094:INFO:Starting cross validation
2025-06-30 10:34:32,095:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-30 10:34:32,231:INFO:Calculating mean and std
2025-06-30 10:34:32,232:INFO:Creating metrics dataframe
2025-06-30 10:34:32,238:INFO:Uploading results into container
2025-06-30 10:34:32,240:INFO:Uploading model into container now
2025-06-30 10:34:32,240:INFO:_master_model_container: 11
2025-06-30 10:34:32,240:INFO:_display_container: 2
2025-06-30 10:34:32,241:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-06-30 10:34:32,241:INFO:create_model() successfully completed......................................
2025-06-30 10:34:32,432:INFO:SubProcess create_model() end ==================================
2025-06-30 10:34:32,432:INFO:Creating metrics dataframe
2025-06-30 10:34:32,448:INFO:Initializing Extra Trees Classifier
2025-06-30 10:34:32,449:INFO:Total runtime is 0.22735696236292519 minutes
2025-06-30 10:34:32,457:INFO:SubProcess create_model() called ==================================
2025-06-30 10:34:32,458:INFO:Initializing create_model()
2025-06-30 10:34:32,458:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BF29DAD710>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BF21F25550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-30 10:34:32,458:INFO:Checking exceptions
2025-06-30 10:34:32,458:INFO:Importing libraries
2025-06-30 10:34:32,459:INFO:Copying training dataset
2025-06-30 10:34:32,465:INFO:Defining folds
2025-06-30 10:34:32,465:INFO:Declaring metric variables
2025-06-30 10:34:32,474:INFO:Importing untrained model
2025-06-30 10:34:32,480:INFO:Extra Trees Classifier Imported successfully
2025-06-30 10:34:32,535:INFO:Starting cross validation
2025-06-30 10:34:32,539:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-30 10:34:33,380:INFO:Calculating mean and std
2025-06-30 10:34:33,381:INFO:Creating metrics dataframe
2025-06-30 10:34:33,388:INFO:Uploading results into container
2025-06-30 10:34:33,389:INFO:Uploading model into container now
2025-06-30 10:34:33,390:INFO:_master_model_container: 12
2025-06-30 10:34:33,390:INFO:_display_container: 2
2025-06-30 10:34:33,391:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=4852, verbose=0,
                     warm_start=False)
2025-06-30 10:34:33,391:INFO:create_model() successfully completed......................................
2025-06-30 10:34:33,572:INFO:SubProcess create_model() end ==================================
2025-06-30 10:34:33,573:INFO:Creating metrics dataframe
2025-06-30 10:34:33,588:INFO:Initializing Light Gradient Boosting Machine
2025-06-30 10:34:33,588:INFO:Total runtime is 0.24634315570195514 minutes
2025-06-30 10:34:33,596:INFO:SubProcess create_model() called ==================================
2025-06-30 10:34:33,597:INFO:Initializing create_model()
2025-06-30 10:34:33,597:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BF29DAD710>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BF21F25550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-30 10:34:33,597:INFO:Checking exceptions
2025-06-30 10:34:33,597:INFO:Importing libraries
2025-06-30 10:34:33,597:INFO:Copying training dataset
2025-06-30 10:34:33,611:INFO:Defining folds
2025-06-30 10:34:33,611:INFO:Declaring metric variables
2025-06-30 10:34:33,614:INFO:Importing untrained model
2025-06-30 10:34:33,622:INFO:Light Gradient Boosting Machine Imported successfully
2025-06-30 10:34:33,632:INFO:Starting cross validation
2025-06-30 10:34:33,634:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-30 10:34:34,682:INFO:Calculating mean and std
2025-06-30 10:34:34,683:INFO:Creating metrics dataframe
2025-06-30 10:34:34,689:INFO:Uploading results into container
2025-06-30 10:34:34,690:INFO:Uploading model into container now
2025-06-30 10:34:34,691:INFO:_master_model_container: 13
2025-06-30 10:34:34,691:INFO:_display_container: 2
2025-06-30 10:34:34,693:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=4852, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-06-30 10:34:34,693:INFO:create_model() successfully completed......................................
2025-06-30 10:34:34,881:INFO:SubProcess create_model() end ==================================
2025-06-30 10:34:34,882:INFO:Creating metrics dataframe
2025-06-30 10:34:34,899:INFO:Initializing Dummy Classifier
2025-06-30 10:34:34,899:INFO:Total runtime is 0.2681846896807353 minutes
2025-06-30 10:34:34,906:INFO:SubProcess create_model() called ==================================
2025-06-30 10:34:34,906:INFO:Initializing create_model()
2025-06-30 10:34:34,906:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BF29DAD710>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BF21F25550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-30 10:34:34,907:INFO:Checking exceptions
2025-06-30 10:34:34,907:INFO:Importing libraries
2025-06-30 10:34:34,907:INFO:Copying training dataset
2025-06-30 10:34:34,913:INFO:Defining folds
2025-06-30 10:34:34,913:INFO:Declaring metric variables
2025-06-30 10:34:34,921:INFO:Importing untrained model
2025-06-30 10:34:34,925:INFO:Dummy Classifier Imported successfully
2025-06-30 10:34:34,939:INFO:Starting cross validation
2025-06-30 10:34:34,940:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-30 10:34:35,038:INFO:Calculating mean and std
2025-06-30 10:34:35,039:INFO:Creating metrics dataframe
2025-06-30 10:34:35,040:INFO:Uploading results into container
2025-06-30 10:34:35,041:INFO:Uploading model into container now
2025-06-30 10:34:35,041:INFO:_master_model_container: 14
2025-06-30 10:34:35,041:INFO:_display_container: 2
2025-06-30 10:34:35,042:INFO:DummyClassifier(constant=None, random_state=4852, strategy='prior')
2025-06-30 10:34:35,042:INFO:create_model() successfully completed......................................
2025-06-30 10:34:35,214:INFO:SubProcess create_model() end ==================================
2025-06-30 10:34:35,214:INFO:Creating metrics dataframe
2025-06-30 10:34:35,231:WARNING:d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-06-30 10:34:35,245:INFO:Initializing create_model()
2025-06-30 10:34:35,245:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BF29DAD710>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-30 10:34:35,245:INFO:Checking exceptions
2025-06-30 10:34:35,247:INFO:Importing libraries
2025-06-30 10:34:35,248:INFO:Copying training dataset
2025-06-30 10:34:35,256:INFO:Defining folds
2025-06-30 10:34:35,256:INFO:Declaring metric variables
2025-06-30 10:34:35,256:INFO:Importing untrained model
2025-06-30 10:34:35,256:INFO:Declaring custom model
2025-06-30 10:34:35,257:INFO:K Neighbors Classifier Imported successfully
2025-06-30 10:34:35,258:INFO:Cross validation set to False
2025-06-30 10:34:35,258:INFO:Fitting Model
2025-06-30 10:34:35,271:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-06-30 10:34:35,271:INFO:create_model() successfully completed......................................
2025-06-30 10:34:35,484:INFO:_master_model_container: 14
2025-06-30 10:34:35,485:INFO:_display_container: 2
2025-06-30 10:34:35,486:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-06-30 10:34:35,486:INFO:compare_models() successfully completed......................................
2025-06-30 10:55:49,565:INFO:PyCaret ClassificationExperiment
2025-06-30 10:55:49,565:INFO:Logging name: clf-default-name
2025-06-30 10:55:49,565:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-06-30 10:55:49,565:INFO:version 3.3.2
2025-06-30 10:55:49,565:INFO:Initializing setup()
2025-06-30 10:55:49,565:INFO:self.USI: d38c
2025-06-30 10:55:49,565:INFO:self._variable_keys: {'X', 'y_test', 'data', 'fold_generator', 'fix_imbalance', 'X_test', 'n_jobs_param', 'y_train', 'memory', 'fold_shuffle_param', 'idx', 'exp_name_log', 'seed', 'is_multiclass', 'html_param', 'pipeline', 'gpu_param', 'target_param', '_ml_usecase', 'log_plots_param', 'exp_id', 'logging_param', 'fold_groups_param', 'y', 'X_train', 'USI', 'gpu_n_jobs_param', '_available_plots'}
2025-06-30 10:55:49,565:INFO:Checking environment
2025-06-30 10:55:49,566:INFO:python_version: 3.11.13
2025-06-30 10:55:49,566:INFO:python_build: ('main', 'Jun  5 2025 13:03:15')
2025-06-30 10:55:49,566:INFO:machine: AMD64
2025-06-30 10:55:49,566:INFO:platform: Windows-10-10.0.22631-SP0
2025-06-30 10:55:49,573:INFO:Memory: svmem(total=12674457600, available=1885462528, percent=85.1, used=10788995072, free=1885462528)
2025-06-30 10:55:49,574:INFO:Physical Core: 4
2025-06-30 10:55:49,574:INFO:Logical Core: 8
2025-06-30 10:55:49,574:INFO:Checking libraries
2025-06-30 10:55:49,574:INFO:System:
2025-06-30 10:55:49,574:INFO:    python: 3.11.13 | packaged by Anaconda, Inc. | (main, Jun  5 2025, 13:03:15) [MSC v.1929 64 bit (AMD64)]
2025-06-30 10:55:49,574:INFO:executable: d:\ML_notes\.conda\python.exe
2025-06-30 10:55:49,574:INFO:   machine: Windows-10-10.0.22631-SP0
2025-06-30 10:55:49,574:INFO:PyCaret required dependencies:
2025-06-30 10:55:49,574:INFO:                 pip: 25.1
2025-06-30 10:55:49,574:INFO:          setuptools: 78.1.1
2025-06-30 10:55:49,575:INFO:             pycaret: 3.3.2
2025-06-30 10:55:49,575:INFO:             IPython: 9.3.0
2025-06-30 10:55:49,575:INFO:          ipywidgets: 8.1.7
2025-06-30 10:55:49,575:INFO:                tqdm: 4.67.1
2025-06-30 10:55:49,575:INFO:               numpy: 1.26.4
2025-06-30 10:55:49,575:INFO:              pandas: 2.1.4
2025-06-30 10:55:49,575:INFO:              jinja2: 3.1.6
2025-06-30 10:55:49,575:INFO:               scipy: 1.11.4
2025-06-30 10:55:49,575:INFO:              joblib: 1.3.2
2025-06-30 10:55:49,576:INFO:             sklearn: 1.4.2
2025-06-30 10:55:49,576:INFO:                pyod: 2.0.5
2025-06-30 10:55:49,576:INFO:            imblearn: 0.13.0
2025-06-30 10:55:49,576:INFO:   category_encoders: 2.7.0
2025-06-30 10:55:49,576:INFO:            lightgbm: 4.6.0
2025-06-30 10:55:49,576:INFO:               numba: 0.61.0
2025-06-30 10:55:49,576:INFO:            requests: 2.32.4
2025-06-30 10:55:49,576:INFO:          matplotlib: 3.7.5
2025-06-30 10:55:49,576:INFO:          scikitplot: 0.3.7
2025-06-30 10:55:49,576:INFO:         yellowbrick: 1.5
2025-06-30 10:55:49,576:INFO:              plotly: 5.24.1
2025-06-30 10:55:49,576:INFO:    plotly-resampler: Not installed
2025-06-30 10:55:49,576:INFO:             kaleido: 1.0.0
2025-06-30 10:55:49,576:INFO:           schemdraw: 0.15
2025-06-30 10:55:49,576:INFO:         statsmodels: 0.14.4
2025-06-30 10:55:49,576:INFO:              sktime: 0.26.0
2025-06-30 10:55:49,576:INFO:               tbats: 1.1.3
2025-06-30 10:55:49,576:INFO:            pmdarima: 2.0.4
2025-06-30 10:55:49,576:INFO:              psutil: 7.0.0
2025-06-30 10:55:49,576:INFO:          markupsafe: 3.0.2
2025-06-30 10:55:49,577:INFO:             pickle5: Not installed
2025-06-30 10:55:49,577:INFO:         cloudpickle: 3.1.1
2025-06-30 10:55:49,577:INFO:         deprecation: 2.1.0
2025-06-30 10:55:49,577:INFO:              xxhash: 3.5.0
2025-06-30 10:55:49,577:INFO:           wurlitzer: Not installed
2025-06-30 10:55:49,577:INFO:PyCaret optional dependencies:
2025-06-30 10:55:49,577:INFO:                shap: Not installed
2025-06-30 10:55:49,577:INFO:           interpret: Not installed
2025-06-30 10:55:49,577:INFO:                umap: Not installed
2025-06-30 10:55:49,577:INFO:     ydata_profiling: 4.16.1
2025-06-30 10:55:49,577:INFO:  explainerdashboard: Not installed
2025-06-30 10:55:49,577:INFO:             autoviz: Not installed
2025-06-30 10:55:49,577:INFO:           fairlearn: Not installed
2025-06-30 10:55:49,577:INFO:          deepchecks: Not installed
2025-06-30 10:55:49,577:INFO:             xgboost: Not installed
2025-06-30 10:55:49,577:INFO:            catboost: Not installed
2025-06-30 10:55:49,577:INFO:              kmodes: Not installed
2025-06-30 10:55:49,577:INFO:             mlxtend: Not installed
2025-06-30 10:55:49,577:INFO:       statsforecast: Not installed
2025-06-30 10:55:49,577:INFO:        tune_sklearn: Not installed
2025-06-30 10:55:49,577:INFO:                 ray: Not installed
2025-06-30 10:55:49,577:INFO:            hyperopt: Not installed
2025-06-30 10:55:49,577:INFO:              optuna: Not installed
2025-06-30 10:55:49,577:INFO:               skopt: Not installed
2025-06-30 10:55:49,577:INFO:              mlflow: Not installed
2025-06-30 10:55:49,577:INFO:              gradio: Not installed
2025-06-30 10:55:49,577:INFO:             fastapi: Not installed
2025-06-30 10:55:49,578:INFO:             uvicorn: Not installed
2025-06-30 10:55:49,578:INFO:              m2cgen: Not installed
2025-06-30 10:55:49,578:INFO:           evidently: Not installed
2025-06-30 10:55:49,578:INFO:               fugue: Not installed
2025-06-30 10:55:49,578:INFO:           streamlit: Not installed
2025-06-30 10:55:49,578:INFO:             prophet: Not installed
2025-06-30 10:55:49,578:INFO:None
2025-06-30 10:55:49,578:INFO:Set up data.
2025-06-30 10:55:49,589:INFO:Set up folding strategy.
2025-06-30 10:55:49,589:INFO:Set up train/test split.
2025-06-30 10:55:49,594:INFO:Set up index.
2025-06-30 10:55:49,595:INFO:Assigning column types.
2025-06-30 10:55:49,602:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-06-30 10:55:49,663:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-30 10:55:49,664:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-30 10:55:49,693:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-30 10:55:49,694:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-30 10:55:49,744:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-30 10:55:49,745:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-30 10:55:49,774:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-30 10:55:49,774:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-30 10:55:49,775:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-06-30 10:55:49,837:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-30 10:55:49,873:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-30 10:55:49,874:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-30 10:55:49,930:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-30 10:55:49,962:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-30 10:55:49,962:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-30 10:55:49,963:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-06-30 10:55:50,042:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-30 10:55:50,043:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-30 10:55:50,141:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-30 10:55:50,144:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-30 10:55:50,147:INFO:Preparing preprocessing pipeline...
2025-06-30 10:55:50,153:INFO:Set up simple imputation.
2025-06-30 10:55:50,197:INFO:Finished creating preprocessing pipeline.
2025-06-30 10:55:50,202:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\YOGA\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'Annual_Income',
                                             'Total_Spend', 'Years_as_Customer',
                                             'Num_of_Purchases',
                                             'Average_Transaction_Amount',
                                             'Num_of_Returns',
                                             'Num_of_Support_Contacts',
                                             'Satisfaction_Score',
                                             'Last_Purchase_Days_Ago',
                                             'Gender_Fem...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-06-30 10:55:50,202:INFO:Creating final display dataframe.
2025-06-30 10:55:50,308:INFO:Setup _display_container:                     Description              Value
0                    Session id                123
1                        Target  Target_Churn_True
2                   Target type             Binary
3           Original data shape         (1000, 20)
4        Transformed data shape         (1000, 20)
5   Transformed train set shape          (700, 20)
6    Transformed test set shape          (300, 20)
7              Numeric features                 19
8                    Preprocess               True
9               Imputation type             simple
10           Numeric imputation               mean
11       Categorical imputation               mode
12               Fold Generator    StratifiedKFold
13                  Fold Number                 10
14                     CPU Jobs                 -1
15                      Use GPU              False
16               Log Experiment              False
17              Experiment Name   clf-default-name
18                          USI               d38c
2025-06-30 10:55:50,425:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-30 10:55:50,425:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-30 10:55:50,549:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-30 10:55:50,550:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-30 10:55:50,553:INFO:setup() successfully completed in 0.99s...............
2025-06-30 10:56:45,383:INFO:Initializing create_model()
2025-06-30 10:56:45,383:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BF2A180AD0>, estimator=knn, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-30 10:56:45,385:INFO:Checking exceptions
2025-06-30 10:56:45,405:INFO:Importing libraries
2025-06-30 10:56:45,406:INFO:Copying training dataset
2025-06-30 10:56:45,423:INFO:Defining folds
2025-06-30 10:56:45,423:INFO:Declaring metric variables
2025-06-30 10:56:45,429:INFO:Importing untrained model
2025-06-30 10:56:45,435:INFO:K Neighbors Classifier Imported successfully
2025-06-30 10:56:45,449:INFO:Starting cross validation
2025-06-30 10:56:45,451:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-30 10:56:51,726:INFO:Calculating mean and std
2025-06-30 10:56:51,729:INFO:Creating metrics dataframe
2025-06-30 10:56:51,739:INFO:Finalizing model
2025-06-30 10:56:51,753:INFO:Uploading results into container
2025-06-30 10:56:51,757:INFO:Uploading model into container now
2025-06-30 10:56:51,777:INFO:_master_model_container: 1
2025-06-30 10:56:51,777:INFO:_display_container: 2
2025-06-30 10:56:51,777:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-06-30 10:56:51,777:INFO:create_model() successfully completed......................................
2025-06-30 10:56:51,977:INFO:Initializing create_model()
2025-06-30 10:56:51,978:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BF2A180AD0>, estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-30 10:56:51,978:INFO:Checking exceptions
2025-06-30 10:56:52,003:INFO:Importing libraries
2025-06-30 10:56:52,003:INFO:Copying training dataset
2025-06-30 10:56:52,017:INFO:Defining folds
2025-06-30 10:56:52,017:INFO:Declaring metric variables
2025-06-30 10:56:52,023:INFO:Importing untrained model
2025-06-30 10:56:52,030:INFO:Extra Trees Classifier Imported successfully
2025-06-30 10:56:52,044:INFO:Starting cross validation
2025-06-30 10:56:52,046:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-30 10:56:52,714:INFO:Calculating mean and std
2025-06-30 10:56:52,715:INFO:Creating metrics dataframe
2025-06-30 10:56:52,724:INFO:Finalizing model
2025-06-30 10:56:52,937:INFO:Uploading results into container
2025-06-30 10:56:52,938:INFO:Uploading model into container now
2025-06-30 10:56:52,953:INFO:_master_model_container: 2
2025-06-30 10:56:52,954:INFO:_display_container: 3
2025-06-30 10:56:52,954:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-06-30 10:56:52,956:INFO:create_model() successfully completed......................................
2025-06-30 10:56:53,115:INFO:Initializing create_model()
2025-06-30 10:56:53,115:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BF2A180AD0>, estimator=lightgbm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-30 10:56:53,115:INFO:Checking exceptions
2025-06-30 10:56:53,132:INFO:Importing libraries
2025-06-30 10:56:53,134:INFO:Copying training dataset
2025-06-30 10:56:53,150:INFO:Defining folds
2025-06-30 10:56:53,150:INFO:Declaring metric variables
2025-06-30 10:56:53,159:INFO:Importing untrained model
2025-06-30 10:56:53,165:INFO:Light Gradient Boosting Machine Imported successfully
2025-06-30 10:56:53,175:INFO:Starting cross validation
2025-06-30 10:56:53,179:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-30 10:56:54,162:INFO:Calculating mean and std
2025-06-30 10:56:54,163:INFO:Creating metrics dataframe
2025-06-30 10:56:54,172:INFO:Finalizing model
2025-06-30 10:56:54,200:INFO:[LightGBM] [Info] Number of positive: 368, number of negative: 332
2025-06-30 10:56:54,201:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001031 seconds.
2025-06-30 10:56:54,201:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-06-30 10:56:54,202:INFO:[LightGBM] [Info] Total Bins 1572
2025-06-30 10:56:54,202:INFO:[LightGBM] [Info] Number of data points in the train set: 700, number of used features: 19
2025-06-30 10:56:54,202:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.525714 -> initscore=0.102948
2025-06-30 10:56:54,202:INFO:[LightGBM] [Info] Start training from score 0.102948
2025-06-30 10:56:54,205:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,207:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,209:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,211:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,212:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,214:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,216:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,218:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,219:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,221:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,223:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,225:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,226:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,228:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,229:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,232:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,234:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,235:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,237:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,238:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,240:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,241:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,243:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,244:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,245:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,246:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,247:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,248:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,250:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,250:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,252:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,253:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,254:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,255:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,256:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,258:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,259:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,260:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,260:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,261:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,262:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,263:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,264:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,265:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,265:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,266:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,267:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,268:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,269:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,269:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,270:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,271:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,272:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,273:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,274:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,274:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,275:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,276:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,277:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,278:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,279:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,280:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,280:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,281:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,282:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,283:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,284:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,285:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,286:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,286:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,287:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,288:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,288:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,290:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,291:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,292:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,292:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,293:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,294:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,294:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,295:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,295:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,296:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,297:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,299:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,299:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,300:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,301:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,302:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,302:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,303:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,304:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,305:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,306:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,307:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,308:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,308:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,309:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-06-30 10:56:54,324:INFO:Uploading results into container
2025-06-30 10:56:54,326:INFO:Uploading model into container now
2025-06-30 10:56:54,339:INFO:_master_model_container: 3
2025-06-30 10:56:54,339:INFO:_display_container: 4
2025-06-30 10:56:54,340:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-06-30 10:56:54,340:INFO:create_model() successfully completed......................................
2025-06-30 10:58:01,916:INFO:Initializing stack_models()
2025-06-30 10:58:01,918:INFO:stack_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BF2A180AD0>, estimator_list=[KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)], meta_model=None, meta_model_fold=5, fold=None, round=4, method=auto, restack=False, choose_better=False, optimize=Accuracy, fit_kwargs=None, groups=None, probability_threshold=None, verbose=True, return_train_score=False)
2025-06-30 10:58:01,918:INFO:Checking exceptions
2025-06-30 10:58:01,928:INFO:Defining meta model
2025-06-30 10:58:01,955:INFO:Getting model names
2025-06-30 10:58:01,956:INFO:[('K Neighbors Classifier', KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')), ('Extra Trees Classifier', ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)), ('Light Gradient Boosting Machine', LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0))]
2025-06-30 10:58:01,964:INFO:SubProcess create_model() called ==================================
2025-06-30 10:58:01,972:INFO:Initializing create_model()
2025-06-30 10:58:01,972:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BF2A180AD0>, estimator=StackingClassifier(cv=5,
                   estimators=[('K Neighbors Classifier',
                                KNeighborsClassifier(algorithm='auto',
                                                     leaf_size=30,
                                                     metric='minkowski',
                                                     metric_params=None,
                                                     n_jobs=-1, n_neighbors=5,
                                                     p=2, weights='uniform')),
                               ('Extra Trees Classifier',
                                ExtraTreesClassifier(bootstrap=False,
                                                     ccp_alpha=0.0,
                                                     class_weight=None,
                                                     criterion='gini',
                                                     max_depth=None,
                                                     max_features='sqrt',
                                                     max_leaf...
                                               subsample_for_bin=200000,
                                               subsample_freq=0))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=123,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=False, stack_method='auto',
                   verbose=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BF26757210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-30 10:58:01,972:INFO:Checking exceptions
2025-06-30 10:58:01,972:INFO:Importing libraries
2025-06-30 10:58:01,972:INFO:Copying training dataset
2025-06-30 10:58:01,988:INFO:Defining folds
2025-06-30 10:58:01,988:INFO:Declaring metric variables
2025-06-30 10:58:02,032:INFO:Importing untrained model
2025-06-30 10:58:02,032:INFO:Declaring custom model
2025-06-30 10:58:02,045:INFO:Stacking Classifier Imported successfully
2025-06-30 10:58:02,062:INFO:Starting cross validation
2025-06-30 10:58:02,064:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-30 10:58:10,041:INFO:Calculating mean and std
2025-06-30 10:58:10,043:INFO:Creating metrics dataframe
2025-06-30 10:58:10,054:INFO:Finalizing model
2025-06-30 10:58:11,119:INFO:Uploading results into container
2025-06-30 10:58:11,120:INFO:Uploading model into container now
2025-06-30 10:58:11,121:INFO:_master_model_container: 4
2025-06-30 10:58:11,121:INFO:_display_container: 5
2025-06-30 10:58:11,129:INFO:StackingClassifier(cv=5,
                   estimators=[('K Neighbors Classifier',
                                KNeighborsClassifier(algorithm='auto',
                                                     leaf_size=30,
                                                     metric='minkowski',
                                                     metric_params=None,
                                                     n_jobs=-1, n_neighbors=5,
                                                     p=2, weights='uniform')),
                               ('Extra Trees Classifier',
                                ExtraTreesClassifier(bootstrap=False,
                                                     ccp_alpha=0.0,
                                                     class_weight=None,
                                                     criterion='gini',
                                                     max_depth=None,
                                                     max_features='sqrt',
                                                     max_leaf...
                                               subsample_for_bin=200000,
                                               subsample_freq=0))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=123,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=False, stack_method='auto',
                   verbose=0)
2025-06-30 10:58:11,130:INFO:create_model() successfully completed......................................
2025-06-30 10:58:11,301:INFO:SubProcess create_model() end ==================================
2025-06-30 10:58:11,316:INFO:_master_model_container: 4
2025-06-30 10:58:11,316:INFO:_display_container: 5
2025-06-30 10:58:11,323:INFO:StackingClassifier(cv=5,
                   estimators=[('K Neighbors Classifier',
                                KNeighborsClassifier(algorithm='auto',
                                                     leaf_size=30,
                                                     metric='minkowski',
                                                     metric_params=None,
                                                     n_jobs=-1, n_neighbors=5,
                                                     p=2, weights='uniform')),
                               ('Extra Trees Classifier',
                                ExtraTreesClassifier(bootstrap=False,
                                                     ccp_alpha=0.0,
                                                     class_weight=None,
                                                     criterion='gini',
                                                     max_depth=None,
                                                     max_features='sqrt',
                                                     max_leaf...
                                               subsample_for_bin=200000,
                                               subsample_freq=0))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=123,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=False, stack_method='auto',
                   verbose=0)
2025-06-30 10:58:11,323:INFO:stack_models() successfully completed......................................
2025-06-30 10:58:35,883:INFO:Initializing evaluate_model()
2025-06-30 10:58:35,883:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BF2A180AD0>, estimator=StackingClassifier(cv=5,
                   estimators=[('K Neighbors Classifier',
                                KNeighborsClassifier(algorithm='auto',
                                                     leaf_size=30,
                                                     metric='minkowski',
                                                     metric_params=None,
                                                     n_jobs=-1, n_neighbors=5,
                                                     p=2, weights='uniform')),
                               ('Extra Trees Classifier',
                                ExtraTreesClassifier(bootstrap=False,
                                                     ccp_alpha=0.0,
                                                     class_weight=None,
                                                     criterion='gini',
                                                     max_depth=None,
                                                     max_features='sqrt',
                                                     max_leaf...
                                               subsample_for_bin=200000,
                                               subsample_freq=0))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=123,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=False, stack_method='auto',
                   verbose=0), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2025-06-30 10:58:35,909:INFO:Initializing plot_model()
2025-06-30 10:58:35,909:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BF2A180AD0>, estimator=StackingClassifier(cv=5,
                   estimators=[('K Neighbors Classifier',
                                KNeighborsClassifier(algorithm='auto',
                                                     leaf_size=30,
                                                     metric='minkowski',
                                                     metric_params=None,
                                                     n_jobs=-1, n_neighbors=5,
                                                     p=2, weights='uniform')),
                               ('Extra Trees Classifier',
                                ExtraTreesClassifier(bootstrap=False,
                                                     ccp_alpha=0.0,
                                                     class_weight=None,
                                                     criterion='gini',
                                                     max_depth=None,
                                                     max_features='sqrt',
                                                     max_leaf...
                                               subsample_for_bin=200000,
                                               subsample_freq=0))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=123,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=False, stack_method='auto',
                   verbose=0), plot=pipeline, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2025-06-30 10:58:35,909:INFO:Checking exceptions
2025-06-30 10:58:35,916:INFO:Preloading libraries
2025-06-30 10:58:35,940:INFO:Copying training dataset
2025-06-30 10:58:35,941:INFO:Plot type: pipeline
2025-06-30 10:58:36,194:INFO:Visual Rendered Successfully
2025-06-30 10:58:36,344:INFO:plot_model() successfully completed......................................
2025-06-30 10:58:59,299:INFO:Initializing plot_model()
2025-06-30 10:58:59,300:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BF2A180AD0>, estimator=StackingClassifier(cv=5,
                   estimators=[('K Neighbors Classifier',
                                KNeighborsClassifier(algorithm='auto',
                                                     leaf_size=30,
                                                     metric='minkowski',
                                                     metric_params=None,
                                                     n_jobs=-1, n_neighbors=5,
                                                     p=2, weights='uniform')),
                               ('Extra Trees Classifier',
                                ExtraTreesClassifier(bootstrap=False,
                                                     ccp_alpha=0.0,
                                                     class_weight=None,
                                                     criterion='gini',
                                                     max_depth=None,
                                                     max_features='sqrt',
                                                     max_leaf...
                                               subsample_for_bin=200000,
                                               subsample_freq=0))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=123,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=False, stack_method='auto',
                   verbose=0), plot=auc, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2025-06-30 10:58:59,300:INFO:Checking exceptions
2025-06-30 10:58:59,305:INFO:Preloading libraries
2025-06-30 10:58:59,325:INFO:Copying training dataset
2025-06-30 10:58:59,326:INFO:Plot type: auc
2025-06-30 10:58:59,438:INFO:Fitting Model
2025-06-30 10:58:59,438:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but KNeighborsClassifier was fitted with feature names
  warnings.warn(

2025-06-30 10:58:59,439:INFO:Scoring test/hold-out set
2025-06-30 10:58:59,719:INFO:Visual Rendered Successfully
2025-06-30 10:58:59,848:INFO:plot_model() successfully completed......................................
2025-06-30 10:59:16,543:INFO:Initializing plot_model()
2025-06-30 10:59:16,544:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BF2A180AD0>, estimator=StackingClassifier(cv=5,
                   estimators=[('K Neighbors Classifier',
                                KNeighborsClassifier(algorithm='auto',
                                                     leaf_size=30,
                                                     metric='minkowski',
                                                     metric_params=None,
                                                     n_jobs=-1, n_neighbors=5,
                                                     p=2, weights='uniform')),
                               ('Extra Trees Classifier',
                                ExtraTreesClassifier(bootstrap=False,
                                                     ccp_alpha=0.0,
                                                     class_weight=None,
                                                     criterion='gini',
                                                     max_depth=None,
                                                     max_features='sqrt',
                                                     max_leaf...
                                               subsample_for_bin=200000,
                                               subsample_freq=0))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=123,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=False, stack_method='auto',
                   verbose=0), plot=tree, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2025-06-30 10:59:16,544:INFO:Checking exceptions
2025-06-30 10:59:19,934:INFO:Initializing plot_model()
2025-06-30 10:59:19,934:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BF2A180AD0>, estimator=StackingClassifier(cv=5,
                   estimators=[('K Neighbors Classifier',
                                KNeighborsClassifier(algorithm='auto',
                                                     leaf_size=30,
                                                     metric='minkowski',
                                                     metric_params=None,
                                                     n_jobs=-1, n_neighbors=5,
                                                     p=2, weights='uniform')),
                               ('Extra Trees Classifier',
                                ExtraTreesClassifier(bootstrap=False,
                                                     ccp_alpha=0.0,
                                                     class_weight=None,
                                                     criterion='gini',
                                                     max_depth=None,
                                                     max_features='sqrt',
                                                     max_leaf...
                                               subsample_for_bin=200000,
                                               subsample_freq=0))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=123,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=False, stack_method='auto',
                   verbose=0), plot=pipeline, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2025-06-30 10:59:19,935:INFO:Checking exceptions
2025-06-30 10:59:19,937:INFO:Preloading libraries
2025-06-30 10:59:19,955:INFO:Copying training dataset
2025-06-30 10:59:19,955:INFO:Plot type: pipeline
2025-06-30 10:59:20,045:INFO:Visual Rendered Successfully
2025-06-30 10:59:20,221:INFO:plot_model() successfully completed......................................
2025-06-30 10:59:23,195:INFO:Initializing plot_model()
2025-06-30 10:59:23,196:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BF2A180AD0>, estimator=StackingClassifier(cv=5,
                   estimators=[('K Neighbors Classifier',
                                KNeighborsClassifier(algorithm='auto',
                                                     leaf_size=30,
                                                     metric='minkowski',
                                                     metric_params=None,
                                                     n_jobs=-1, n_neighbors=5,
                                                     p=2, weights='uniform')),
                               ('Extra Trees Classifier',
                                ExtraTreesClassifier(bootstrap=False,
                                                     ccp_alpha=0.0,
                                                     class_weight=None,
                                                     criterion='gini',
                                                     max_depth=None,
                                                     max_features='sqrt',
                                                     max_leaf...
                                               subsample_for_bin=200000,
                                               subsample_freq=0))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=123,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=False, stack_method='auto',
                   verbose=0), plot=confusion_matrix, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2025-06-30 10:59:23,196:INFO:Checking exceptions
2025-06-30 10:59:23,200:INFO:Preloading libraries
2025-06-30 10:59:23,222:INFO:Copying training dataset
2025-06-30 10:59:23,223:INFO:Plot type: confusion_matrix
2025-06-30 10:59:23,333:INFO:Fitting Model
2025-06-30 10:59:23,333:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but KNeighborsClassifier was fitted with feature names
  warnings.warn(

2025-06-30 10:59:23,333:INFO:Scoring test/hold-out set
2025-06-30 10:59:23,558:INFO:Visual Rendered Successfully
2025-06-30 10:59:23,697:INFO:plot_model() successfully completed......................................
2025-06-30 11:00:29,178:INFO:Initializing finalize_model()
2025-06-30 11:00:29,179:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BF2A180AD0>, estimator=StackingClassifier(cv=5,
                   estimators=[('K Neighbors Classifier',
                                KNeighborsClassifier(algorithm='auto',
                                                     leaf_size=30,
                                                     metric='minkowski',
                                                     metric_params=None,
                                                     n_jobs=-1, n_neighbors=5,
                                                     p=2, weights='uniform')),
                               ('Extra Trees Classifier',
                                ExtraTreesClassifier(bootstrap=False,
                                                     ccp_alpha=0.0,
                                                     class_weight=None,
                                                     criterion='gini',
                                                     max_depth=None,
                                                     max_features='sqrt',
                                                     max_leaf...
                                               subsample_for_bin=200000,
                                               subsample_freq=0))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=123,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=False, stack_method='auto',
                   verbose=0), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-06-30 11:00:29,186:INFO:Finalizing StackingClassifier(cv=5,
                   estimators=[('K Neighbors Classifier',
                                KNeighborsClassifier(algorithm='auto',
                                                     leaf_size=30,
                                                     metric='minkowski',
                                                     metric_params=None,
                                                     n_jobs=-1, n_neighbors=5,
                                                     p=2, weights='uniform')),
                               ('Extra Trees Classifier',
                                ExtraTreesClassifier(bootstrap=False,
                                                     ccp_alpha=0.0,
                                                     class_weight=None,
                                                     criterion='gini',
                                                     max_depth=None,
                                                     max_features='sqrt',
                                                     max_leaf...
                                               subsample_for_bin=200000,
                                               subsample_freq=0))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=123,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=False, stack_method='auto',
                   verbose=0)
2025-06-30 11:00:29,197:INFO:Initializing create_model()
2025-06-30 11:00:29,198:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BF2A180AD0>, estimator=StackingClassifier(cv=5,
                   estimators=[('K Neighbors Classifier',
                                KNeighborsClassifier(algorithm='auto',
                                                     leaf_size=30,
                                                     metric='minkowski',
                                                     metric_params=None,
                                                     n_jobs=-1, n_neighbors=5,
                                                     p=2, weights='uniform')),
                               ('Extra Trees Classifier',
                                ExtraTreesClassifier(bootstrap=False,
                                                     ccp_alpha=0.0,
                                                     class_weight=None,
                                                     criterion='gini',
                                                     max_depth=None,
                                                     max_features='sqrt',
                                                     max_leaf...
                                               subsample_for_bin=200000,
                                               subsample_freq=0))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=123,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=False, stack_method='auto',
                   verbose=0), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-06-30 11:00:29,198:INFO:Checking exceptions
2025-06-30 11:00:29,201:INFO:Importing libraries
2025-06-30 11:00:29,201:INFO:Copying training dataset
2025-06-30 11:00:29,203:INFO:Defining folds
2025-06-30 11:00:29,203:INFO:Declaring metric variables
2025-06-30 11:00:29,203:INFO:Importing untrained model
2025-06-30 11:00:29,203:INFO:Declaring custom model
2025-06-30 11:00:29,207:INFO:Stacking Classifier Imported successfully
2025-06-30 11:00:29,208:INFO:Cross validation set to False
2025-06-30 11:00:29,208:INFO:Fitting Model
2025-06-30 11:00:30,236:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'Annual_Income',
                                             'Total_Spend', 'Years_as_Customer',
                                             'Num_of_Purchases',
                                             'Average_Transaction_Amount',
                                             'Num_of_Returns',
                                             'Num_of_Support_Contacts',
                                             'Satisfaction_Score',
                                             'Last_Purchase_Days_Ago',
                                             'Gender_Female', 'Gender_Male',
                                             'Gender_Other',
                                             'Emai...
                                                                subsample_for_bin=200000,
                                                                subsample_freq=0))],
                                    final_estimator=LogisticRegression(C=1.0,
                                                                       class_weight=None,
                                                                       dual=False,
                                                                       fit_intercept=True,
                                                                       intercept_scaling=1,
                                                                       l1_ratio=None,
                                                                       max_iter=1000,
                                                                       multi_class='auto',
                                                                       n_jobs=None,
                                                                       penalty='l2',
                                                                       random_state=123,
                                                                       solver='lbfgs',
                                                                       tol=0.0001,
                                                                       verbose=0,
                                                                       warm_start=False),
                                    n_jobs=-1, passthrough=False,
                                    stack_method='auto', verbose=0))],
         verbose=False)
2025-06-30 11:00:30,236:INFO:create_model() successfully completed......................................
2025-06-30 11:00:30,393:INFO:_master_model_container: 4
2025-06-30 11:00:30,394:INFO:_display_container: 5
2025-06-30 11:00:30,411:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'Annual_Income',
                                             'Total_Spend', 'Years_as_Customer',
                                             'Num_of_Purchases',
                                             'Average_Transaction_Amount',
                                             'Num_of_Returns',
                                             'Num_of_Support_Contacts',
                                             'Satisfaction_Score',
                                             'Last_Purchase_Days_Ago',
                                             'Gender_Female', 'Gender_Male',
                                             'Gender_Other',
                                             'Emai...
                                                                subsample_for_bin=200000,
                                                                subsample_freq=0))],
                                    final_estimator=LogisticRegression(C=1.0,
                                                                       class_weight=None,
                                                                       dual=False,
                                                                       fit_intercept=True,
                                                                       intercept_scaling=1,
                                                                       l1_ratio=None,
                                                                       max_iter=1000,
                                                                       multi_class='auto',
                                                                       n_jobs=None,
                                                                       penalty='l2',
                                                                       random_state=123,
                                                                       solver='lbfgs',
                                                                       tol=0.0001,
                                                                       verbose=0,
                                                                       warm_start=False),
                                    n_jobs=-1, passthrough=False,
                                    stack_method='auto', verbose=0))],
         verbose=False)
2025-06-30 11:00:30,411:INFO:finalize_model() successfully completed......................................
2025-06-30 11:06:30,241:INFO:Initializing create_model()
2025-06-30 11:06:30,242:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BF2A180AD0>, estimator=knn, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-30 11:06:30,242:INFO:Checking exceptions
2025-06-30 11:06:30,267:INFO:Importing libraries
2025-06-30 11:06:30,268:INFO:Copying training dataset
2025-06-30 11:06:30,280:INFO:Defining folds
2025-06-30 11:06:30,280:INFO:Declaring metric variables
2025-06-30 11:06:30,285:INFO:Importing untrained model
2025-06-30 11:06:30,292:INFO:K Neighbors Classifier Imported successfully
2025-06-30 11:06:30,305:INFO:Starting cross validation
2025-06-30 11:06:30,306:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-30 11:06:36,800:INFO:Calculating mean and std
2025-06-30 11:06:36,803:INFO:Creating metrics dataframe
2025-06-30 11:06:36,811:INFO:Finalizing model
2025-06-30 11:06:36,836:INFO:Uploading results into container
2025-06-30 11:06:36,837:INFO:Uploading model into container now
2025-06-30 11:06:36,854:INFO:_master_model_container: 5
2025-06-30 11:06:36,854:INFO:_display_container: 6
2025-06-30 11:06:36,855:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-06-30 11:06:36,855:INFO:create_model() successfully completed......................................
2025-06-30 11:08:45,250:INFO:Initializing finalize_model()
2025-06-30 11:08:45,250:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BF2A180AD0>, estimator=StackingClassifier(cv=5,
                   estimators=[('K Neighbors Classifier',
                                KNeighborsClassifier(algorithm='auto',
                                                     leaf_size=30,
                                                     metric='minkowski',
                                                     metric_params=None,
                                                     n_jobs=-1, n_neighbors=5,
                                                     p=2, weights='uniform')),
                               ('Extra Trees Classifier',
                                ExtraTreesClassifier(bootstrap=False,
                                                     ccp_alpha=0.0,
                                                     class_weight=None,
                                                     criterion='gini',
                                                     max_depth=None,
                                                     max_features='sqrt',
                                                     max_leaf...
                                               subsample_for_bin=200000,
                                               subsample_freq=0))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=123,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=False, stack_method='auto',
                   verbose=0), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-06-30 11:08:45,256:INFO:Finalizing StackingClassifier(cv=5,
                   estimators=[('K Neighbors Classifier',
                                KNeighborsClassifier(algorithm='auto',
                                                     leaf_size=30,
                                                     metric='minkowski',
                                                     metric_params=None,
                                                     n_jobs=-1, n_neighbors=5,
                                                     p=2, weights='uniform')),
                               ('Extra Trees Classifier',
                                ExtraTreesClassifier(bootstrap=False,
                                                     ccp_alpha=0.0,
                                                     class_weight=None,
                                                     criterion='gini',
                                                     max_depth=None,
                                                     max_features='sqrt',
                                                     max_leaf...
                                               subsample_for_bin=200000,
                                               subsample_freq=0))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=123,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=False, stack_method='auto',
                   verbose=0)
2025-06-30 11:08:45,267:INFO:Initializing create_model()
2025-06-30 11:08:45,267:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BF2A180AD0>, estimator=StackingClassifier(cv=5,
                   estimators=[('K Neighbors Classifier',
                                KNeighborsClassifier(algorithm='auto',
                                                     leaf_size=30,
                                                     metric='minkowski',
                                                     metric_params=None,
                                                     n_jobs=-1, n_neighbors=5,
                                                     p=2, weights='uniform')),
                               ('Extra Trees Classifier',
                                ExtraTreesClassifier(bootstrap=False,
                                                     ccp_alpha=0.0,
                                                     class_weight=None,
                                                     criterion='gini',
                                                     max_depth=None,
                                                     max_features='sqrt',
                                                     max_leaf...
                                               subsample_for_bin=200000,
                                               subsample_freq=0))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=123,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=False, stack_method='auto',
                   verbose=0), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-06-30 11:08:45,267:INFO:Checking exceptions
2025-06-30 11:08:45,269:INFO:Importing libraries
2025-06-30 11:08:45,269:INFO:Copying training dataset
2025-06-30 11:08:45,270:INFO:Defining folds
2025-06-30 11:08:45,270:INFO:Declaring metric variables
2025-06-30 11:08:45,270:INFO:Importing untrained model
2025-06-30 11:08:45,270:INFO:Declaring custom model
2025-06-30 11:08:45,274:INFO:Stacking Classifier Imported successfully
2025-06-30 11:08:45,275:INFO:Cross validation set to False
2025-06-30 11:08:45,275:INFO:Fitting Model
2025-06-30 11:08:46,334:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'Annual_Income',
                                             'Total_Spend', 'Years_as_Customer',
                                             'Num_of_Purchases',
                                             'Average_Transaction_Amount',
                                             'Num_of_Returns',
                                             'Num_of_Support_Contacts',
                                             'Satisfaction_Score',
                                             'Last_Purchase_Days_Ago',
                                             'Gender_Female', 'Gender_Male',
                                             'Gender_Other',
                                             'Emai...
                                                                subsample_for_bin=200000,
                                                                subsample_freq=0))],
                                    final_estimator=LogisticRegression(C=1.0,
                                                                       class_weight=None,
                                                                       dual=False,
                                                                       fit_intercept=True,
                                                                       intercept_scaling=1,
                                                                       l1_ratio=None,
                                                                       max_iter=1000,
                                                                       multi_class='auto',
                                                                       n_jobs=None,
                                                                       penalty='l2',
                                                                       random_state=123,
                                                                       solver='lbfgs',
                                                                       tol=0.0001,
                                                                       verbose=0,
                                                                       warm_start=False),
                                    n_jobs=-1, passthrough=False,
                                    stack_method='auto', verbose=0))],
         verbose=False)
2025-06-30 11:08:46,334:INFO:create_model() successfully completed......................................
2025-06-30 11:08:46,505:INFO:_master_model_container: 5
2025-06-30 11:08:46,505:INFO:_display_container: 6
2025-06-30 11:08:46,523:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'Annual_Income',
                                             'Total_Spend', 'Years_as_Customer',
                                             'Num_of_Purchases',
                                             'Average_Transaction_Amount',
                                             'Num_of_Returns',
                                             'Num_of_Support_Contacts',
                                             'Satisfaction_Score',
                                             'Last_Purchase_Days_Ago',
                                             'Gender_Female', 'Gender_Male',
                                             'Gender_Other',
                                             'Emai...
                                                                subsample_for_bin=200000,
                                                                subsample_freq=0))],
                                    final_estimator=LogisticRegression(C=1.0,
                                                                       class_weight=None,
                                                                       dual=False,
                                                                       fit_intercept=True,
                                                                       intercept_scaling=1,
                                                                       l1_ratio=None,
                                                                       max_iter=1000,
                                                                       multi_class='auto',
                                                                       n_jobs=None,
                                                                       penalty='l2',
                                                                       random_state=123,
                                                                       solver='lbfgs',
                                                                       tol=0.0001,
                                                                       verbose=0,
                                                                       warm_start=False),
                                    n_jobs=-1, passthrough=False,
                                    stack_method='auto', verbose=0))],
         verbose=False)
2025-06-30 11:08:46,523:INFO:finalize_model() successfully completed......................................
2025-06-30 11:11:43,325:INFO:Initializing plot_model()
2025-06-30 11:11:43,326:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BF2A180AD0>, estimator=StackingClassifier(cv=5,
                   estimators=[('K Neighbors Classifier',
                                KNeighborsClassifier(algorithm='auto',
                                                     leaf_size=30,
                                                     metric='minkowski',
                                                     metric_params=None,
                                                     n_jobs=-1, n_neighbors=5,
                                                     p=2, weights='uniform')),
                               ('Extra Trees Classifier',
                                ExtraTreesClassifier(bootstrap=False,
                                                     ccp_alpha=0.0,
                                                     class_weight=None,
                                                     criterion='gini',
                                                     max_depth=None,
                                                     max_features='sqrt',
                                                     max_leaf...
                                               subsample_for_bin=200000,
                                               subsample_freq=0))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=123,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=False, stack_method='auto',
                   verbose=0), plot=pr, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2025-06-30 11:11:43,326:INFO:Checking exceptions
2025-06-30 11:11:43,332:INFO:Preloading libraries
2025-06-30 11:11:43,367:INFO:Copying training dataset
2025-06-30 11:11:43,367:INFO:Plot type: pr
2025-06-30 11:11:43,493:INFO:Fitting Model
2025-06-30 11:11:43,494:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but KNeighborsClassifier was fitted with feature names
  warnings.warn(

2025-06-30 11:11:43,494:INFO:Scoring test/hold-out set
2025-06-30 11:11:43,779:INFO:Visual Rendered Successfully
2025-06-30 11:11:43,978:INFO:plot_model() successfully completed......................................
2025-06-30 11:15:47,511:INFO:Initializing plot_model()
2025-06-30 11:15:47,511:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BF2A180AD0>, estimator=StackingClassifier(cv=5,
                   estimators=[('K Neighbors Classifier',
                                KNeighborsClassifier(algorithm='auto',
                                                     leaf_size=30,
                                                     metric='minkowski',
                                                     metric_params=None,
                                                     n_jobs=-1, n_neighbors=5,
                                                     p=2, weights='uniform')),
                               ('Extra Trees Classifier',
                                ExtraTreesClassifier(bootstrap=False,
                                                     ccp_alpha=0.0,
                                                     class_weight=None,
                                                     criterion='gini',
                                                     max_depth=None,
                                                     max_features='sqrt',
                                                     max_leaf...
                                               subsample_for_bin=200000,
                                               subsample_freq=0))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=123,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=False, stack_method='auto',
                   verbose=0), plot=auc, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2025-06-30 11:15:47,512:INFO:Checking exceptions
2025-06-30 11:15:47,514:INFO:Preloading libraries
2025-06-30 11:15:47,534:INFO:Copying training dataset
2025-06-30 11:15:47,534:INFO:Plot type: auc
2025-06-30 11:15:47,640:INFO:Fitting Model
2025-06-30 11:15:47,640:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but KNeighborsClassifier was fitted with feature names
  warnings.warn(

2025-06-30 11:15:47,641:INFO:Scoring test/hold-out set
2025-06-30 11:15:47,918:INFO:Visual Rendered Successfully
2025-06-30 11:15:48,107:INFO:plot_model() successfully completed......................................
2025-06-30 11:15:51,071:INFO:Initializing plot_model()
2025-06-30 11:15:51,072:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BF2A180AD0>, estimator=StackingClassifier(cv=5,
                   estimators=[('K Neighbors Classifier',
                                KNeighborsClassifier(algorithm='auto',
                                                     leaf_size=30,
                                                     metric='minkowski',
                                                     metric_params=None,
                                                     n_jobs=-1, n_neighbors=5,
                                                     p=2, weights='uniform')),
                               ('Extra Trees Classifier',
                                ExtraTreesClassifier(bootstrap=False,
                                                     ccp_alpha=0.0,
                                                     class_weight=None,
                                                     criterion='gini',
                                                     max_depth=None,
                                                     max_features='sqrt',
                                                     max_leaf...
                                               subsample_for_bin=200000,
                                               subsample_freq=0))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=123,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=False, stack_method='auto',
                   verbose=0), plot=threshold, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2025-06-30 11:15:51,072:INFO:Checking exceptions
2025-06-30 11:15:51,076:INFO:Preloading libraries
2025-06-30 11:15:51,115:INFO:Copying training dataset
2025-06-30 11:15:51,115:INFO:Plot type: threshold
2025-06-30 11:15:51,226:INFO:Fitting Model
2025-06-30 11:16:48,249:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but KNeighborsClassifier was fitted with feature names
  warnings.warn(

2025-06-30 11:16:48,272:INFO:Scoring test/hold-out set
2025-06-30 11:16:48,700:INFO:Visual Rendered Successfully
2025-06-30 11:16:48,849:INFO:plot_model() successfully completed......................................
2025-06-30 11:17:23,224:INFO:Initializing plot_model()
2025-06-30 11:17:23,224:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BF2A180AD0>, estimator=StackingClassifier(cv=5,
                   estimators=[('K Neighbors Classifier',
                                KNeighborsClassifier(algorithm='auto',
                                                     leaf_size=30,
                                                     metric='minkowski',
                                                     metric_params=None,
                                                     n_jobs=-1, n_neighbors=5,
                                                     p=2, weights='uniform')),
                               ('Extra Trees Classifier',
                                ExtraTreesClassifier(bootstrap=False,
                                                     ccp_alpha=0.0,
                                                     class_weight=None,
                                                     criterion='gini',
                                                     max_depth=None,
                                                     max_features='sqrt',
                                                     max_leaf...
                                               subsample_for_bin=200000,
                                               subsample_freq=0))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=123,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=False, stack_method='auto',
                   verbose=0), plot=auc, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2025-06-30 11:17:23,225:INFO:Checking exceptions
2025-06-30 11:17:23,228:INFO:Preloading libraries
2025-06-30 11:17:23,246:INFO:Copying training dataset
2025-06-30 11:17:23,246:INFO:Plot type: auc
2025-06-30 11:17:23,351:INFO:Fitting Model
2025-06-30 11:17:23,351:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but KNeighborsClassifier was fitted with feature names
  warnings.warn(

2025-06-30 11:17:23,352:INFO:Scoring test/hold-out set
2025-06-30 11:17:23,613:INFO:Visual Rendered Successfully
2025-06-30 11:17:23,753:INFO:plot_model() successfully completed......................................
2025-07-01 10:15:55,464:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-01 10:15:55,465:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-01 10:15:55,465:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-01 10:15:55,465:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-01 10:15:56,050:INFO:PyCaret ClassificationExperiment
2025-07-01 10:15:56,050:INFO:Logging name: clf-default-name
2025-07-01 10:15:56,051:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-07-01 10:15:56,051:INFO:version 3.3.2
2025-07-01 10:15:56,051:INFO:Initializing setup()
2025-07-01 10:15:56,051:INFO:self.USI: 7ef2
2025-07-01 10:15:56,051:INFO:self._variable_keys: {'fix_imbalance', 'data', 'is_multiclass', 'y_test', 'X_train', 'log_plots_param', 'X', 'X_test', 'logging_param', 'n_jobs_param', 'gpu_param', 'idx', 'html_param', 'fold_generator', '_ml_usecase', 'exp_id', 'USI', '_available_plots', 'gpu_n_jobs_param', 'pipeline', 'y_train', 'fold_groups_param', 'y', 'fold_shuffle_param', 'target_param', 'memory', 'seed', 'exp_name_log'}
2025-07-01 10:15:56,051:INFO:Checking environment
2025-07-01 10:15:56,051:INFO:python_version: 3.11.13
2025-07-01 10:15:56,051:INFO:python_build: ('main', 'Jun  5 2025 13:03:15')
2025-07-01 10:15:56,051:INFO:machine: AMD64
2025-07-01 10:15:56,051:INFO:platform: Windows-10-10.0.22631-SP0
2025-07-01 10:15:56,059:INFO:Memory: svmem(total=12674457600, available=3183030272, percent=74.9, used=9491427328, free=3183030272)
2025-07-01 10:15:56,059:INFO:Physical Core: 4
2025-07-01 10:15:56,060:INFO:Logical Core: 8
2025-07-01 10:15:56,060:INFO:Checking libraries
2025-07-01 10:15:56,060:INFO:System:
2025-07-01 10:15:56,060:INFO:    python: 3.11.13 | packaged by Anaconda, Inc. | (main, Jun  5 2025, 13:03:15) [MSC v.1929 64 bit (AMD64)]
2025-07-01 10:15:56,060:INFO:executable: d:\ML_notes\.conda\python.exe
2025-07-01 10:15:56,060:INFO:   machine: Windows-10-10.0.22631-SP0
2025-07-01 10:15:56,060:INFO:PyCaret required dependencies:
2025-07-01 10:15:56,192:INFO:                 pip: 25.1
2025-07-01 10:15:56,192:INFO:          setuptools: 78.1.1
2025-07-01 10:15:56,192:INFO:             pycaret: 3.3.2
2025-07-01 10:15:56,192:INFO:             IPython: 9.3.0
2025-07-01 10:15:56,192:INFO:          ipywidgets: 8.1.7
2025-07-01 10:15:56,192:INFO:                tqdm: 4.67.1
2025-07-01 10:15:56,192:INFO:               numpy: 1.26.4
2025-07-01 10:15:56,193:INFO:              pandas: 2.1.4
2025-07-01 10:15:56,193:INFO:              jinja2: 3.1.6
2025-07-01 10:15:56,193:INFO:               scipy: 1.11.4
2025-07-01 10:15:56,193:INFO:              joblib: 1.3.2
2025-07-01 10:15:56,193:INFO:             sklearn: 1.4.2
2025-07-01 10:15:56,193:INFO:                pyod: 2.0.5
2025-07-01 10:15:56,193:INFO:            imblearn: 0.13.0
2025-07-01 10:15:56,193:INFO:   category_encoders: 2.7.0
2025-07-01 10:15:56,193:INFO:            lightgbm: 4.6.0
2025-07-01 10:15:56,193:INFO:               numba: 0.61.0
2025-07-01 10:15:56,193:INFO:            requests: 2.32.4
2025-07-01 10:15:56,193:INFO:          matplotlib: 3.7.5
2025-07-01 10:15:56,193:INFO:          scikitplot: 0.3.7
2025-07-01 10:15:56,194:INFO:         yellowbrick: 1.5
2025-07-01 10:15:56,194:INFO:              plotly: 5.24.1
2025-07-01 10:15:56,194:INFO:    plotly-resampler: Not installed
2025-07-01 10:15:56,194:INFO:             kaleido: 1.0.0
2025-07-01 10:15:56,194:INFO:           schemdraw: 0.15
2025-07-01 10:15:56,194:INFO:         statsmodels: 0.14.4
2025-07-01 10:15:56,194:INFO:              sktime: 0.26.0
2025-07-01 10:15:56,194:INFO:               tbats: 1.1.3
2025-07-01 10:15:56,194:INFO:            pmdarima: 2.0.4
2025-07-01 10:15:56,194:INFO:              psutil: 7.0.0
2025-07-01 10:15:56,195:INFO:          markupsafe: 3.0.2
2025-07-01 10:15:56,195:INFO:             pickle5: Not installed
2025-07-01 10:15:56,195:INFO:         cloudpickle: 3.1.1
2025-07-01 10:15:56,195:INFO:         deprecation: 2.1.0
2025-07-01 10:15:56,195:INFO:              xxhash: 3.5.0
2025-07-01 10:15:56,195:INFO:           wurlitzer: Not installed
2025-07-01 10:15:56,195:INFO:PyCaret optional dependencies:
2025-07-01 10:15:56,217:INFO:                shap: Not installed
2025-07-01 10:15:56,217:INFO:           interpret: Not installed
2025-07-01 10:15:56,217:INFO:                umap: Not installed
2025-07-01 10:15:56,217:INFO:     ydata_profiling: 4.16.1
2025-07-01 10:15:56,217:INFO:  explainerdashboard: Not installed
2025-07-01 10:15:56,217:INFO:             autoviz: Not installed
2025-07-01 10:15:56,217:INFO:           fairlearn: Not installed
2025-07-01 10:15:56,217:INFO:          deepchecks: Not installed
2025-07-01 10:15:56,217:INFO:             xgboost: 3.0.2
2025-07-01 10:15:56,217:INFO:            catboost: Not installed
2025-07-01 10:15:56,217:INFO:              kmodes: Not installed
2025-07-01 10:15:56,217:INFO:             mlxtend: Not installed
2025-07-01 10:15:56,217:INFO:       statsforecast: Not installed
2025-07-01 10:15:56,218:INFO:        tune_sklearn: Not installed
2025-07-01 10:15:56,218:INFO:                 ray: Not installed
2025-07-01 10:15:56,218:INFO:            hyperopt: Not installed
2025-07-01 10:15:56,218:INFO:              optuna: Not installed
2025-07-01 10:15:56,218:INFO:               skopt: Not installed
2025-07-01 10:15:56,218:INFO:              mlflow: Not installed
2025-07-01 10:15:56,218:INFO:              gradio: Not installed
2025-07-01 10:15:56,218:INFO:             fastapi: Not installed
2025-07-01 10:15:56,218:INFO:             uvicorn: Not installed
2025-07-01 10:15:56,218:INFO:              m2cgen: Not installed
2025-07-01 10:15:56,218:INFO:           evidently: Not installed
2025-07-01 10:15:56,219:INFO:               fugue: Not installed
2025-07-01 10:15:56,219:INFO:           streamlit: Not installed
2025-07-01 10:15:56,219:INFO:             prophet: Not installed
2025-07-01 10:15:56,219:INFO:None
2025-07-01 10:15:56,219:INFO:Set up data.
2025-07-01 10:15:56,230:INFO:Set up folding strategy.
2025-07-01 10:15:56,230:INFO:Set up train/test split.
2025-07-01 10:15:56,246:INFO:Set up index.
2025-07-01 10:15:56,246:INFO:Assigning column types.
2025-07-01 10:15:56,257:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-07-01 10:15:56,360:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-01 10:15:56,369:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-01 10:15:56,464:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 10:15:56,472:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 10:15:56,589:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-01 10:15:56,590:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-01 10:15:56,661:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 10:15:56,668:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 10:15:56,668:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-07-01 10:15:56,792:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-01 10:15:56,857:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 10:15:56,862:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 10:15:56,978:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-01 10:15:57,046:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 10:15:57,053:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 10:15:57,054:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-07-01 10:15:57,261:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 10:15:57,271:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 10:15:57,489:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 10:15:57,497:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 10:15:57,502:INFO:Preparing preprocessing pipeline...
2025-07-01 10:15:57,509:INFO:Set up simple imputation.
2025-07-01 10:15:57,610:INFO:Finished creating preprocessing pipeline.
2025-07-01 10:15:57,626:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\YOGA\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'Annual_Income',
                                             'Total_Spend', 'Years_as_Customer',
                                             'Num_of_Purchases',
                                             'Average_Transaction_Amount',
                                             'Num_of_Returns',
                                             'Num_of_Support_Contacts',
                                             'Satisfaction_Score',
                                             'Last_Purchase_Days_Ago',
                                             'Gender_Fem...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-07-01 10:15:57,626:INFO:Creating final display dataframe.
2025-07-01 10:15:57,900:INFO:Setup _display_container:                     Description              Value
0                    Session id               4243
1                        Target  Target_Churn_True
2                   Target type             Binary
3           Original data shape         (1000, 20)
4        Transformed data shape         (1000, 20)
5   Transformed train set shape          (700, 20)
6    Transformed test set shape          (300, 20)
7              Numeric features                 19
8                    Preprocess               True
9               Imputation type             simple
10           Numeric imputation               mean
11       Categorical imputation               mode
12               Fold Generator    StratifiedKFold
13                  Fold Number                 10
14                     CPU Jobs                 -1
15                      Use GPU              False
16               Log Experiment              False
17              Experiment Name   clf-default-name
18                          USI               7ef2
2025-07-01 10:15:58,182:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 10:15:58,190:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 10:15:58,479:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 10:15:58,486:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 10:15:58,493:INFO:setup() successfully completed in 2.45s...............
2025-07-01 10:15:58,494:INFO:Initializing compare_models()
2025-07-01 10:15:58,495:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231C6C9C2D0>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000231C6C9C2D0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2025-07-01 10:15:58,495:INFO:Checking exceptions
2025-07-01 10:15:58,511:INFO:Preparing display monitor
2025-07-01 10:15:58,603:INFO:Initializing Logistic Regression
2025-07-01 10:15:58,603:INFO:Total runtime is 2.5089581807454427e-05 minutes
2025-07-01 10:15:58,617:INFO:SubProcess create_model() called ==================================
2025-07-01 10:15:58,618:INFO:Initializing create_model()
2025-07-01 10:15:58,619:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231C6C9C2D0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231C7F01990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 10:15:58,620:INFO:Checking exceptions
2025-07-01 10:15:58,622:INFO:Importing libraries
2025-07-01 10:15:58,623:INFO:Copying training dataset
2025-07-01 10:15:58,638:INFO:Defining folds
2025-07-01 10:15:58,639:INFO:Declaring metric variables
2025-07-01 10:15:58,647:INFO:Importing untrained model
2025-07-01 10:15:58,657:INFO:Logistic Regression Imported successfully
2025-07-01 10:15:58,680:INFO:Starting cross validation
2025-07-01 10:15:58,683:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 10:16:06,733:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-07-01 10:16:06,735:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-07-01 10:16:06,756:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-07-01 10:16:06,761:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-07-01 10:16:06,772:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-07-01 10:16:06,782:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-07-01 10:16:06,796:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-07-01 10:16:06,842:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-07-01 10:16:07,320:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-07-01 10:16:07,347:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-07-01 10:16:07,400:INFO:Calculating mean and std
2025-07-01 10:16:07,405:INFO:Creating metrics dataframe
2025-07-01 10:16:07,415:INFO:Uploading results into container
2025-07-01 10:16:07,416:INFO:Uploading model into container now
2025-07-01 10:16:07,417:INFO:_master_model_container: 1
2025-07-01 10:16:07,417:INFO:_display_container: 2
2025-07-01 10:16:07,418:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4243, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-07-01 10:16:07,418:INFO:create_model() successfully completed......................................
2025-07-01 10:16:07,664:INFO:SubProcess create_model() end ==================================
2025-07-01 10:16:07,665:INFO:Creating metrics dataframe
2025-07-01 10:16:07,682:INFO:Initializing K Neighbors Classifier
2025-07-01 10:16:07,683:INFO:Total runtime is 0.15135101079940794 minutes
2025-07-01 10:16:07,693:INFO:SubProcess create_model() called ==================================
2025-07-01 10:16:07,694:INFO:Initializing create_model()
2025-07-01 10:16:07,695:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231C6C9C2D0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231C7F01990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 10:16:07,695:INFO:Checking exceptions
2025-07-01 10:16:07,695:INFO:Importing libraries
2025-07-01 10:16:07,695:INFO:Copying training dataset
2025-07-01 10:16:07,713:INFO:Defining folds
2025-07-01 10:16:07,714:INFO:Declaring metric variables
2025-07-01 10:16:07,727:INFO:Importing untrained model
2025-07-01 10:16:07,739:INFO:K Neighbors Classifier Imported successfully
2025-07-01 10:16:07,756:INFO:Starting cross validation
2025-07-01 10:16:07,758:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 10:16:08,304:INFO:Calculating mean and std
2025-07-01 10:16:08,307:INFO:Creating metrics dataframe
2025-07-01 10:16:08,313:INFO:Uploading results into container
2025-07-01 10:16:08,315:INFO:Uploading model into container now
2025-07-01 10:16:08,316:INFO:_master_model_container: 2
2025-07-01 10:16:08,316:INFO:_display_container: 2
2025-07-01 10:16:08,318:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-07-01 10:16:08,318:INFO:create_model() successfully completed......................................
2025-07-01 10:16:08,532:INFO:SubProcess create_model() end ==================================
2025-07-01 10:16:08,533:INFO:Creating metrics dataframe
2025-07-01 10:16:08,555:INFO:Initializing Naive Bayes
2025-07-01 10:16:08,556:INFO:Total runtime is 0.16591061751047767 minutes
2025-07-01 10:16:08,565:INFO:SubProcess create_model() called ==================================
2025-07-01 10:16:08,566:INFO:Initializing create_model()
2025-07-01 10:16:08,567:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231C6C9C2D0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231C7F01990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 10:16:08,567:INFO:Checking exceptions
2025-07-01 10:16:08,568:INFO:Importing libraries
2025-07-01 10:16:08,568:INFO:Copying training dataset
2025-07-01 10:16:08,585:INFO:Defining folds
2025-07-01 10:16:08,586:INFO:Declaring metric variables
2025-07-01 10:16:08,598:INFO:Importing untrained model
2025-07-01 10:16:08,609:INFO:Naive Bayes Imported successfully
2025-07-01 10:16:08,627:INFO:Starting cross validation
2025-07-01 10:16:08,630:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 10:16:08,842:INFO:Calculating mean and std
2025-07-01 10:16:08,845:INFO:Creating metrics dataframe
2025-07-01 10:16:08,850:INFO:Uploading results into container
2025-07-01 10:16:08,850:INFO:Uploading model into container now
2025-07-01 10:16:08,853:INFO:_master_model_container: 3
2025-07-01 10:16:08,853:INFO:_display_container: 2
2025-07-01 10:16:08,854:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-07-01 10:16:08,854:INFO:create_model() successfully completed......................................
2025-07-01 10:16:09,057:INFO:SubProcess create_model() end ==================================
2025-07-01 10:16:09,057:INFO:Creating metrics dataframe
2025-07-01 10:16:09,080:INFO:Initializing Decision Tree Classifier
2025-07-01 10:16:09,081:INFO:Total runtime is 0.17464874982833858 minutes
2025-07-01 10:16:09,092:INFO:SubProcess create_model() called ==================================
2025-07-01 10:16:09,093:INFO:Initializing create_model()
2025-07-01 10:16:09,093:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231C6C9C2D0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231C7F01990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 10:16:09,093:INFO:Checking exceptions
2025-07-01 10:16:09,093:INFO:Importing libraries
2025-07-01 10:16:09,094:INFO:Copying training dataset
2025-07-01 10:16:09,108:INFO:Defining folds
2025-07-01 10:16:09,109:INFO:Declaring metric variables
2025-07-01 10:16:09,121:INFO:Importing untrained model
2025-07-01 10:16:09,130:INFO:Decision Tree Classifier Imported successfully
2025-07-01 10:16:09,150:INFO:Starting cross validation
2025-07-01 10:16:09,153:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 10:16:09,421:INFO:Calculating mean and std
2025-07-01 10:16:09,424:INFO:Creating metrics dataframe
2025-07-01 10:16:09,428:INFO:Uploading results into container
2025-07-01 10:16:09,429:INFO:Uploading model into container now
2025-07-01 10:16:09,430:INFO:_master_model_container: 4
2025-07-01 10:16:09,430:INFO:_display_container: 2
2025-07-01 10:16:09,431:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4243, splitter='best')
2025-07-01 10:16:09,431:INFO:create_model() successfully completed......................................
2025-07-01 10:16:09,639:INFO:SubProcess create_model() end ==================================
2025-07-01 10:16:09,640:INFO:Creating metrics dataframe
2025-07-01 10:16:09,663:INFO:Initializing SVM - Linear Kernel
2025-07-01 10:16:09,664:INFO:Total runtime is 0.18437705039978022 minutes
2025-07-01 10:16:09,675:INFO:SubProcess create_model() called ==================================
2025-07-01 10:16:09,675:INFO:Initializing create_model()
2025-07-01 10:16:09,676:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231C6C9C2D0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231C7F01990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 10:16:09,676:INFO:Checking exceptions
2025-07-01 10:16:09,677:INFO:Importing libraries
2025-07-01 10:16:09,677:INFO:Copying training dataset
2025-07-01 10:16:09,694:INFO:Defining folds
2025-07-01 10:16:09,695:INFO:Declaring metric variables
2025-07-01 10:16:09,706:INFO:Importing untrained model
2025-07-01 10:16:09,717:INFO:SVM - Linear Kernel Imported successfully
2025-07-01 10:16:09,737:INFO:Starting cross validation
2025-07-01 10:16:09,740:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 10:16:09,908:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-01 10:16:09,909:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-01 10:16:09,956:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-01 10:16:09,969:INFO:Calculating mean and std
2025-07-01 10:16:09,972:INFO:Creating metrics dataframe
2025-07-01 10:16:09,975:INFO:Uploading results into container
2025-07-01 10:16:09,976:INFO:Uploading model into container now
2025-07-01 10:16:09,977:INFO:_master_model_container: 5
2025-07-01 10:16:09,977:INFO:_display_container: 2
2025-07-01 10:16:09,978:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=4243, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-07-01 10:16:09,978:INFO:create_model() successfully completed......................................
2025-07-01 10:16:10,192:INFO:SubProcess create_model() end ==================================
2025-07-01 10:16:10,193:INFO:Creating metrics dataframe
2025-07-01 10:16:10,213:INFO:Initializing Ridge Classifier
2025-07-01 10:16:10,214:INFO:Total runtime is 0.19354604482650753 minutes
2025-07-01 10:16:10,224:INFO:SubProcess create_model() called ==================================
2025-07-01 10:16:10,225:INFO:Initializing create_model()
2025-07-01 10:16:10,225:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231C6C9C2D0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231C7F01990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 10:16:10,225:INFO:Checking exceptions
2025-07-01 10:16:10,225:INFO:Importing libraries
2025-07-01 10:16:10,226:INFO:Copying training dataset
2025-07-01 10:16:10,245:INFO:Defining folds
2025-07-01 10:16:10,246:INFO:Declaring metric variables
2025-07-01 10:16:10,260:INFO:Importing untrained model
2025-07-01 10:16:10,271:INFO:Ridge Classifier Imported successfully
2025-07-01 10:16:10,330:INFO:Starting cross validation
2025-07-01 10:16:10,333:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 10:16:10,591:INFO:Calculating mean and std
2025-07-01 10:16:10,594:INFO:Creating metrics dataframe
2025-07-01 10:16:10,598:INFO:Uploading results into container
2025-07-01 10:16:10,600:INFO:Uploading model into container now
2025-07-01 10:16:10,602:INFO:_master_model_container: 6
2025-07-01 10:16:10,602:INFO:_display_container: 2
2025-07-01 10:16:10,603:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=4243, solver='auto',
                tol=0.0001)
2025-07-01 10:16:10,604:INFO:create_model() successfully completed......................................
2025-07-01 10:16:10,814:INFO:SubProcess create_model() end ==================================
2025-07-01 10:16:10,815:INFO:Creating metrics dataframe
2025-07-01 10:16:10,838:INFO:Initializing Random Forest Classifier
2025-07-01 10:16:10,838:INFO:Total runtime is 0.20394639968872066 minutes
2025-07-01 10:16:10,848:INFO:SubProcess create_model() called ==================================
2025-07-01 10:16:10,848:INFO:Initializing create_model()
2025-07-01 10:16:10,848:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231C6C9C2D0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231C7F01990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 10:16:10,848:INFO:Checking exceptions
2025-07-01 10:16:10,848:INFO:Importing libraries
2025-07-01 10:16:10,849:INFO:Copying training dataset
2025-07-01 10:16:10,868:INFO:Defining folds
2025-07-01 10:16:10,869:INFO:Declaring metric variables
2025-07-01 10:16:10,880:INFO:Importing untrained model
2025-07-01 10:16:10,891:INFO:Random Forest Classifier Imported successfully
2025-07-01 10:16:10,910:INFO:Starting cross validation
2025-07-01 10:16:10,912:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 10:16:12,647:INFO:Calculating mean and std
2025-07-01 10:16:12,650:INFO:Creating metrics dataframe
2025-07-01 10:16:12,654:INFO:Uploading results into container
2025-07-01 10:16:12,655:INFO:Uploading model into container now
2025-07-01 10:16:12,655:INFO:_master_model_container: 7
2025-07-01 10:16:12,656:INFO:_display_container: 2
2025-07-01 10:16:12,657:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=4243, verbose=0,
                       warm_start=False)
2025-07-01 10:16:12,657:INFO:create_model() successfully completed......................................
2025-07-01 10:16:12,831:INFO:SubProcess create_model() end ==================================
2025-07-01 10:16:12,831:INFO:Creating metrics dataframe
2025-07-01 10:16:12,855:INFO:Initializing Quadratic Discriminant Analysis
2025-07-01 10:16:12,856:INFO:Total runtime is 0.2375715573628743 minutes
2025-07-01 10:16:12,863:INFO:SubProcess create_model() called ==================================
2025-07-01 10:16:12,864:INFO:Initializing create_model()
2025-07-01 10:16:12,864:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231C6C9C2D0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231C7F01990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 10:16:12,865:INFO:Checking exceptions
2025-07-01 10:16:12,865:INFO:Importing libraries
2025-07-01 10:16:12,865:INFO:Copying training dataset
2025-07-01 10:16:12,880:INFO:Defining folds
2025-07-01 10:16:12,880:INFO:Declaring metric variables
2025-07-01 10:16:12,890:INFO:Importing untrained model
2025-07-01 10:16:12,897:INFO:Quadratic Discriminant Analysis Imported successfully
2025-07-01 10:16:12,914:INFO:Starting cross validation
2025-07-01 10:16:12,916:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 10:16:13,021:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 10:16:13,021:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 10:16:13,021:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 10:16:13,021:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 10:16:13,021:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 10:16:13,021:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 10:16:13,022:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 10:16:13,023:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 10:16:13,107:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 10:16:13,111:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 10:16:13,161:INFO:Calculating mean and std
2025-07-01 10:16:13,163:INFO:Creating metrics dataframe
2025-07-01 10:16:13,170:INFO:Uploading results into container
2025-07-01 10:16:13,171:INFO:Uploading model into container now
2025-07-01 10:16:13,172:INFO:_master_model_container: 8
2025-07-01 10:16:13,172:INFO:_display_container: 2
2025-07-01 10:16:13,172:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-07-01 10:16:13,172:INFO:create_model() successfully completed......................................
2025-07-01 10:16:13,361:INFO:SubProcess create_model() end ==================================
2025-07-01 10:16:13,361:INFO:Creating metrics dataframe
2025-07-01 10:16:13,378:INFO:Initializing Ada Boost Classifier
2025-07-01 10:16:13,379:INFO:Total runtime is 0.24626902739206946 minutes
2025-07-01 10:16:13,388:INFO:SubProcess create_model() called ==================================
2025-07-01 10:16:13,389:INFO:Initializing create_model()
2025-07-01 10:16:13,389:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231C6C9C2D0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231C7F01990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 10:16:13,389:INFO:Checking exceptions
2025-07-01 10:16:13,389:INFO:Importing libraries
2025-07-01 10:16:13,389:INFO:Copying training dataset
2025-07-01 10:16:13,401:INFO:Defining folds
2025-07-01 10:16:13,402:INFO:Declaring metric variables
2025-07-01 10:16:13,410:INFO:Importing untrained model
2025-07-01 10:16:13,417:INFO:Ada Boost Classifier Imported successfully
2025-07-01 10:16:13,432:INFO:Starting cross validation
2025-07-01 10:16:13,435:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 10:16:13,509:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 10:16:13,510:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 10:16:13,541:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 10:16:13,542:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 10:16:13,542:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 10:16:13,542:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 10:16:14,054:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 10:16:14,057:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 10:16:14,393:INFO:Calculating mean and std
2025-07-01 10:16:14,395:INFO:Creating metrics dataframe
2025-07-01 10:16:14,405:INFO:Uploading results into container
2025-07-01 10:16:14,406:INFO:Uploading model into container now
2025-07-01 10:16:14,407:INFO:_master_model_container: 9
2025-07-01 10:16:14,407:INFO:_display_container: 2
2025-07-01 10:16:14,407:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=4243)
2025-07-01 10:16:14,408:INFO:create_model() successfully completed......................................
2025-07-01 10:16:14,598:INFO:SubProcess create_model() end ==================================
2025-07-01 10:16:14,598:INFO:Creating metrics dataframe
2025-07-01 10:16:14,622:INFO:Initializing Gradient Boosting Classifier
2025-07-01 10:16:14,623:INFO:Total runtime is 0.2670182943344116 minutes
2025-07-01 10:16:14,630:INFO:SubProcess create_model() called ==================================
2025-07-01 10:16:14,631:INFO:Initializing create_model()
2025-07-01 10:16:14,631:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231C6C9C2D0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231C7F01990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 10:16:14,631:INFO:Checking exceptions
2025-07-01 10:16:14,632:INFO:Importing libraries
2025-07-01 10:16:14,632:INFO:Copying training dataset
2025-07-01 10:16:14,648:INFO:Defining folds
2025-07-01 10:16:14,648:INFO:Declaring metric variables
2025-07-01 10:16:14,658:INFO:Importing untrained model
2025-07-01 10:16:14,665:INFO:Gradient Boosting Classifier Imported successfully
2025-07-01 10:16:14,680:INFO:Starting cross validation
2025-07-01 10:16:14,683:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 10:16:16,480:INFO:Calculating mean and std
2025-07-01 10:16:16,484:INFO:Creating metrics dataframe
2025-07-01 10:16:16,490:INFO:Uploading results into container
2025-07-01 10:16:16,491:INFO:Uploading model into container now
2025-07-01 10:16:16,492:INFO:_master_model_container: 10
2025-07-01 10:16:16,492:INFO:_display_container: 2
2025-07-01 10:16:16,494:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=4243, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-07-01 10:16:16,494:INFO:create_model() successfully completed......................................
2025-07-01 10:16:16,688:INFO:SubProcess create_model() end ==================================
2025-07-01 10:16:16,688:INFO:Creating metrics dataframe
2025-07-01 10:16:16,712:INFO:Initializing Linear Discriminant Analysis
2025-07-01 10:16:16,713:INFO:Total runtime is 0.3018594940503438 minutes
2025-07-01 10:16:16,722:INFO:SubProcess create_model() called ==================================
2025-07-01 10:16:16,723:INFO:Initializing create_model()
2025-07-01 10:16:16,723:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231C6C9C2D0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231C7F01990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 10:16:16,723:INFO:Checking exceptions
2025-07-01 10:16:16,724:INFO:Importing libraries
2025-07-01 10:16:16,724:INFO:Copying training dataset
2025-07-01 10:16:16,738:INFO:Defining folds
2025-07-01 10:16:16,738:INFO:Declaring metric variables
2025-07-01 10:16:16,747:INFO:Importing untrained model
2025-07-01 10:16:16,756:INFO:Linear Discriminant Analysis Imported successfully
2025-07-01 10:16:16,772:INFO:Starting cross validation
2025-07-01 10:16:16,774:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 10:16:16,966:INFO:Calculating mean and std
2025-07-01 10:16:16,970:INFO:Creating metrics dataframe
2025-07-01 10:16:16,978:INFO:Uploading results into container
2025-07-01 10:16:16,980:INFO:Uploading model into container now
2025-07-01 10:16:16,981:INFO:_master_model_container: 11
2025-07-01 10:16:16,981:INFO:_display_container: 2
2025-07-01 10:16:16,982:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-07-01 10:16:16,982:INFO:create_model() successfully completed......................................
2025-07-01 10:16:17,213:INFO:SubProcess create_model() end ==================================
2025-07-01 10:16:17,214:INFO:Creating metrics dataframe
2025-07-01 10:16:17,245:INFO:Initializing Extra Trees Classifier
2025-07-01 10:16:17,245:INFO:Total runtime is 0.3107168793678283 minutes
2025-07-01 10:16:17,256:INFO:SubProcess create_model() called ==================================
2025-07-01 10:16:17,257:INFO:Initializing create_model()
2025-07-01 10:16:17,257:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231C6C9C2D0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231C7F01990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 10:16:17,258:INFO:Checking exceptions
2025-07-01 10:16:17,258:INFO:Importing libraries
2025-07-01 10:16:17,258:INFO:Copying training dataset
2025-07-01 10:16:17,277:INFO:Defining folds
2025-07-01 10:16:17,278:INFO:Declaring metric variables
2025-07-01 10:16:17,287:INFO:Importing untrained model
2025-07-01 10:16:17,296:INFO:Extra Trees Classifier Imported successfully
2025-07-01 10:16:17,319:INFO:Starting cross validation
2025-07-01 10:16:17,323:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 10:16:18,871:INFO:Calculating mean and std
2025-07-01 10:16:18,873:INFO:Creating metrics dataframe
2025-07-01 10:16:18,877:INFO:Uploading results into container
2025-07-01 10:16:18,879:INFO:Uploading model into container now
2025-07-01 10:16:18,880:INFO:_master_model_container: 12
2025-07-01 10:16:18,880:INFO:_display_container: 2
2025-07-01 10:16:18,882:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=4243, verbose=0,
                     warm_start=False)
2025-07-01 10:16:18,882:INFO:create_model() successfully completed......................................
2025-07-01 10:16:19,083:INFO:SubProcess create_model() end ==================================
2025-07-01 10:16:19,083:INFO:Creating metrics dataframe
2025-07-01 10:16:19,107:INFO:Initializing Extreme Gradient Boosting
2025-07-01 10:16:19,107:INFO:Total runtime is 0.3417576988538106 minutes
2025-07-01 10:16:19,113:INFO:SubProcess create_model() called ==================================
2025-07-01 10:16:19,114:INFO:Initializing create_model()
2025-07-01 10:16:19,114:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231C6C9C2D0>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231C7F01990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 10:16:19,114:INFO:Checking exceptions
2025-07-01 10:16:19,114:INFO:Importing libraries
2025-07-01 10:16:19,115:INFO:Copying training dataset
2025-07-01 10:16:19,132:INFO:Defining folds
2025-07-01 10:16:19,133:INFO:Declaring metric variables
2025-07-01 10:16:19,142:INFO:Importing untrained model
2025-07-01 10:16:19,154:INFO:Extreme Gradient Boosting Imported successfully
2025-07-01 10:16:19,171:INFO:Starting cross validation
2025-07-01 10:16:19,173:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 10:16:20,155:INFO:Calculating mean and std
2025-07-01 10:16:20,159:INFO:Creating metrics dataframe
2025-07-01 10:16:20,166:INFO:Uploading results into container
2025-07-01 10:16:20,167:INFO:Uploading model into container now
2025-07-01 10:16:20,169:INFO:_master_model_container: 13
2025-07-01 10:16:20,169:INFO:_display_container: 2
2025-07-01 10:16:20,174:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-07-01 10:16:20,174:INFO:create_model() successfully completed......................................
2025-07-01 10:16:20,387:INFO:SubProcess create_model() end ==================================
2025-07-01 10:16:20,387:INFO:Creating metrics dataframe
2025-07-01 10:16:20,411:INFO:Initializing Light Gradient Boosting Machine
2025-07-01 10:16:20,412:INFO:Total runtime is 0.36348656018575026 minutes
2025-07-01 10:16:20,422:INFO:SubProcess create_model() called ==================================
2025-07-01 10:16:20,423:INFO:Initializing create_model()
2025-07-01 10:16:20,423:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231C6C9C2D0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231C7F01990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 10:16:20,423:INFO:Checking exceptions
2025-07-01 10:16:20,423:INFO:Importing libraries
2025-07-01 10:16:20,423:INFO:Copying training dataset
2025-07-01 10:16:20,441:INFO:Defining folds
2025-07-01 10:16:20,441:INFO:Declaring metric variables
2025-07-01 10:16:20,449:INFO:Importing untrained model
2025-07-01 10:16:20,460:INFO:Light Gradient Boosting Machine Imported successfully
2025-07-01 10:16:20,480:INFO:Starting cross validation
2025-07-01 10:16:20,482:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 10:16:22,493:INFO:Calculating mean and std
2025-07-01 10:16:22,495:INFO:Creating metrics dataframe
2025-07-01 10:16:22,498:INFO:Uploading results into container
2025-07-01 10:16:22,498:INFO:Uploading model into container now
2025-07-01 10:16:22,499:INFO:_master_model_container: 14
2025-07-01 10:16:22,499:INFO:_display_container: 2
2025-07-01 10:16:22,500:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=4243, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-07-01 10:16:22,500:INFO:create_model() successfully completed......................................
2025-07-01 10:16:22,651:INFO:SubProcess create_model() end ==================================
2025-07-01 10:16:22,651:INFO:Creating metrics dataframe
2025-07-01 10:16:22,666:INFO:Initializing Dummy Classifier
2025-07-01 10:16:22,666:INFO:Total runtime is 0.4010752916336059 minutes
2025-07-01 10:16:22,672:INFO:SubProcess create_model() called ==================================
2025-07-01 10:16:22,673:INFO:Initializing create_model()
2025-07-01 10:16:22,673:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231C6C9C2D0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231C7F01990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 10:16:22,673:INFO:Checking exceptions
2025-07-01 10:16:22,673:INFO:Importing libraries
2025-07-01 10:16:22,673:INFO:Copying training dataset
2025-07-01 10:16:22,680:INFO:Defining folds
2025-07-01 10:16:22,680:INFO:Declaring metric variables
2025-07-01 10:16:22,689:INFO:Importing untrained model
2025-07-01 10:16:22,693:INFO:Dummy Classifier Imported successfully
2025-07-01 10:16:22,705:INFO:Starting cross validation
2025-07-01 10:16:22,707:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 10:16:22,793:INFO:Calculating mean and std
2025-07-01 10:16:22,794:INFO:Creating metrics dataframe
2025-07-01 10:16:22,796:INFO:Uploading results into container
2025-07-01 10:16:22,797:INFO:Uploading model into container now
2025-07-01 10:16:22,797:INFO:_master_model_container: 15
2025-07-01 10:16:22,798:INFO:_display_container: 2
2025-07-01 10:16:22,798:INFO:DummyClassifier(constant=None, random_state=4243, strategy='prior')
2025-07-01 10:16:22,798:INFO:create_model() successfully completed......................................
2025-07-01 10:16:22,927:INFO:SubProcess create_model() end ==================================
2025-07-01 10:16:22,927:INFO:Creating metrics dataframe
2025-07-01 10:16:22,942:WARNING:d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-07-01 10:16:22,954:INFO:Initializing create_model()
2025-07-01 10:16:22,954:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231C6C9C2D0>, estimator=DummyClassifier(constant=None, random_state=4243, strategy='prior'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 10:16:22,955:INFO:Checking exceptions
2025-07-01 10:16:22,957:INFO:Importing libraries
2025-07-01 10:16:22,957:INFO:Copying training dataset
2025-07-01 10:16:22,964:INFO:Defining folds
2025-07-01 10:16:22,965:INFO:Declaring metric variables
2025-07-01 10:16:22,965:INFO:Importing untrained model
2025-07-01 10:16:22,965:INFO:Declaring custom model
2025-07-01 10:16:22,966:INFO:Dummy Classifier Imported successfully
2025-07-01 10:16:22,967:INFO:Cross validation set to False
2025-07-01 10:16:22,967:INFO:Fitting Model
2025-07-01 10:16:22,978:INFO:DummyClassifier(constant=None, random_state=4243, strategy='prior')
2025-07-01 10:16:22,978:INFO:create_model() successfully completed......................................
2025-07-01 10:16:23,177:INFO:_master_model_container: 15
2025-07-01 10:16:23,178:INFO:_display_container: 2
2025-07-01 10:16:23,178:INFO:DummyClassifier(constant=None, random_state=4243, strategy='prior')
2025-07-01 10:16:23,178:INFO:compare_models() successfully completed......................................
2025-07-01 10:16:43,583:INFO:PyCaret ClassificationExperiment
2025-07-01 10:16:43,583:INFO:Logging name: clf-default-name
2025-07-01 10:16:43,583:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-07-01 10:16:43,583:INFO:version 3.3.2
2025-07-01 10:16:43,583:INFO:Initializing setup()
2025-07-01 10:16:43,583:INFO:self.USI: 2a95
2025-07-01 10:16:43,583:INFO:self._variable_keys: {'fix_imbalance', 'data', 'is_multiclass', 'y_test', 'X_train', 'log_plots_param', 'X', 'X_test', 'logging_param', 'n_jobs_param', 'gpu_param', 'idx', 'html_param', 'fold_generator', '_ml_usecase', 'exp_id', 'USI', '_available_plots', 'gpu_n_jobs_param', 'pipeline', 'y_train', 'fold_groups_param', 'y', 'fold_shuffle_param', 'target_param', 'memory', 'seed', 'exp_name_log'}
2025-07-01 10:16:43,584:INFO:Checking environment
2025-07-01 10:16:43,584:INFO:python_version: 3.11.13
2025-07-01 10:16:43,584:INFO:python_build: ('main', 'Jun  5 2025 13:03:15')
2025-07-01 10:16:43,584:INFO:machine: AMD64
2025-07-01 10:16:43,584:INFO:platform: Windows-10-10.0.22631-SP0
2025-07-01 10:16:43,591:INFO:Memory: svmem(total=12674457600, available=1897345024, percent=85.0, used=10777112576, free=1897345024)
2025-07-01 10:16:43,591:INFO:Physical Core: 4
2025-07-01 10:16:43,591:INFO:Logical Core: 8
2025-07-01 10:16:43,591:INFO:Checking libraries
2025-07-01 10:16:43,591:INFO:System:
2025-07-01 10:16:43,592:INFO:    python: 3.11.13 | packaged by Anaconda, Inc. | (main, Jun  5 2025, 13:03:15) [MSC v.1929 64 bit (AMD64)]
2025-07-01 10:16:43,592:INFO:executable: d:\ML_notes\.conda\python.exe
2025-07-01 10:16:43,592:INFO:   machine: Windows-10-10.0.22631-SP0
2025-07-01 10:16:43,592:INFO:PyCaret required dependencies:
2025-07-01 10:16:43,592:INFO:                 pip: 25.1
2025-07-01 10:16:43,592:INFO:          setuptools: 78.1.1
2025-07-01 10:16:43,592:INFO:             pycaret: 3.3.2
2025-07-01 10:16:43,592:INFO:             IPython: 9.3.0
2025-07-01 10:16:43,592:INFO:          ipywidgets: 8.1.7
2025-07-01 10:16:43,592:INFO:                tqdm: 4.67.1
2025-07-01 10:16:43,592:INFO:               numpy: 1.26.4
2025-07-01 10:16:43,592:INFO:              pandas: 2.1.4
2025-07-01 10:16:43,592:INFO:              jinja2: 3.1.6
2025-07-01 10:16:43,593:INFO:               scipy: 1.11.4
2025-07-01 10:16:43,593:INFO:              joblib: 1.3.2
2025-07-01 10:16:43,593:INFO:             sklearn: 1.4.2
2025-07-01 10:16:43,593:INFO:                pyod: 2.0.5
2025-07-01 10:16:43,593:INFO:            imblearn: 0.13.0
2025-07-01 10:16:43,593:INFO:   category_encoders: 2.7.0
2025-07-01 10:16:43,593:INFO:            lightgbm: 4.6.0
2025-07-01 10:16:43,593:INFO:               numba: 0.61.0
2025-07-01 10:16:43,593:INFO:            requests: 2.32.4
2025-07-01 10:16:43,593:INFO:          matplotlib: 3.7.5
2025-07-01 10:16:43,593:INFO:          scikitplot: 0.3.7
2025-07-01 10:16:43,593:INFO:         yellowbrick: 1.5
2025-07-01 10:16:43,593:INFO:              plotly: 5.24.1
2025-07-01 10:16:43,593:INFO:    plotly-resampler: Not installed
2025-07-01 10:16:43,593:INFO:             kaleido: 1.0.0
2025-07-01 10:16:43,593:INFO:           schemdraw: 0.15
2025-07-01 10:16:43,593:INFO:         statsmodels: 0.14.4
2025-07-01 10:16:43,593:INFO:              sktime: 0.26.0
2025-07-01 10:16:43,593:INFO:               tbats: 1.1.3
2025-07-01 10:16:43,594:INFO:            pmdarima: 2.0.4
2025-07-01 10:16:43,594:INFO:              psutil: 7.0.0
2025-07-01 10:16:43,594:INFO:          markupsafe: 3.0.2
2025-07-01 10:16:43,594:INFO:             pickle5: Not installed
2025-07-01 10:16:43,594:INFO:         cloudpickle: 3.1.1
2025-07-01 10:16:43,594:INFO:         deprecation: 2.1.0
2025-07-01 10:16:43,594:INFO:              xxhash: 3.5.0
2025-07-01 10:16:43,594:INFO:           wurlitzer: Not installed
2025-07-01 10:16:43,594:INFO:PyCaret optional dependencies:
2025-07-01 10:16:43,594:INFO:                shap: Not installed
2025-07-01 10:16:43,594:INFO:           interpret: Not installed
2025-07-01 10:16:43,594:INFO:                umap: Not installed
2025-07-01 10:16:43,594:INFO:     ydata_profiling: 4.16.1
2025-07-01 10:16:43,594:INFO:  explainerdashboard: Not installed
2025-07-01 10:16:43,595:INFO:             autoviz: Not installed
2025-07-01 10:16:43,595:INFO:           fairlearn: Not installed
2025-07-01 10:16:43,595:INFO:          deepchecks: Not installed
2025-07-01 10:16:43,595:INFO:             xgboost: 3.0.2
2025-07-01 10:16:43,595:INFO:            catboost: Not installed
2025-07-01 10:16:43,595:INFO:              kmodes: Not installed
2025-07-01 10:16:43,595:INFO:             mlxtend: Not installed
2025-07-01 10:16:43,595:INFO:       statsforecast: Not installed
2025-07-01 10:16:43,595:INFO:        tune_sklearn: Not installed
2025-07-01 10:16:43,595:INFO:                 ray: Not installed
2025-07-01 10:16:43,595:INFO:            hyperopt: Not installed
2025-07-01 10:16:43,595:INFO:              optuna: Not installed
2025-07-01 10:16:43,595:INFO:               skopt: Not installed
2025-07-01 10:16:43,595:INFO:              mlflow: Not installed
2025-07-01 10:16:43,595:INFO:              gradio: Not installed
2025-07-01 10:16:43,595:INFO:             fastapi: Not installed
2025-07-01 10:16:43,595:INFO:             uvicorn: Not installed
2025-07-01 10:16:43,595:INFO:              m2cgen: Not installed
2025-07-01 10:16:43,595:INFO:           evidently: Not installed
2025-07-01 10:16:43,596:INFO:               fugue: Not installed
2025-07-01 10:16:43,596:INFO:           streamlit: Not installed
2025-07-01 10:16:43,596:INFO:             prophet: Not installed
2025-07-01 10:16:43,596:INFO:None
2025-07-01 10:16:43,596:INFO:Set up data.
2025-07-01 10:16:43,606:INFO:Set up folding strategy.
2025-07-01 10:16:43,606:INFO:Set up train/test split.
2025-07-01 10:16:43,615:INFO:Set up index.
2025-07-01 10:16:43,615:INFO:Assigning column types.
2025-07-01 10:16:43,621:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-07-01 10:16:43,669:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-01 10:16:43,670:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-01 10:16:43,711:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 10:16:43,716:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 10:16:43,760:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-01 10:16:43,762:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-01 10:16:43,802:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 10:16:43,805:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 10:16:43,806:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-07-01 10:16:43,858:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-01 10:16:43,892:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 10:16:43,896:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 10:16:43,952:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-01 10:16:43,992:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 10:16:43,995:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 10:16:43,996:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-07-01 10:16:44,089:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 10:16:44,094:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 10:16:44,185:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 10:16:44,189:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 10:16:44,191:INFO:Preparing preprocessing pipeline...
2025-07-01 10:16:44,192:INFO:Set up simple imputation.
2025-07-01 10:16:44,226:INFO:Finished creating preprocessing pipeline.
2025-07-01 10:16:44,232:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\YOGA\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'Annual_Income',
                                             'Total_Spend', 'Years_as_Customer',
                                             'Num_of_Purchases',
                                             'Average_Transaction_Amount',
                                             'Num_of_Returns',
                                             'Num_of_Support_Contacts',
                                             'Satisfaction_Score',
                                             'Last_Purchase_Days_Ago',
                                             'Gender_Fem...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-07-01 10:16:44,232:INFO:Creating final display dataframe.
2025-07-01 10:16:44,340:INFO:Setup _display_container:                     Description              Value
0                    Session id               6875
1                        Target  Target_Churn_True
2                   Target type             Binary
3           Original data shape         (1000, 20)
4        Transformed data shape         (1000, 20)
5   Transformed train set shape          (700, 20)
6    Transformed test set shape          (300, 20)
7              Numeric features                 19
8                    Preprocess               True
9               Imputation type             simple
10           Numeric imputation               mean
11       Categorical imputation               mode
12               Fold Generator    StratifiedKFold
13                  Fold Number                 10
14                     CPU Jobs                 -1
15                      Use GPU              False
16               Log Experiment              False
17              Experiment Name   clf-default-name
18                          USI               2a95
2025-07-01 10:16:44,447:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 10:16:44,451:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 10:16:44,537:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 10:16:44,539:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 10:16:44,540:INFO:setup() successfully completed in 0.96s...............
2025-07-01 10:16:44,542:INFO:Initializing compare_models()
2025-07-01 10:16:44,542:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231C92E0710>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000231C92E0710>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2025-07-01 10:16:44,542:INFO:Checking exceptions
2025-07-01 10:16:44,548:INFO:Preparing display monitor
2025-07-01 10:16:44,584:INFO:Initializing Logistic Regression
2025-07-01 10:16:44,584:INFO:Total runtime is 1.6498565673828126e-05 minutes
2025-07-01 10:16:44,590:INFO:SubProcess create_model() called ==================================
2025-07-01 10:16:44,591:INFO:Initializing create_model()
2025-07-01 10:16:44,591:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231C92E0710>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231CA4D0BD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 10:16:44,591:INFO:Checking exceptions
2025-07-01 10:16:44,591:INFO:Importing libraries
2025-07-01 10:16:44,591:INFO:Copying training dataset
2025-07-01 10:16:44,599:INFO:Defining folds
2025-07-01 10:16:44,599:INFO:Declaring metric variables
2025-07-01 10:16:44,605:INFO:Importing untrained model
2025-07-01 10:16:44,613:INFO:Logistic Regression Imported successfully
2025-07-01 10:16:44,625:INFO:Starting cross validation
2025-07-01 10:16:44,628:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 10:16:44,915:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-07-01 10:16:44,931:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-07-01 10:16:44,937:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-07-01 10:16:44,938:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-07-01 10:16:44,978:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-07-01 10:16:44,984:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-07-01 10:16:44,997:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-07-01 10:16:45,001:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-07-01 10:16:45,105:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-07-01 10:16:45,109:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-07-01 10:16:45,141:INFO:Calculating mean and std
2025-07-01 10:16:45,142:INFO:Creating metrics dataframe
2025-07-01 10:16:45,144:INFO:Uploading results into container
2025-07-01 10:16:45,145:INFO:Uploading model into container now
2025-07-01 10:16:45,146:INFO:_master_model_container: 1
2025-07-01 10:16:45,146:INFO:_display_container: 2
2025-07-01 10:16:45,146:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6875, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-07-01 10:16:45,146:INFO:create_model() successfully completed......................................
2025-07-01 10:16:45,336:INFO:SubProcess create_model() end ==================================
2025-07-01 10:16:45,336:INFO:Creating metrics dataframe
2025-07-01 10:16:45,349:INFO:Initializing K Neighbors Classifier
2025-07-01 10:16:45,350:INFO:Total runtime is 0.012787044048309326 minutes
2025-07-01 10:16:45,358:INFO:SubProcess create_model() called ==================================
2025-07-01 10:16:45,358:INFO:Initializing create_model()
2025-07-01 10:16:45,358:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231C92E0710>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231CA4D0BD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 10:16:45,358:INFO:Checking exceptions
2025-07-01 10:16:45,359:INFO:Importing libraries
2025-07-01 10:16:45,359:INFO:Copying training dataset
2025-07-01 10:16:45,367:INFO:Defining folds
2025-07-01 10:16:45,367:INFO:Declaring metric variables
2025-07-01 10:16:45,374:INFO:Importing untrained model
2025-07-01 10:16:45,380:INFO:K Neighbors Classifier Imported successfully
2025-07-01 10:16:45,395:INFO:Starting cross validation
2025-07-01 10:16:45,398:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 10:16:45,579:INFO:Calculating mean and std
2025-07-01 10:16:45,582:INFO:Creating metrics dataframe
2025-07-01 10:16:45,587:INFO:Uploading results into container
2025-07-01 10:16:45,587:INFO:Uploading model into container now
2025-07-01 10:16:45,601:INFO:_master_model_container: 2
2025-07-01 10:16:45,602:INFO:_display_container: 2
2025-07-01 10:16:45,604:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-07-01 10:16:45,604:INFO:create_model() successfully completed......................................
2025-07-01 10:16:45,808:INFO:SubProcess create_model() end ==================================
2025-07-01 10:16:45,808:INFO:Creating metrics dataframe
2025-07-01 10:16:45,819:INFO:Initializing Naive Bayes
2025-07-01 10:16:45,820:INFO:Total runtime is 0.0206137220064799 minutes
2025-07-01 10:16:45,825:INFO:SubProcess create_model() called ==================================
2025-07-01 10:16:45,825:INFO:Initializing create_model()
2025-07-01 10:16:45,825:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231C92E0710>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231CA4D0BD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 10:16:45,825:INFO:Checking exceptions
2025-07-01 10:16:45,825:INFO:Importing libraries
2025-07-01 10:16:45,826:INFO:Copying training dataset
2025-07-01 10:16:45,835:INFO:Defining folds
2025-07-01 10:16:45,835:INFO:Declaring metric variables
2025-07-01 10:16:45,841:INFO:Importing untrained model
2025-07-01 10:16:45,848:INFO:Naive Bayes Imported successfully
2025-07-01 10:16:45,861:INFO:Starting cross validation
2025-07-01 10:16:45,863:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 10:16:45,986:INFO:Calculating mean and std
2025-07-01 10:16:45,988:INFO:Creating metrics dataframe
2025-07-01 10:16:45,991:INFO:Uploading results into container
2025-07-01 10:16:45,991:INFO:Uploading model into container now
2025-07-01 10:16:45,992:INFO:_master_model_container: 3
2025-07-01 10:16:45,992:INFO:_display_container: 2
2025-07-01 10:16:45,993:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-07-01 10:16:45,993:INFO:create_model() successfully completed......................................
2025-07-01 10:16:46,156:INFO:SubProcess create_model() end ==================================
2025-07-01 10:16:46,157:INFO:Creating metrics dataframe
2025-07-01 10:16:46,166:INFO:Initializing Decision Tree Classifier
2025-07-01 10:16:46,166:INFO:Total runtime is 0.026375246047973634 minutes
2025-07-01 10:16:46,170:INFO:SubProcess create_model() called ==================================
2025-07-01 10:16:46,171:INFO:Initializing create_model()
2025-07-01 10:16:46,171:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231C92E0710>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231CA4D0BD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 10:16:46,171:INFO:Checking exceptions
2025-07-01 10:16:46,171:INFO:Importing libraries
2025-07-01 10:16:46,171:INFO:Copying training dataset
2025-07-01 10:16:46,177:INFO:Defining folds
2025-07-01 10:16:46,177:INFO:Declaring metric variables
2025-07-01 10:16:46,184:INFO:Importing untrained model
2025-07-01 10:16:46,189:INFO:Decision Tree Classifier Imported successfully
2025-07-01 10:16:46,199:INFO:Starting cross validation
2025-07-01 10:16:46,200:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 10:16:46,337:INFO:Calculating mean and std
2025-07-01 10:16:46,339:INFO:Creating metrics dataframe
2025-07-01 10:16:46,340:INFO:Uploading results into container
2025-07-01 10:16:46,341:INFO:Uploading model into container now
2025-07-01 10:16:46,341:INFO:_master_model_container: 4
2025-07-01 10:16:46,341:INFO:_display_container: 2
2025-07-01 10:16:46,342:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6875, splitter='best')
2025-07-01 10:16:46,342:INFO:create_model() successfully completed......................................
2025-07-01 10:16:46,509:INFO:SubProcess create_model() end ==================================
2025-07-01 10:16:46,510:INFO:Creating metrics dataframe
2025-07-01 10:16:46,527:INFO:Initializing SVM - Linear Kernel
2025-07-01 10:16:46,527:INFO:Total runtime is 0.03240078687667847 minutes
2025-07-01 10:16:46,537:INFO:SubProcess create_model() called ==================================
2025-07-01 10:16:46,537:INFO:Initializing create_model()
2025-07-01 10:16:46,537:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231C92E0710>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231CA4D0BD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 10:16:46,537:INFO:Checking exceptions
2025-07-01 10:16:46,537:INFO:Importing libraries
2025-07-01 10:16:46,537:INFO:Copying training dataset
2025-07-01 10:16:46,553:INFO:Defining folds
2025-07-01 10:16:46,553:INFO:Declaring metric variables
2025-07-01 10:16:46,559:INFO:Importing untrained model
2025-07-01 10:16:46,566:INFO:SVM - Linear Kernel Imported successfully
2025-07-01 10:16:46,580:INFO:Starting cross validation
2025-07-01 10:16:46,581:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 10:16:46,656:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-01 10:16:46,656:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-01 10:16:46,659:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-01 10:16:46,687:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-01 10:16:46,709:INFO:Calculating mean and std
2025-07-01 10:16:46,711:INFO:Creating metrics dataframe
2025-07-01 10:16:46,716:INFO:Uploading results into container
2025-07-01 10:16:46,717:INFO:Uploading model into container now
2025-07-01 10:16:46,717:INFO:_master_model_container: 5
2025-07-01 10:16:46,717:INFO:_display_container: 2
2025-07-01 10:16:46,719:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=6875, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-07-01 10:16:46,719:INFO:create_model() successfully completed......................................
2025-07-01 10:16:46,869:INFO:SubProcess create_model() end ==================================
2025-07-01 10:16:46,870:INFO:Creating metrics dataframe
2025-07-01 10:16:46,877:INFO:Initializing Ridge Classifier
2025-07-01 10:16:46,878:INFO:Total runtime is 0.03823994000752767 minutes
2025-07-01 10:16:46,884:INFO:SubProcess create_model() called ==================================
2025-07-01 10:16:46,884:INFO:Initializing create_model()
2025-07-01 10:16:46,884:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231C92E0710>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231CA4D0BD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 10:16:46,884:INFO:Checking exceptions
2025-07-01 10:16:46,884:INFO:Importing libraries
2025-07-01 10:16:46,884:INFO:Copying training dataset
2025-07-01 10:16:46,891:INFO:Defining folds
2025-07-01 10:16:46,891:INFO:Declaring metric variables
2025-07-01 10:16:46,898:INFO:Importing untrained model
2025-07-01 10:16:46,906:INFO:Ridge Classifier Imported successfully
2025-07-01 10:16:46,919:INFO:Starting cross validation
2025-07-01 10:16:46,921:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 10:16:47,048:INFO:Calculating mean and std
2025-07-01 10:16:47,051:INFO:Creating metrics dataframe
2025-07-01 10:16:47,053:INFO:Uploading results into container
2025-07-01 10:16:47,054:INFO:Uploading model into container now
2025-07-01 10:16:47,054:INFO:_master_model_container: 6
2025-07-01 10:16:47,054:INFO:_display_container: 2
2025-07-01 10:16:47,055:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=6875, solver='auto',
                tol=0.0001)
2025-07-01 10:16:47,055:INFO:create_model() successfully completed......................................
2025-07-01 10:16:47,229:INFO:SubProcess create_model() end ==================================
2025-07-01 10:16:47,229:INFO:Creating metrics dataframe
2025-07-01 10:16:47,244:INFO:Initializing Random Forest Classifier
2025-07-01 10:16:47,244:INFO:Total runtime is 0.04434424638748169 minutes
2025-07-01 10:16:47,252:INFO:SubProcess create_model() called ==================================
2025-07-01 10:16:47,252:INFO:Initializing create_model()
2025-07-01 10:16:47,253:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231C92E0710>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231CA4D0BD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 10:16:47,253:INFO:Checking exceptions
2025-07-01 10:16:47,253:INFO:Importing libraries
2025-07-01 10:16:47,253:INFO:Copying training dataset
2025-07-01 10:16:47,260:INFO:Defining folds
2025-07-01 10:16:47,260:INFO:Declaring metric variables
2025-07-01 10:16:47,268:INFO:Importing untrained model
2025-07-01 10:16:47,274:INFO:Random Forest Classifier Imported successfully
2025-07-01 10:16:47,284:INFO:Starting cross validation
2025-07-01 10:16:47,288:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 10:16:48,201:INFO:Calculating mean and std
2025-07-01 10:16:48,203:INFO:Creating metrics dataframe
2025-07-01 10:16:48,206:INFO:Uploading results into container
2025-07-01 10:16:48,206:INFO:Uploading model into container now
2025-07-01 10:16:48,207:INFO:_master_model_container: 7
2025-07-01 10:16:48,207:INFO:_display_container: 2
2025-07-01 10:16:48,208:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=6875, verbose=0,
                       warm_start=False)
2025-07-01 10:16:48,208:INFO:create_model() successfully completed......................................
2025-07-01 10:16:48,348:INFO:SubProcess create_model() end ==================================
2025-07-01 10:16:48,348:INFO:Creating metrics dataframe
2025-07-01 10:16:48,356:INFO:Initializing Quadratic Discriminant Analysis
2025-07-01 10:16:48,356:INFO:Total runtime is 0.06288181145985922 minutes
2025-07-01 10:16:48,359:INFO:SubProcess create_model() called ==================================
2025-07-01 10:16:48,360:INFO:Initializing create_model()
2025-07-01 10:16:48,360:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231C92E0710>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231CA4D0BD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 10:16:48,360:INFO:Checking exceptions
2025-07-01 10:16:48,361:INFO:Importing libraries
2025-07-01 10:16:48,361:INFO:Copying training dataset
2025-07-01 10:16:48,369:INFO:Defining folds
2025-07-01 10:16:48,369:INFO:Declaring metric variables
2025-07-01 10:16:48,374:INFO:Importing untrained model
2025-07-01 10:16:48,380:INFO:Quadratic Discriminant Analysis Imported successfully
2025-07-01 10:16:48,392:INFO:Starting cross validation
2025-07-01 10:16:48,393:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 10:16:48,423:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 10:16:48,427:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 10:16:48,431:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 10:16:48,433:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 10:16:48,434:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 10:16:48,443:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 10:16:48,455:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 10:16:48,460:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 10:16:48,473:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 10:16:48,474:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 10:16:48,504:INFO:Calculating mean and std
2025-07-01 10:16:48,505:INFO:Creating metrics dataframe
2025-07-01 10:16:48,506:INFO:Uploading results into container
2025-07-01 10:16:48,507:INFO:Uploading model into container now
2025-07-01 10:16:48,507:INFO:_master_model_container: 8
2025-07-01 10:16:48,507:INFO:_display_container: 2
2025-07-01 10:16:48,508:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-07-01 10:16:48,508:INFO:create_model() successfully completed......................................
2025-07-01 10:16:48,676:INFO:SubProcess create_model() end ==================================
2025-07-01 10:16:48,676:INFO:Creating metrics dataframe
2025-07-01 10:16:48,688:INFO:Initializing Ada Boost Classifier
2025-07-01 10:16:48,688:INFO:Total runtime is 0.06841869751612346 minutes
2025-07-01 10:16:48,692:INFO:SubProcess create_model() called ==================================
2025-07-01 10:16:48,694:INFO:Initializing create_model()
2025-07-01 10:16:48,694:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231C92E0710>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231CA4D0BD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 10:16:48,694:INFO:Checking exceptions
2025-07-01 10:16:48,694:INFO:Importing libraries
2025-07-01 10:16:48,694:INFO:Copying training dataset
2025-07-01 10:16:48,704:INFO:Defining folds
2025-07-01 10:16:48,704:INFO:Declaring metric variables
2025-07-01 10:16:48,710:INFO:Importing untrained model
2025-07-01 10:16:48,716:INFO:Ada Boost Classifier Imported successfully
2025-07-01 10:16:48,728:INFO:Starting cross validation
2025-07-01 10:16:48,730:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 10:16:48,760:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 10:16:48,762:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 10:16:48,766:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 10:16:48,770:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 10:16:48,772:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 10:16:48,772:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 10:16:48,774:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 10:16:48,799:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 10:16:49,024:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 10:16:49,025:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 10:16:49,261:INFO:Calculating mean and std
2025-07-01 10:16:49,265:INFO:Creating metrics dataframe
2025-07-01 10:16:49,267:INFO:Uploading results into container
2025-07-01 10:16:49,268:INFO:Uploading model into container now
2025-07-01 10:16:49,269:INFO:_master_model_container: 9
2025-07-01 10:16:49,269:INFO:_display_container: 2
2025-07-01 10:16:49,270:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=6875)
2025-07-01 10:16:49,270:INFO:create_model() successfully completed......................................
2025-07-01 10:16:49,403:INFO:SubProcess create_model() end ==================================
2025-07-01 10:16:49,404:INFO:Creating metrics dataframe
2025-07-01 10:16:49,414:INFO:Initializing Gradient Boosting Classifier
2025-07-01 10:16:49,414:INFO:Total runtime is 0.08051444689432781 minutes
2025-07-01 10:16:49,418:INFO:SubProcess create_model() called ==================================
2025-07-01 10:16:49,418:INFO:Initializing create_model()
2025-07-01 10:16:49,418:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231C92E0710>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231CA4D0BD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 10:16:49,419:INFO:Checking exceptions
2025-07-01 10:16:49,419:INFO:Importing libraries
2025-07-01 10:16:49,419:INFO:Copying training dataset
2025-07-01 10:16:49,424:INFO:Defining folds
2025-07-01 10:16:49,424:INFO:Declaring metric variables
2025-07-01 10:16:49,428:INFO:Importing untrained model
2025-07-01 10:16:49,437:INFO:Gradient Boosting Classifier Imported successfully
2025-07-01 10:16:49,444:INFO:Starting cross validation
2025-07-01 10:16:49,447:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 10:16:50,276:INFO:Calculating mean and std
2025-07-01 10:16:50,280:INFO:Creating metrics dataframe
2025-07-01 10:16:50,282:INFO:Uploading results into container
2025-07-01 10:16:50,283:INFO:Uploading model into container now
2025-07-01 10:16:50,283:INFO:_master_model_container: 10
2025-07-01 10:16:50,283:INFO:_display_container: 2
2025-07-01 10:16:50,284:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=6875, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-07-01 10:16:50,284:INFO:create_model() successfully completed......................................
2025-07-01 10:16:50,406:INFO:SubProcess create_model() end ==================================
2025-07-01 10:16:50,407:INFO:Creating metrics dataframe
2025-07-01 10:16:50,420:INFO:Initializing Linear Discriminant Analysis
2025-07-01 10:16:50,420:INFO:Total runtime is 0.09727216958999635 minutes
2025-07-01 10:16:50,424:INFO:SubProcess create_model() called ==================================
2025-07-01 10:16:50,425:INFO:Initializing create_model()
2025-07-01 10:16:50,425:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231C92E0710>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231CA4D0BD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 10:16:50,425:INFO:Checking exceptions
2025-07-01 10:16:50,425:INFO:Importing libraries
2025-07-01 10:16:50,425:INFO:Copying training dataset
2025-07-01 10:16:50,435:INFO:Defining folds
2025-07-01 10:16:50,435:INFO:Declaring metric variables
2025-07-01 10:16:50,440:INFO:Importing untrained model
2025-07-01 10:16:50,444:INFO:Linear Discriminant Analysis Imported successfully
2025-07-01 10:16:50,457:INFO:Starting cross validation
2025-07-01 10:16:50,458:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 10:16:50,593:INFO:Calculating mean and std
2025-07-01 10:16:50,596:INFO:Creating metrics dataframe
2025-07-01 10:16:50,601:INFO:Uploading results into container
2025-07-01 10:16:50,602:INFO:Uploading model into container now
2025-07-01 10:16:50,602:INFO:_master_model_container: 11
2025-07-01 10:16:50,602:INFO:_display_container: 2
2025-07-01 10:16:50,602:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-07-01 10:16:50,603:INFO:create_model() successfully completed......................................
2025-07-01 10:16:50,732:INFO:SubProcess create_model() end ==================================
2025-07-01 10:16:50,732:INFO:Creating metrics dataframe
2025-07-01 10:16:50,741:INFO:Initializing Extra Trees Classifier
2025-07-01 10:16:50,741:INFO:Total runtime is 0.10262142022450767 minutes
2025-07-01 10:16:50,744:INFO:SubProcess create_model() called ==================================
2025-07-01 10:16:50,744:INFO:Initializing create_model()
2025-07-01 10:16:50,745:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231C92E0710>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231CA4D0BD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 10:16:50,745:INFO:Checking exceptions
2025-07-01 10:16:50,745:INFO:Importing libraries
2025-07-01 10:16:50,745:INFO:Copying training dataset
2025-07-01 10:16:50,753:INFO:Defining folds
2025-07-01 10:16:50,754:INFO:Declaring metric variables
2025-07-01 10:16:50,757:INFO:Importing untrained model
2025-07-01 10:16:50,765:INFO:Extra Trees Classifier Imported successfully
2025-07-01 10:16:50,774:INFO:Starting cross validation
2025-07-01 10:16:50,775:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 10:16:51,392:INFO:Calculating mean and std
2025-07-01 10:16:51,394:INFO:Creating metrics dataframe
2025-07-01 10:16:51,397:INFO:Uploading results into container
2025-07-01 10:16:51,398:INFO:Uploading model into container now
2025-07-01 10:16:51,398:INFO:_master_model_container: 12
2025-07-01 10:16:51,398:INFO:_display_container: 2
2025-07-01 10:16:51,399:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=6875, verbose=0,
                     warm_start=False)
2025-07-01 10:16:51,399:INFO:create_model() successfully completed......................................
2025-07-01 10:16:51,520:INFO:SubProcess create_model() end ==================================
2025-07-01 10:16:51,520:INFO:Creating metrics dataframe
2025-07-01 10:16:51,531:INFO:Initializing Extreme Gradient Boosting
2025-07-01 10:16:51,531:INFO:Total runtime is 0.11580042044321698 minutes
2025-07-01 10:16:51,535:INFO:SubProcess create_model() called ==================================
2025-07-01 10:16:51,535:INFO:Initializing create_model()
2025-07-01 10:16:51,536:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231C92E0710>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231CA4D0BD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 10:16:51,536:INFO:Checking exceptions
2025-07-01 10:16:51,536:INFO:Importing libraries
2025-07-01 10:16:51,536:INFO:Copying training dataset
2025-07-01 10:16:51,541:INFO:Defining folds
2025-07-01 10:16:51,541:INFO:Declaring metric variables
2025-07-01 10:16:51,549:INFO:Importing untrained model
2025-07-01 10:16:51,554:INFO:Extreme Gradient Boosting Imported successfully
2025-07-01 10:16:51,567:INFO:Starting cross validation
2025-07-01 10:16:51,568:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 10:16:51,907:INFO:Calculating mean and std
2025-07-01 10:16:51,908:INFO:Creating metrics dataframe
2025-07-01 10:16:51,910:INFO:Uploading results into container
2025-07-01 10:16:51,911:INFO:Uploading model into container now
2025-07-01 10:16:51,912:INFO:_master_model_container: 13
2025-07-01 10:16:51,912:INFO:_display_container: 2
2025-07-01 10:16:51,914:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-07-01 10:16:51,914:INFO:create_model() successfully completed......................................
2025-07-01 10:16:52,036:INFO:SubProcess create_model() end ==================================
2025-07-01 10:16:52,037:INFO:Creating metrics dataframe
2025-07-01 10:16:52,049:INFO:Initializing Light Gradient Boosting Machine
2025-07-01 10:16:52,049:INFO:Total runtime is 0.12443616390228274 minutes
2025-07-01 10:16:52,054:INFO:SubProcess create_model() called ==================================
2025-07-01 10:16:52,054:INFO:Initializing create_model()
2025-07-01 10:16:52,054:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231C92E0710>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231CA4D0BD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 10:16:52,054:INFO:Checking exceptions
2025-07-01 10:16:52,054:INFO:Importing libraries
2025-07-01 10:16:52,055:INFO:Copying training dataset
2025-07-01 10:16:52,062:INFO:Defining folds
2025-07-01 10:16:52,062:INFO:Declaring metric variables
2025-07-01 10:16:52,068:INFO:Importing untrained model
2025-07-01 10:16:52,072:INFO:Light Gradient Boosting Machine Imported successfully
2025-07-01 10:16:52,084:INFO:Starting cross validation
2025-07-01 10:16:52,086:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 10:16:52,916:INFO:Calculating mean and std
2025-07-01 10:16:52,918:INFO:Creating metrics dataframe
2025-07-01 10:16:52,922:INFO:Uploading results into container
2025-07-01 10:16:52,923:INFO:Uploading model into container now
2025-07-01 10:16:52,924:INFO:_master_model_container: 14
2025-07-01 10:16:52,924:INFO:_display_container: 2
2025-07-01 10:16:52,924:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=6875, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-07-01 10:16:52,924:INFO:create_model() successfully completed......................................
2025-07-01 10:16:53,081:INFO:SubProcess create_model() end ==================================
2025-07-01 10:16:53,081:INFO:Creating metrics dataframe
2025-07-01 10:16:53,092:INFO:Initializing Dummy Classifier
2025-07-01 10:16:53,092:INFO:Total runtime is 0.14181539217631023 minutes
2025-07-01 10:16:53,098:INFO:SubProcess create_model() called ==================================
2025-07-01 10:16:53,099:INFO:Initializing create_model()
2025-07-01 10:16:53,099:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231C92E0710>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231CA4D0BD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 10:16:53,099:INFO:Checking exceptions
2025-07-01 10:16:53,100:INFO:Importing libraries
2025-07-01 10:16:53,100:INFO:Copying training dataset
2025-07-01 10:16:53,108:INFO:Defining folds
2025-07-01 10:16:53,108:INFO:Declaring metric variables
2025-07-01 10:16:53,115:INFO:Importing untrained model
2025-07-01 10:16:53,119:INFO:Dummy Classifier Imported successfully
2025-07-01 10:16:53,127:INFO:Starting cross validation
2025-07-01 10:16:53,130:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 10:16:53,229:INFO:Calculating mean and std
2025-07-01 10:16:53,231:INFO:Creating metrics dataframe
2025-07-01 10:16:53,233:INFO:Uploading results into container
2025-07-01 10:16:53,233:INFO:Uploading model into container now
2025-07-01 10:16:53,234:INFO:_master_model_container: 15
2025-07-01 10:16:53,234:INFO:_display_container: 2
2025-07-01 10:16:53,234:INFO:DummyClassifier(constant=None, random_state=6875, strategy='prior')
2025-07-01 10:16:53,234:INFO:create_model() successfully completed......................................
2025-07-01 10:16:53,363:INFO:SubProcess create_model() end ==================================
2025-07-01 10:16:53,363:INFO:Creating metrics dataframe
2025-07-01 10:16:53,380:WARNING:d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-07-01 10:16:53,390:INFO:Initializing create_model()
2025-07-01 10:16:53,390:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231C92E0710>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6875, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 10:16:53,390:INFO:Checking exceptions
2025-07-01 10:16:53,392:INFO:Importing libraries
2025-07-01 10:16:53,393:INFO:Copying training dataset
2025-07-01 10:16:53,400:INFO:Defining folds
2025-07-01 10:16:53,400:INFO:Declaring metric variables
2025-07-01 10:16:53,401:INFO:Importing untrained model
2025-07-01 10:16:53,401:INFO:Declaring custom model
2025-07-01 10:16:53,401:INFO:Decision Tree Classifier Imported successfully
2025-07-01 10:16:53,402:INFO:Cross validation set to False
2025-07-01 10:16:53,402:INFO:Fitting Model
2025-07-01 10:16:53,421:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6875, splitter='best')
2025-07-01 10:16:53,421:INFO:create_model() successfully completed......................................
2025-07-01 10:16:53,585:INFO:_master_model_container: 15
2025-07-01 10:16:53,585:INFO:_display_container: 2
2025-07-01 10:16:53,586:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6875, splitter='best')
2025-07-01 10:16:53,586:INFO:compare_models() successfully completed......................................
2025-07-01 10:53:25,328:INFO:PyCaret ClassificationExperiment
2025-07-01 10:53:25,328:INFO:Logging name: clf-default-name
2025-07-01 10:53:25,328:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-07-01 10:53:25,328:INFO:version 3.3.2
2025-07-01 10:53:25,328:INFO:Initializing setup()
2025-07-01 10:53:25,329:INFO:self.USI: bb34
2025-07-01 10:53:25,329:INFO:self._variable_keys: {'fix_imbalance', 'data', 'is_multiclass', 'y_test', 'X_train', 'log_plots_param', 'X', 'X_test', 'logging_param', 'n_jobs_param', 'gpu_param', 'idx', 'html_param', 'fold_generator', '_ml_usecase', 'exp_id', 'USI', '_available_plots', 'gpu_n_jobs_param', 'pipeline', 'y_train', 'fold_groups_param', 'y', 'fold_shuffle_param', 'target_param', 'memory', 'seed', 'exp_name_log'}
2025-07-01 10:53:25,329:INFO:Checking environment
2025-07-01 10:53:25,329:INFO:python_version: 3.11.13
2025-07-01 10:53:25,329:INFO:python_build: ('main', 'Jun  5 2025 13:03:15')
2025-07-01 10:53:25,329:INFO:machine: AMD64
2025-07-01 10:53:25,329:INFO:platform: Windows-10-10.0.22631-SP0
2025-07-01 10:53:25,335:INFO:Memory: svmem(total=12674457600, available=2547691520, percent=79.9, used=10126766080, free=2547691520)
2025-07-01 10:53:25,335:INFO:Physical Core: 4
2025-07-01 10:53:25,335:INFO:Logical Core: 8
2025-07-01 10:53:25,335:INFO:Checking libraries
2025-07-01 10:53:25,335:INFO:System:
2025-07-01 10:53:25,335:INFO:    python: 3.11.13 | packaged by Anaconda, Inc. | (main, Jun  5 2025, 13:03:15) [MSC v.1929 64 bit (AMD64)]
2025-07-01 10:53:25,335:INFO:executable: d:\ML_notes\.conda\python.exe
2025-07-01 10:53:25,335:INFO:   machine: Windows-10-10.0.22631-SP0
2025-07-01 10:53:25,335:INFO:PyCaret required dependencies:
2025-07-01 10:53:25,336:INFO:                 pip: 25.1
2025-07-01 10:53:25,336:INFO:          setuptools: 78.1.1
2025-07-01 10:53:25,336:INFO:             pycaret: 3.3.2
2025-07-01 10:53:25,336:INFO:             IPython: 9.3.0
2025-07-01 10:53:25,336:INFO:          ipywidgets: 8.1.7
2025-07-01 10:53:25,336:INFO:                tqdm: 4.67.1
2025-07-01 10:53:25,336:INFO:               numpy: 1.26.4
2025-07-01 10:53:25,336:INFO:              pandas: 2.1.4
2025-07-01 10:53:25,336:INFO:              jinja2: 3.1.6
2025-07-01 10:53:25,336:INFO:               scipy: 1.11.4
2025-07-01 10:53:25,336:INFO:              joblib: 1.3.2
2025-07-01 10:53:25,336:INFO:             sklearn: 1.4.2
2025-07-01 10:53:25,336:INFO:                pyod: 2.0.5
2025-07-01 10:53:25,336:INFO:            imblearn: 0.13.0
2025-07-01 10:53:25,337:INFO:   category_encoders: 2.7.0
2025-07-01 10:53:25,337:INFO:            lightgbm: 4.6.0
2025-07-01 10:53:25,337:INFO:               numba: 0.61.0
2025-07-01 10:53:25,337:INFO:            requests: 2.32.4
2025-07-01 10:53:25,337:INFO:          matplotlib: 3.7.5
2025-07-01 10:53:25,337:INFO:          scikitplot: 0.3.7
2025-07-01 10:53:25,337:INFO:         yellowbrick: 1.5
2025-07-01 10:53:25,337:INFO:              plotly: 5.24.1
2025-07-01 10:53:25,337:INFO:    plotly-resampler: Not installed
2025-07-01 10:53:25,337:INFO:             kaleido: 1.0.0
2025-07-01 10:53:25,337:INFO:           schemdraw: 0.15
2025-07-01 10:53:25,337:INFO:         statsmodels: 0.14.4
2025-07-01 10:53:25,337:INFO:              sktime: 0.26.0
2025-07-01 10:53:25,337:INFO:               tbats: 1.1.3
2025-07-01 10:53:25,338:INFO:            pmdarima: 2.0.4
2025-07-01 10:53:25,338:INFO:              psutil: 7.0.0
2025-07-01 10:53:25,338:INFO:          markupsafe: 3.0.2
2025-07-01 10:53:25,338:INFO:             pickle5: Not installed
2025-07-01 10:53:25,338:INFO:         cloudpickle: 3.1.1
2025-07-01 10:53:25,338:INFO:         deprecation: 2.1.0
2025-07-01 10:53:25,338:INFO:              xxhash: 3.5.0
2025-07-01 10:53:25,338:INFO:           wurlitzer: Not installed
2025-07-01 10:53:25,338:INFO:PyCaret optional dependencies:
2025-07-01 10:53:25,338:INFO:                shap: Not installed
2025-07-01 10:53:25,339:INFO:           interpret: Not installed
2025-07-01 10:53:25,339:INFO:                umap: Not installed
2025-07-01 10:53:25,339:INFO:     ydata_profiling: 4.16.1
2025-07-01 10:53:25,339:INFO:  explainerdashboard: Not installed
2025-07-01 10:53:25,339:INFO:             autoviz: Not installed
2025-07-01 10:53:25,339:INFO:           fairlearn: Not installed
2025-07-01 10:53:25,339:INFO:          deepchecks: Not installed
2025-07-01 10:53:25,339:INFO:             xgboost: 3.0.2
2025-07-01 10:53:25,339:INFO:            catboost: Not installed
2025-07-01 10:53:25,339:INFO:              kmodes: Not installed
2025-07-01 10:53:25,340:INFO:             mlxtend: Not installed
2025-07-01 10:53:25,340:INFO:       statsforecast: Not installed
2025-07-01 10:53:25,340:INFO:        tune_sklearn: Not installed
2025-07-01 10:53:25,340:INFO:                 ray: Not installed
2025-07-01 10:53:25,340:INFO:            hyperopt: Not installed
2025-07-01 10:53:25,340:INFO:              optuna: Not installed
2025-07-01 10:53:25,340:INFO:               skopt: Not installed
2025-07-01 10:53:25,340:INFO:              mlflow: Not installed
2025-07-01 10:53:25,340:INFO:              gradio: Not installed
2025-07-01 10:53:25,340:INFO:             fastapi: Not installed
2025-07-01 10:53:25,340:INFO:             uvicorn: Not installed
2025-07-01 10:53:25,340:INFO:              m2cgen: Not installed
2025-07-01 10:53:25,341:INFO:           evidently: Not installed
2025-07-01 10:53:25,341:INFO:               fugue: Not installed
2025-07-01 10:53:25,341:INFO:           streamlit: Not installed
2025-07-01 10:53:25,341:INFO:             prophet: Not installed
2025-07-01 10:53:25,341:INFO:None
2025-07-01 10:53:25,341:INFO:Set up data.
2025-07-01 10:53:25,348:INFO:Set up folding strategy.
2025-07-01 10:53:25,348:INFO:Set up train/test split.
2025-07-01 10:53:25,358:INFO:Set up index.
2025-07-01 10:53:25,358:INFO:Assigning column types.
2025-07-01 10:53:25,363:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-07-01 10:53:25,410:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-01 10:53:25,412:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-01 10:53:25,444:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 10:53:25,447:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 10:53:25,491:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-01 10:53:25,493:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-01 10:53:25,521:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 10:53:25,525:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 10:53:25,525:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-07-01 10:53:25,572:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-01 10:53:25,599:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 10:53:25,601:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 10:53:25,645:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-01 10:53:25,675:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 10:53:25,678:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 10:53:25,679:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-07-01 10:53:25,754:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 10:53:25,756:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 10:53:25,832:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 10:53:25,835:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 10:53:25,836:INFO:Preparing preprocessing pipeline...
2025-07-01 10:53:25,837:INFO:Set up simple imputation.
2025-07-01 10:53:25,864:INFO:Finished creating preprocessing pipeline.
2025-07-01 10:53:25,869:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\YOGA\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'Annual_Income',
                                             'Total_Spend', 'Years_as_Customer',
                                             'Num_of_Purchases',
                                             'Average_Transaction_Amount',
                                             'Num_of_Returns',
                                             'Num_of_Support_Contacts',
                                             'Satisfaction_Score',
                                             'Last_Purchase_Days_Ago',
                                             'Gender_Fem...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-07-01 10:53:25,869:INFO:Creating final display dataframe.
2025-07-01 10:53:25,954:INFO:Setup _display_container:                     Description              Value
0                    Session id               8089
1                        Target  Target_Churn_True
2                   Target type             Binary
3           Original data shape         (1000, 20)
4        Transformed data shape         (1000, 20)
5   Transformed train set shape          (700, 20)
6    Transformed test set shape          (300, 20)
7              Numeric features                 19
8                    Preprocess               True
9               Imputation type             simple
10           Numeric imputation               mean
11       Categorical imputation               mode
12               Fold Generator    StratifiedKFold
13                  Fold Number                 10
14                     CPU Jobs                 -1
15                      Use GPU              False
16               Log Experiment              False
17              Experiment Name   clf-default-name
18                          USI               bb34
2025-07-01 10:53:26,094:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 10:53:26,098:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 10:53:26,177:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 10:53:26,181:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 10:53:26,182:INFO:setup() successfully completed in 0.86s...............
2025-07-01 10:53:26,183:INFO:Initializing compare_models()
2025-07-01 10:53:26,183:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231C94F4250>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000231C94F4250>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2025-07-01 10:53:26,183:INFO:Checking exceptions
2025-07-01 10:53:26,188:INFO:Preparing display monitor
2025-07-01 10:53:26,218:INFO:Initializing Logistic Regression
2025-07-01 10:53:26,218:INFO:Total runtime is 0.0 minutes
2025-07-01 10:53:26,225:INFO:SubProcess create_model() called ==================================
2025-07-01 10:53:26,225:INFO:Initializing create_model()
2025-07-01 10:53:26,225:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231C94F4250>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231C6C98E50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 10:53:26,226:INFO:Checking exceptions
2025-07-01 10:53:26,226:INFO:Importing libraries
2025-07-01 10:53:26,226:INFO:Copying training dataset
2025-07-01 10:53:26,236:INFO:Defining folds
2025-07-01 10:53:26,237:INFO:Declaring metric variables
2025-07-01 10:53:26,243:INFO:Importing untrained model
2025-07-01 10:53:26,249:INFO:Logistic Regression Imported successfully
2025-07-01 10:53:26,260:INFO:Starting cross validation
2025-07-01 10:53:26,262:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 11:01:49,345:INFO:PyCaret ClassificationExperiment
2025-07-01 11:01:49,345:INFO:Logging name: clf-default-name
2025-07-01 11:01:49,345:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-07-01 11:01:49,345:INFO:version 3.3.2
2025-07-01 11:01:49,345:INFO:Initializing setup()
2025-07-01 11:01:49,345:INFO:self.USI: 399a
2025-07-01 11:01:49,345:INFO:self._variable_keys: {'fix_imbalance', 'data', 'is_multiclass', 'y_test', 'X_train', 'log_plots_param', 'X', 'X_test', 'logging_param', 'n_jobs_param', 'gpu_param', 'idx', 'html_param', 'fold_generator', '_ml_usecase', 'exp_id', 'USI', '_available_plots', 'gpu_n_jobs_param', 'pipeline', 'y_train', 'fold_groups_param', 'y', 'fold_shuffle_param', 'target_param', 'memory', 'seed', 'exp_name_log'}
2025-07-01 11:01:49,345:INFO:Checking environment
2025-07-01 11:01:49,345:INFO:python_version: 3.11.13
2025-07-01 11:01:49,345:INFO:python_build: ('main', 'Jun  5 2025 13:03:15')
2025-07-01 11:01:49,346:INFO:machine: AMD64
2025-07-01 11:01:49,346:INFO:platform: Windows-10-10.0.22631-SP0
2025-07-01 11:01:49,354:INFO:Memory: svmem(total=12674457600, available=2136399872, percent=83.1, used=10538057728, free=2136399872)
2025-07-01 11:01:49,354:INFO:Physical Core: 4
2025-07-01 11:01:49,354:INFO:Logical Core: 8
2025-07-01 11:01:49,354:INFO:Checking libraries
2025-07-01 11:01:49,354:INFO:System:
2025-07-01 11:01:49,354:INFO:    python: 3.11.13 | packaged by Anaconda, Inc. | (main, Jun  5 2025, 13:03:15) [MSC v.1929 64 bit (AMD64)]
2025-07-01 11:01:49,356:INFO:executable: d:\ML_notes\.conda\python.exe
2025-07-01 11:01:49,356:INFO:   machine: Windows-10-10.0.22631-SP0
2025-07-01 11:01:49,356:INFO:PyCaret required dependencies:
2025-07-01 11:01:49,356:INFO:                 pip: 25.1
2025-07-01 11:01:49,356:INFO:          setuptools: 78.1.1
2025-07-01 11:01:49,356:INFO:             pycaret: 3.3.2
2025-07-01 11:01:49,356:INFO:             IPython: 9.3.0
2025-07-01 11:01:49,356:INFO:          ipywidgets: 8.1.7
2025-07-01 11:01:49,356:INFO:                tqdm: 4.67.1
2025-07-01 11:01:49,356:INFO:               numpy: 1.26.4
2025-07-01 11:01:49,356:INFO:              pandas: 2.1.4
2025-07-01 11:01:49,357:INFO:              jinja2: 3.1.6
2025-07-01 11:01:49,357:INFO:               scipy: 1.11.4
2025-07-01 11:01:49,357:INFO:              joblib: 1.3.2
2025-07-01 11:01:49,357:INFO:             sklearn: 1.4.2
2025-07-01 11:01:49,357:INFO:                pyod: 2.0.5
2025-07-01 11:01:49,357:INFO:            imblearn: 0.13.0
2025-07-01 11:01:49,357:INFO:   category_encoders: 2.7.0
2025-07-01 11:01:49,357:INFO:            lightgbm: 4.6.0
2025-07-01 11:01:49,357:INFO:               numba: 0.61.0
2025-07-01 11:01:49,357:INFO:            requests: 2.32.4
2025-07-01 11:01:49,357:INFO:          matplotlib: 3.7.5
2025-07-01 11:01:49,357:INFO:          scikitplot: 0.3.7
2025-07-01 11:01:49,357:INFO:         yellowbrick: 1.5
2025-07-01 11:01:49,357:INFO:              plotly: 5.24.1
2025-07-01 11:01:49,357:INFO:    plotly-resampler: Not installed
2025-07-01 11:01:49,357:INFO:             kaleido: 1.0.0
2025-07-01 11:01:49,358:INFO:           schemdraw: 0.15
2025-07-01 11:01:49,358:INFO:         statsmodels: 0.14.4
2025-07-01 11:01:49,358:INFO:              sktime: 0.26.0
2025-07-01 11:01:49,358:INFO:               tbats: 1.1.3
2025-07-01 11:01:49,358:INFO:            pmdarima: 2.0.4
2025-07-01 11:01:49,358:INFO:              psutil: 7.0.0
2025-07-01 11:01:49,358:INFO:          markupsafe: 3.0.2
2025-07-01 11:01:49,358:INFO:             pickle5: Not installed
2025-07-01 11:01:49,358:INFO:         cloudpickle: 3.1.1
2025-07-01 11:01:49,358:INFO:         deprecation: 2.1.0
2025-07-01 11:01:49,358:INFO:              xxhash: 3.5.0
2025-07-01 11:01:49,358:INFO:           wurlitzer: Not installed
2025-07-01 11:01:49,358:INFO:PyCaret optional dependencies:
2025-07-01 11:01:49,358:INFO:                shap: Not installed
2025-07-01 11:01:49,358:INFO:           interpret: Not installed
2025-07-01 11:01:49,358:INFO:                umap: Not installed
2025-07-01 11:01:49,358:INFO:     ydata_profiling: 4.16.1
2025-07-01 11:01:49,358:INFO:  explainerdashboard: Not installed
2025-07-01 11:01:49,358:INFO:             autoviz: Not installed
2025-07-01 11:01:49,359:INFO:           fairlearn: Not installed
2025-07-01 11:01:49,359:INFO:          deepchecks: Not installed
2025-07-01 11:01:49,359:INFO:             xgboost: 3.0.2
2025-07-01 11:01:49,359:INFO:            catboost: Not installed
2025-07-01 11:01:49,359:INFO:              kmodes: Not installed
2025-07-01 11:01:49,359:INFO:             mlxtend: Not installed
2025-07-01 11:01:49,359:INFO:       statsforecast: Not installed
2025-07-01 11:01:49,359:INFO:        tune_sklearn: Not installed
2025-07-01 11:01:49,359:INFO:                 ray: Not installed
2025-07-01 11:01:49,359:INFO:            hyperopt: Not installed
2025-07-01 11:01:49,359:INFO:              optuna: Not installed
2025-07-01 11:01:49,359:INFO:               skopt: Not installed
2025-07-01 11:01:49,359:INFO:              mlflow: Not installed
2025-07-01 11:01:49,359:INFO:              gradio: Not installed
2025-07-01 11:01:49,359:INFO:             fastapi: Not installed
2025-07-01 11:01:49,359:INFO:             uvicorn: Not installed
2025-07-01 11:01:49,359:INFO:              m2cgen: Not installed
2025-07-01 11:01:49,360:INFO:           evidently: Not installed
2025-07-01 11:01:49,360:INFO:               fugue: Not installed
2025-07-01 11:01:49,360:INFO:           streamlit: Not installed
2025-07-01 11:01:49,360:INFO:             prophet: Not installed
2025-07-01 11:01:49,360:INFO:None
2025-07-01 11:01:49,360:INFO:Set up data.
2025-07-01 11:01:49,370:INFO:Set up folding strategy.
2025-07-01 11:01:49,370:INFO:Set up train/test split.
2025-07-01 11:01:49,380:INFO:Set up index.
2025-07-01 11:01:49,381:INFO:Assigning column types.
2025-07-01 11:01:49,388:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-07-01 11:01:49,460:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-01 11:01:49,461:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-01 11:01:49,492:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 11:01:49,494:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 11:01:49,564:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-01 11:01:49,567:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-01 11:01:49,615:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 11:01:49,618:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 11:01:49,619:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-07-01 11:01:49,703:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-01 11:01:49,740:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 11:01:49,743:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 11:01:49,810:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-01 11:01:49,849:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 11:01:49,853:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 11:01:49,854:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-07-01 11:01:50,011:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 11:01:50,017:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 11:01:50,118:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 11:01:50,121:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 11:01:50,122:INFO:Preparing preprocessing pipeline...
2025-07-01 11:01:50,123:INFO:Set up simple imputation.
2025-07-01 11:01:50,155:INFO:Finished creating preprocessing pipeline.
2025-07-01 11:01:50,158:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\YOGA\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'Annual_Income',
                                             'Total_Spend', 'Years_as_Customer',
                                             'Num_of_Purchases',
                                             'Average_Transaction_Amount',
                                             'Num_of_Returns',
                                             'Num_of_Support_Contacts',
                                             'Satisfaction_Score',
                                             'Last_Purchase_Days_Ago',
                                             'Gender_Fem...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-07-01 11:01:50,158:INFO:Creating final display dataframe.
2025-07-01 11:01:50,257:INFO:Setup _display_container:                     Description              Value
0                    Session id               2643
1                        Target  Target_Churn_True
2                   Target type             Binary
3           Original data shape         (1000, 20)
4        Transformed data shape         (1000, 20)
5   Transformed train set shape          (700, 20)
6    Transformed test set shape          (300, 20)
7              Numeric features                 19
8                    Preprocess               True
9               Imputation type             simple
10           Numeric imputation               mean
11       Categorical imputation               mode
12               Fold Generator    StratifiedKFold
13                  Fold Number                 10
14                     CPU Jobs                 -1
15                      Use GPU              False
16               Log Experiment              False
17              Experiment Name   clf-default-name
18                          USI               399a
2025-07-01 11:01:50,365:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 11:01:50,369:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 11:01:50,484:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 11:01:50,489:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 11:01:50,491:INFO:setup() successfully completed in 1.15s...............
2025-07-01 11:01:50,491:INFO:Initializing compare_models()
2025-07-01 11:01:50,491:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DFFCA0D0>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000231DFFCA0D0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2025-07-01 11:01:50,491:INFO:Checking exceptions
2025-07-01 11:01:50,498:INFO:Preparing display monitor
2025-07-01 11:01:50,538:INFO:Initializing Logistic Regression
2025-07-01 11:01:50,539:INFO:Total runtime is 1.6681353251139323e-05 minutes
2025-07-01 11:01:50,545:INFO:SubProcess create_model() called ==================================
2025-07-01 11:01:50,546:INFO:Initializing create_model()
2025-07-01 11:01:50,547:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DFFCA0D0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231E0050450>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 11:01:50,547:INFO:Checking exceptions
2025-07-01 11:01:50,547:INFO:Importing libraries
2025-07-01 11:01:50,547:INFO:Copying training dataset
2025-07-01 11:01:50,557:INFO:Defining folds
2025-07-01 11:01:50,557:INFO:Declaring metric variables
2025-07-01 11:01:50,563:INFO:Importing untrained model
2025-07-01 11:01:50,568:INFO:Logistic Regression Imported successfully
2025-07-01 11:01:50,575:INFO:Starting cross validation
2025-07-01 11:01:50,575:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 11:01:59,607:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-07-01 11:01:59,981:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-07-01 11:02:00,041:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-07-01 11:02:00,105:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-07-01 11:02:00,229:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-07-01 11:02:00,324:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-07-01 11:02:00,336:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-07-01 11:02:00,413:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-07-01 11:02:00,416:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-07-01 11:02:00,677:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-07-01 11:02:00,703:INFO:Calculating mean and std
2025-07-01 11:02:00,706:INFO:Creating metrics dataframe
2025-07-01 11:02:00,710:INFO:Uploading results into container
2025-07-01 11:02:00,710:INFO:Uploading model into container now
2025-07-01 11:02:00,711:INFO:_master_model_container: 1
2025-07-01 11:02:00,711:INFO:_display_container: 2
2025-07-01 11:02:00,712:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2643, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-07-01 11:02:00,712:INFO:create_model() successfully completed......................................
2025-07-01 11:02:01,371:INFO:SubProcess create_model() end ==================================
2025-07-01 11:02:01,371:INFO:Creating metrics dataframe
2025-07-01 11:02:01,376:INFO:Initializing K Neighbors Classifier
2025-07-01 11:02:01,377:INFO:Total runtime is 0.18064648707707723 minutes
2025-07-01 11:02:01,381:INFO:SubProcess create_model() called ==================================
2025-07-01 11:02:01,381:INFO:Initializing create_model()
2025-07-01 11:02:01,381:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DFFCA0D0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231E0050450>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 11:02:01,382:INFO:Checking exceptions
2025-07-01 11:02:01,382:INFO:Importing libraries
2025-07-01 11:02:01,382:INFO:Copying training dataset
2025-07-01 11:02:01,389:INFO:Defining folds
2025-07-01 11:02:01,389:INFO:Declaring metric variables
2025-07-01 11:02:01,394:INFO:Importing untrained model
2025-07-01 11:02:01,400:INFO:K Neighbors Classifier Imported successfully
2025-07-01 11:02:01,408:INFO:Starting cross validation
2025-07-01 11:02:01,409:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 11:02:01,666:INFO:Calculating mean and std
2025-07-01 11:02:01,668:INFO:Creating metrics dataframe
2025-07-01 11:02:01,670:INFO:Uploading results into container
2025-07-01 11:02:01,670:INFO:Uploading model into container now
2025-07-01 11:02:01,671:INFO:_master_model_container: 2
2025-07-01 11:02:01,671:INFO:_display_container: 2
2025-07-01 11:02:01,672:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-07-01 11:02:01,672:INFO:create_model() successfully completed......................................
2025-07-01 11:02:01,868:INFO:SubProcess create_model() end ==================================
2025-07-01 11:02:01,868:INFO:Creating metrics dataframe
2025-07-01 11:02:01,875:INFO:Initializing Naive Bayes
2025-07-01 11:02:01,875:INFO:Total runtime is 0.18895113070805866 minutes
2025-07-01 11:02:01,877:INFO:SubProcess create_model() called ==================================
2025-07-01 11:02:01,878:INFO:Initializing create_model()
2025-07-01 11:02:01,878:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DFFCA0D0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231E0050450>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 11:02:01,878:INFO:Checking exceptions
2025-07-01 11:02:01,878:INFO:Importing libraries
2025-07-01 11:02:01,878:INFO:Copying training dataset
2025-07-01 11:02:01,888:INFO:Defining folds
2025-07-01 11:02:01,888:INFO:Declaring metric variables
2025-07-01 11:02:01,892:INFO:Importing untrained model
2025-07-01 11:02:01,898:INFO:Naive Bayes Imported successfully
2025-07-01 11:02:01,907:INFO:Starting cross validation
2025-07-01 11:02:01,908:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 11:02:02,006:INFO:Calculating mean and std
2025-07-01 11:02:02,007:INFO:Creating metrics dataframe
2025-07-01 11:02:02,008:INFO:Uploading results into container
2025-07-01 11:02:02,009:INFO:Uploading model into container now
2025-07-01 11:02:02,009:INFO:_master_model_container: 3
2025-07-01 11:02:02,009:INFO:_display_container: 2
2025-07-01 11:02:02,010:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-07-01 11:02:02,010:INFO:create_model() successfully completed......................................
2025-07-01 11:02:02,196:INFO:SubProcess create_model() end ==================================
2025-07-01 11:02:02,197:INFO:Creating metrics dataframe
2025-07-01 11:02:02,206:INFO:Initializing Decision Tree Classifier
2025-07-01 11:02:02,206:INFO:Total runtime is 0.19447290102640785 minutes
2025-07-01 11:02:02,210:INFO:SubProcess create_model() called ==================================
2025-07-01 11:02:02,210:INFO:Initializing create_model()
2025-07-01 11:02:02,210:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DFFCA0D0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231E0050450>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 11:02:02,211:INFO:Checking exceptions
2025-07-01 11:02:02,211:INFO:Importing libraries
2025-07-01 11:02:02,211:INFO:Copying training dataset
2025-07-01 11:02:02,219:INFO:Defining folds
2025-07-01 11:02:02,219:INFO:Declaring metric variables
2025-07-01 11:02:02,223:INFO:Importing untrained model
2025-07-01 11:02:02,229:INFO:Decision Tree Classifier Imported successfully
2025-07-01 11:02:02,238:INFO:Starting cross validation
2025-07-01 11:02:02,239:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 11:02:02,348:INFO:Calculating mean and std
2025-07-01 11:02:02,380:INFO:Creating metrics dataframe
2025-07-01 11:02:02,385:INFO:Uploading results into container
2025-07-01 11:02:02,386:INFO:Uploading model into container now
2025-07-01 11:02:02,386:INFO:_master_model_container: 4
2025-07-01 11:02:02,386:INFO:_display_container: 2
2025-07-01 11:02:02,387:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2643, splitter='best')
2025-07-01 11:02:02,387:INFO:create_model() successfully completed......................................
2025-07-01 11:02:02,601:INFO:SubProcess create_model() end ==================================
2025-07-01 11:02:02,601:INFO:Creating metrics dataframe
2025-07-01 11:02:02,610:INFO:Initializing SVM - Linear Kernel
2025-07-01 11:02:02,610:INFO:Total runtime is 0.20119655927022295 minutes
2025-07-01 11:02:02,617:INFO:SubProcess create_model() called ==================================
2025-07-01 11:02:02,618:INFO:Initializing create_model()
2025-07-01 11:02:02,618:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DFFCA0D0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231E0050450>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 11:02:02,618:INFO:Checking exceptions
2025-07-01 11:02:02,618:INFO:Importing libraries
2025-07-01 11:02:02,619:INFO:Copying training dataset
2025-07-01 11:02:02,625:INFO:Defining folds
2025-07-01 11:02:02,625:INFO:Declaring metric variables
2025-07-01 11:02:02,631:INFO:Importing untrained model
2025-07-01 11:02:02,637:INFO:SVM - Linear Kernel Imported successfully
2025-07-01 11:02:02,644:INFO:Starting cross validation
2025-07-01 11:02:02,645:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 11:02:02,704:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-01 11:02:02,705:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-01 11:02:02,705:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-01 11:02:02,736:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-01 11:02:02,737:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-01 11:02:02,748:INFO:Calculating mean and std
2025-07-01 11:02:02,749:INFO:Creating metrics dataframe
2025-07-01 11:02:02,751:INFO:Uploading results into container
2025-07-01 11:02:02,751:INFO:Uploading model into container now
2025-07-01 11:02:02,752:INFO:_master_model_container: 5
2025-07-01 11:02:02,752:INFO:_display_container: 2
2025-07-01 11:02:02,752:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=2643, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-07-01 11:02:02,752:INFO:create_model() successfully completed......................................
2025-07-01 11:02:02,943:INFO:SubProcess create_model() end ==================================
2025-07-01 11:02:02,943:INFO:Creating metrics dataframe
2025-07-01 11:02:02,955:INFO:Initializing Ridge Classifier
2025-07-01 11:02:02,955:INFO:Total runtime is 0.20695124467213946 minutes
2025-07-01 11:02:02,958:INFO:SubProcess create_model() called ==================================
2025-07-01 11:02:02,959:INFO:Initializing create_model()
2025-07-01 11:02:02,959:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DFFCA0D0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231E0050450>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 11:02:02,959:INFO:Checking exceptions
2025-07-01 11:02:02,959:INFO:Importing libraries
2025-07-01 11:02:02,959:INFO:Copying training dataset
2025-07-01 11:02:02,966:INFO:Defining folds
2025-07-01 11:02:02,966:INFO:Declaring metric variables
2025-07-01 11:02:02,971:INFO:Importing untrained model
2025-07-01 11:02:02,976:INFO:Ridge Classifier Imported successfully
2025-07-01 11:02:02,984:INFO:Starting cross validation
2025-07-01 11:02:02,986:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 11:02:03,134:INFO:Calculating mean and std
2025-07-01 11:02:03,136:INFO:Creating metrics dataframe
2025-07-01 11:02:03,139:INFO:Uploading results into container
2025-07-01 11:02:03,140:INFO:Uploading model into container now
2025-07-01 11:02:03,143:INFO:_master_model_container: 6
2025-07-01 11:02:03,143:INFO:_display_container: 2
2025-07-01 11:02:03,144:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=2643, solver='auto',
                tol=0.0001)
2025-07-01 11:02:03,144:INFO:create_model() successfully completed......................................
2025-07-01 11:02:03,394:INFO:SubProcess create_model() end ==================================
2025-07-01 11:02:03,395:INFO:Creating metrics dataframe
2025-07-01 11:02:03,407:INFO:Initializing Random Forest Classifier
2025-07-01 11:02:03,408:INFO:Total runtime is 0.21450501680374143 minutes
2025-07-01 11:02:03,412:INFO:SubProcess create_model() called ==================================
2025-07-01 11:02:03,412:INFO:Initializing create_model()
2025-07-01 11:02:03,413:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DFFCA0D0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231E0050450>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 11:02:03,413:INFO:Checking exceptions
2025-07-01 11:02:03,413:INFO:Importing libraries
2025-07-01 11:02:03,413:INFO:Copying training dataset
2025-07-01 11:02:03,421:INFO:Defining folds
2025-07-01 11:02:03,422:INFO:Declaring metric variables
2025-07-01 11:02:03,427:INFO:Importing untrained model
2025-07-01 11:02:03,433:INFO:Random Forest Classifier Imported successfully
2025-07-01 11:02:03,442:INFO:Starting cross validation
2025-07-01 11:02:03,443:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 11:02:04,421:INFO:Calculating mean and std
2025-07-01 11:02:04,423:INFO:Creating metrics dataframe
2025-07-01 11:02:04,426:INFO:Uploading results into container
2025-07-01 11:02:04,427:INFO:Uploading model into container now
2025-07-01 11:02:04,428:INFO:_master_model_container: 7
2025-07-01 11:02:04,428:INFO:_display_container: 2
2025-07-01 11:02:04,429:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=2643, verbose=0,
                       warm_start=False)
2025-07-01 11:02:04,429:INFO:create_model() successfully completed......................................
2025-07-01 11:02:04,653:INFO:SubProcess create_model() end ==================================
2025-07-01 11:02:04,653:INFO:Creating metrics dataframe
2025-07-01 11:02:04,661:INFO:Initializing Quadratic Discriminant Analysis
2025-07-01 11:02:04,661:INFO:Total runtime is 0.23538092374801634 minutes
2025-07-01 11:02:04,667:INFO:SubProcess create_model() called ==================================
2025-07-01 11:02:04,667:INFO:Initializing create_model()
2025-07-01 11:02:04,667:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DFFCA0D0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231E0050450>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 11:02:04,667:INFO:Checking exceptions
2025-07-01 11:02:04,667:INFO:Importing libraries
2025-07-01 11:02:04,667:INFO:Copying training dataset
2025-07-01 11:02:04,675:INFO:Defining folds
2025-07-01 11:02:04,675:INFO:Declaring metric variables
2025-07-01 11:02:04,680:INFO:Importing untrained model
2025-07-01 11:02:04,688:INFO:Quadratic Discriminant Analysis Imported successfully
2025-07-01 11:02:04,695:INFO:Starting cross validation
2025-07-01 11:02:04,696:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 11:02:04,736:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 11:02:04,737:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 11:02:04,738:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 11:02:04,741:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 11:02:04,741:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 11:02:04,743:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 11:02:04,753:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 11:02:04,753:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 11:02:04,780:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 11:02:04,784:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 11:02:04,810:INFO:Calculating mean and std
2025-07-01 11:02:04,811:INFO:Creating metrics dataframe
2025-07-01 11:02:04,813:INFO:Uploading results into container
2025-07-01 11:02:04,815:INFO:Uploading model into container now
2025-07-01 11:02:04,816:INFO:_master_model_container: 8
2025-07-01 11:02:04,816:INFO:_display_container: 2
2025-07-01 11:02:04,817:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-07-01 11:02:04,817:INFO:create_model() successfully completed......................................
2025-07-01 11:02:05,026:INFO:SubProcess create_model() end ==================================
2025-07-01 11:02:05,026:INFO:Creating metrics dataframe
2025-07-01 11:02:05,041:INFO:Initializing Ada Boost Classifier
2025-07-01 11:02:05,041:INFO:Total runtime is 0.241724685827891 minutes
2025-07-01 11:02:05,047:INFO:SubProcess create_model() called ==================================
2025-07-01 11:02:05,048:INFO:Initializing create_model()
2025-07-01 11:02:05,048:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DFFCA0D0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231E0050450>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 11:02:05,049:INFO:Checking exceptions
2025-07-01 11:02:05,049:INFO:Importing libraries
2025-07-01 11:02:05,049:INFO:Copying training dataset
2025-07-01 11:02:05,056:INFO:Defining folds
2025-07-01 11:02:05,057:INFO:Declaring metric variables
2025-07-01 11:02:05,062:INFO:Importing untrained model
2025-07-01 11:02:05,069:INFO:Ada Boost Classifier Imported successfully
2025-07-01 11:02:05,077:INFO:Starting cross validation
2025-07-01 11:02:05,078:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 11:02:05,110:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 11:02:05,115:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 11:02:05,119:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 11:02:05,119:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 11:02:05,122:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 11:02:05,127:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 11:02:05,127:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 11:02:05,128:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 11:02:05,348:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 11:02:05,349:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 11:02:05,523:INFO:Calculating mean and std
2025-07-01 11:02:05,524:INFO:Creating metrics dataframe
2025-07-01 11:02:05,528:INFO:Uploading results into container
2025-07-01 11:02:05,529:INFO:Uploading model into container now
2025-07-01 11:02:05,530:INFO:_master_model_container: 9
2025-07-01 11:02:05,530:INFO:_display_container: 2
2025-07-01 11:02:05,531:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=2643)
2025-07-01 11:02:05,531:INFO:create_model() successfully completed......................................
2025-07-01 11:02:05,755:INFO:SubProcess create_model() end ==================================
2025-07-01 11:02:05,755:INFO:Creating metrics dataframe
2025-07-01 11:02:05,771:INFO:Initializing Gradient Boosting Classifier
2025-07-01 11:02:05,771:INFO:Total runtime is 0.253887132803599 minutes
2025-07-01 11:02:05,775:INFO:SubProcess create_model() called ==================================
2025-07-01 11:02:05,776:INFO:Initializing create_model()
2025-07-01 11:02:05,776:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DFFCA0D0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231E0050450>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 11:02:05,776:INFO:Checking exceptions
2025-07-01 11:02:05,776:INFO:Importing libraries
2025-07-01 11:02:05,776:INFO:Copying training dataset
2025-07-01 11:02:05,787:INFO:Defining folds
2025-07-01 11:02:05,787:INFO:Declaring metric variables
2025-07-01 11:02:05,792:INFO:Importing untrained model
2025-07-01 11:02:05,797:INFO:Gradient Boosting Classifier Imported successfully
2025-07-01 11:02:05,807:INFO:Starting cross validation
2025-07-01 11:02:05,808:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 11:02:06,621:INFO:Calculating mean and std
2025-07-01 11:02:06,623:INFO:Creating metrics dataframe
2025-07-01 11:02:06,627:INFO:Uploading results into container
2025-07-01 11:02:06,628:INFO:Uploading model into container now
2025-07-01 11:02:06,629:INFO:_master_model_container: 10
2025-07-01 11:02:06,629:INFO:_display_container: 2
2025-07-01 11:02:06,630:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2643, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-07-01 11:02:06,630:INFO:create_model() successfully completed......................................
2025-07-01 11:02:06,844:INFO:SubProcess create_model() end ==================================
2025-07-01 11:02:06,845:INFO:Creating metrics dataframe
2025-07-01 11:02:06,859:INFO:Initializing Linear Discriminant Analysis
2025-07-01 11:02:06,860:INFO:Total runtime is 0.2720312635103861 minutes
2025-07-01 11:02:06,866:INFO:SubProcess create_model() called ==================================
2025-07-01 11:02:06,867:INFO:Initializing create_model()
2025-07-01 11:02:06,867:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DFFCA0D0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231E0050450>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 11:02:06,867:INFO:Checking exceptions
2025-07-01 11:02:06,867:INFO:Importing libraries
2025-07-01 11:02:06,867:INFO:Copying training dataset
2025-07-01 11:02:06,874:INFO:Defining folds
2025-07-01 11:02:06,874:INFO:Declaring metric variables
2025-07-01 11:02:06,880:INFO:Importing untrained model
2025-07-01 11:02:06,888:INFO:Linear Discriminant Analysis Imported successfully
2025-07-01 11:02:06,897:INFO:Starting cross validation
2025-07-01 11:02:06,900:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 11:02:07,015:INFO:Calculating mean and std
2025-07-01 11:02:07,017:INFO:Creating metrics dataframe
2025-07-01 11:02:07,018:INFO:Uploading results into container
2025-07-01 11:02:07,019:INFO:Uploading model into container now
2025-07-01 11:02:07,019:INFO:_master_model_container: 11
2025-07-01 11:02:07,019:INFO:_display_container: 2
2025-07-01 11:02:07,020:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-07-01 11:02:07,020:INFO:create_model() successfully completed......................................
2025-07-01 11:02:07,230:INFO:SubProcess create_model() end ==================================
2025-07-01 11:02:07,230:INFO:Creating metrics dataframe
2025-07-01 11:02:07,242:INFO:Initializing Extra Trees Classifier
2025-07-01 11:02:07,242:INFO:Total runtime is 0.2783990065256754 minutes
2025-07-01 11:02:07,246:INFO:SubProcess create_model() called ==================================
2025-07-01 11:02:07,246:INFO:Initializing create_model()
2025-07-01 11:02:07,247:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DFFCA0D0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231E0050450>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 11:02:07,247:INFO:Checking exceptions
2025-07-01 11:02:07,247:INFO:Importing libraries
2025-07-01 11:02:07,247:INFO:Copying training dataset
2025-07-01 11:02:07,255:INFO:Defining folds
2025-07-01 11:02:07,255:INFO:Declaring metric variables
2025-07-01 11:02:07,259:INFO:Importing untrained model
2025-07-01 11:02:07,265:INFO:Extra Trees Classifier Imported successfully
2025-07-01 11:02:07,273:INFO:Starting cross validation
2025-07-01 11:02:07,274:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 11:02:07,927:INFO:Calculating mean and std
2025-07-01 11:02:07,929:INFO:Creating metrics dataframe
2025-07-01 11:02:07,936:INFO:Uploading results into container
2025-07-01 11:02:07,937:INFO:Uploading model into container now
2025-07-01 11:02:07,937:INFO:_master_model_container: 12
2025-07-01 11:02:07,937:INFO:_display_container: 2
2025-07-01 11:02:07,938:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=2643, verbose=0,
                     warm_start=False)
2025-07-01 11:02:07,938:INFO:create_model() successfully completed......................................
2025-07-01 11:02:08,223:INFO:SubProcess create_model() end ==================================
2025-07-01 11:02:08,223:INFO:Creating metrics dataframe
2025-07-01 11:02:08,235:INFO:Initializing Extreme Gradient Boosting
2025-07-01 11:02:08,236:INFO:Total runtime is 0.2949787457784016 minutes
2025-07-01 11:02:08,239:INFO:SubProcess create_model() called ==================================
2025-07-01 11:02:08,239:INFO:Initializing create_model()
2025-07-01 11:02:08,239:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DFFCA0D0>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231E0050450>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 11:02:08,240:INFO:Checking exceptions
2025-07-01 11:02:08,240:INFO:Importing libraries
2025-07-01 11:02:08,240:INFO:Copying training dataset
2025-07-01 11:02:08,248:INFO:Defining folds
2025-07-01 11:02:08,248:INFO:Declaring metric variables
2025-07-01 11:02:08,253:INFO:Importing untrained model
2025-07-01 11:02:08,258:INFO:Extreme Gradient Boosting Imported successfully
2025-07-01 11:02:08,269:INFO:Starting cross validation
2025-07-01 11:02:08,270:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 11:02:08,655:INFO:Calculating mean and std
2025-07-01 11:02:08,656:INFO:Creating metrics dataframe
2025-07-01 11:02:08,658:INFO:Uploading results into container
2025-07-01 11:02:08,658:INFO:Uploading model into container now
2025-07-01 11:02:08,659:INFO:_master_model_container: 13
2025-07-01 11:02:08,659:INFO:_display_container: 2
2025-07-01 11:02:08,660:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-07-01 11:02:08,661:INFO:create_model() successfully completed......................................
2025-07-01 11:02:08,850:INFO:SubProcess create_model() end ==================================
2025-07-01 11:02:08,851:INFO:Creating metrics dataframe
2025-07-01 11:02:08,860:INFO:Initializing Light Gradient Boosting Machine
2025-07-01 11:02:08,860:INFO:Total runtime is 0.3053757945696512 minutes
2025-07-01 11:02:08,865:INFO:SubProcess create_model() called ==================================
2025-07-01 11:02:08,867:INFO:Initializing create_model()
2025-07-01 11:02:08,867:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DFFCA0D0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231E0050450>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 11:02:08,867:INFO:Checking exceptions
2025-07-01 11:02:08,867:INFO:Importing libraries
2025-07-01 11:02:08,867:INFO:Copying training dataset
2025-07-01 11:02:08,872:INFO:Defining folds
2025-07-01 11:02:08,873:INFO:Declaring metric variables
2025-07-01 11:02:08,876:INFO:Importing untrained model
2025-07-01 11:02:08,883:INFO:Light Gradient Boosting Machine Imported successfully
2025-07-01 11:02:08,890:INFO:Starting cross validation
2025-07-01 11:02:08,890:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 11:02:09,723:INFO:Calculating mean and std
2025-07-01 11:02:09,725:INFO:Creating metrics dataframe
2025-07-01 11:02:09,727:INFO:Uploading results into container
2025-07-01 11:02:09,728:INFO:Uploading model into container now
2025-07-01 11:02:09,729:INFO:_master_model_container: 14
2025-07-01 11:02:09,729:INFO:_display_container: 2
2025-07-01 11:02:09,730:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2643, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-07-01 11:02:09,730:INFO:create_model() successfully completed......................................
2025-07-01 11:02:09,951:INFO:SubProcess create_model() end ==================================
2025-07-01 11:02:09,951:INFO:Creating metrics dataframe
2025-07-01 11:02:09,969:INFO:Initializing Dummy Classifier
2025-07-01 11:02:09,969:INFO:Total runtime is 0.3238602598508198 minutes
2025-07-01 11:02:09,974:INFO:SubProcess create_model() called ==================================
2025-07-01 11:02:09,975:INFO:Initializing create_model()
2025-07-01 11:02:09,975:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DFFCA0D0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231E0050450>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 11:02:09,975:INFO:Checking exceptions
2025-07-01 11:02:09,975:INFO:Importing libraries
2025-07-01 11:02:09,975:INFO:Copying training dataset
2025-07-01 11:02:09,982:INFO:Defining folds
2025-07-01 11:02:09,982:INFO:Declaring metric variables
2025-07-01 11:02:09,987:INFO:Importing untrained model
2025-07-01 11:02:09,992:INFO:Dummy Classifier Imported successfully
2025-07-01 11:02:10,001:INFO:Starting cross validation
2025-07-01 11:02:10,003:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 11:02:10,091:INFO:Calculating mean and std
2025-07-01 11:02:10,092:INFO:Creating metrics dataframe
2025-07-01 11:02:10,093:INFO:Uploading results into container
2025-07-01 11:02:10,094:INFO:Uploading model into container now
2025-07-01 11:02:10,095:INFO:_master_model_container: 15
2025-07-01 11:02:10,095:INFO:_display_container: 2
2025-07-01 11:02:10,095:INFO:DummyClassifier(constant=None, random_state=2643, strategy='prior')
2025-07-01 11:02:10,095:INFO:create_model() successfully completed......................................
2025-07-01 11:02:10,273:INFO:SubProcess create_model() end ==================================
2025-07-01 11:02:10,273:INFO:Creating metrics dataframe
2025-07-01 11:02:10,287:WARNING:d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-07-01 11:02:10,301:INFO:Initializing create_model()
2025-07-01 11:02:10,302:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DFFCA0D0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2643, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 11:02:10,302:INFO:Checking exceptions
2025-07-01 11:02:10,305:INFO:Importing libraries
2025-07-01 11:02:10,305:INFO:Copying training dataset
2025-07-01 11:02:10,309:INFO:Defining folds
2025-07-01 11:02:10,309:INFO:Declaring metric variables
2025-07-01 11:02:10,309:INFO:Importing untrained model
2025-07-01 11:02:10,309:INFO:Declaring custom model
2025-07-01 11:02:10,310:INFO:Light Gradient Boosting Machine Imported successfully
2025-07-01 11:02:10,311:INFO:Cross validation set to False
2025-07-01 11:02:10,311:INFO:Fitting Model
2025-07-01 11:02:10,323:INFO:[LightGBM] [Info] Number of positive: 368, number of negative: 332
2025-07-01 11:02:10,323:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000280 seconds.
2025-07-01 11:02:10,323:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-07-01 11:02:10,323:INFO:[LightGBM] [Info] Total Bins 1582
2025-07-01 11:02:10,324:INFO:[LightGBM] [Info] Number of data points in the train set: 700, number of used features: 19
2025-07-01 11:02:10,324:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.525714 -> initscore=0.102948
2025-07-01 11:02:10,324:INFO:[LightGBM] [Info] Start training from score 0.102948
2025-07-01 11:02:10,325:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,326:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,326:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,327:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,328:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,329:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,330:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,330:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,331:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,331:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,332:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,332:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,333:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,334:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,334:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,335:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,335:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,336:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,336:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,337:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,337:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,338:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,338:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,339:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,339:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,340:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,340:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,341:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,341:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,342:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,342:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,343:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,343:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,344:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,345:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,346:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,346:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,347:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,347:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,347:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,349:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,349:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,349:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,350:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,350:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,351:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,351:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,351:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,352:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,352:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,353:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,353:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,353:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,354:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,354:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,354:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,355:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,355:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,356:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,356:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,356:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,357:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,357:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,358:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,358:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,358:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,359:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,359:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,359:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,360:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,360:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,361:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,362:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,362:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,363:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,363:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,365:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,365:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,365:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,366:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,366:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,367:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,367:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,367:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,368:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,368:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,368:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,369:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,369:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,370:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,370:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,370:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,371:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,371:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,371:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-01 11:02:10,378:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2643, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-07-01 11:02:10,378:INFO:create_model() successfully completed......................................
2025-07-01 11:02:10,632:INFO:_master_model_container: 15
2025-07-01 11:02:10,632:INFO:_display_container: 2
2025-07-01 11:02:10,633:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2643, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-07-01 11:02:10,633:INFO:compare_models() successfully completed......................................
2025-07-01 11:47:11,402:INFO:PyCaret ClassificationExperiment
2025-07-01 11:47:11,402:INFO:Logging name: clf-default-name
2025-07-01 11:47:11,402:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-07-01 11:47:11,402:INFO:version 3.3.2
2025-07-01 11:47:11,403:INFO:Initializing setup()
2025-07-01 11:47:11,403:INFO:self.USI: bb3a
2025-07-01 11:47:11,403:INFO:self._variable_keys: {'fix_imbalance', 'data', 'is_multiclass', 'y_test', 'X_train', 'log_plots_param', 'X', 'X_test', 'logging_param', 'n_jobs_param', 'gpu_param', 'idx', 'html_param', 'fold_generator', '_ml_usecase', 'exp_id', 'USI', '_available_plots', 'gpu_n_jobs_param', 'pipeline', 'y_train', 'fold_groups_param', 'y', 'fold_shuffle_param', 'target_param', 'memory', 'seed', 'exp_name_log'}
2025-07-01 11:47:11,403:INFO:Checking environment
2025-07-01 11:47:11,403:INFO:python_version: 3.11.13
2025-07-01 11:47:11,403:INFO:python_build: ('main', 'Jun  5 2025 13:03:15')
2025-07-01 11:47:11,404:INFO:machine: AMD64
2025-07-01 11:47:11,404:INFO:platform: Windows-10-10.0.22631-SP0
2025-07-01 11:47:11,409:INFO:Memory: svmem(total=12674457600, available=3223113728, percent=74.6, used=9451343872, free=3223113728)
2025-07-01 11:47:11,409:INFO:Physical Core: 4
2025-07-01 11:47:11,410:INFO:Logical Core: 8
2025-07-01 11:47:11,410:INFO:Checking libraries
2025-07-01 11:47:11,410:INFO:System:
2025-07-01 11:47:11,410:INFO:    python: 3.11.13 | packaged by Anaconda, Inc. | (main, Jun  5 2025, 13:03:15) [MSC v.1929 64 bit (AMD64)]
2025-07-01 11:47:11,410:INFO:executable: d:\ML_notes\.conda\python.exe
2025-07-01 11:47:11,410:INFO:   machine: Windows-10-10.0.22631-SP0
2025-07-01 11:47:11,410:INFO:PyCaret required dependencies:
2025-07-01 11:47:11,410:INFO:                 pip: 25.1
2025-07-01 11:47:11,410:INFO:          setuptools: 78.1.1
2025-07-01 11:47:11,410:INFO:             pycaret: 3.3.2
2025-07-01 11:47:11,410:INFO:             IPython: 9.3.0
2025-07-01 11:47:11,411:INFO:          ipywidgets: 8.1.7
2025-07-01 11:47:11,411:INFO:                tqdm: 4.67.1
2025-07-01 11:47:11,411:INFO:               numpy: 1.26.4
2025-07-01 11:47:11,411:INFO:              pandas: 2.1.4
2025-07-01 11:47:11,411:INFO:              jinja2: 3.1.6
2025-07-01 11:47:11,411:INFO:               scipy: 1.11.4
2025-07-01 11:47:11,411:INFO:              joblib: 1.3.2
2025-07-01 11:47:11,411:INFO:             sklearn: 1.4.2
2025-07-01 11:47:11,411:INFO:                pyod: 2.0.5
2025-07-01 11:47:11,411:INFO:            imblearn: 0.13.0
2025-07-01 11:47:11,411:INFO:   category_encoders: 2.7.0
2025-07-01 11:47:11,411:INFO:            lightgbm: 4.6.0
2025-07-01 11:47:11,411:INFO:               numba: 0.61.0
2025-07-01 11:47:11,411:INFO:            requests: 2.32.4
2025-07-01 11:47:11,411:INFO:          matplotlib: 3.7.5
2025-07-01 11:47:11,411:INFO:          scikitplot: 0.3.7
2025-07-01 11:47:11,411:INFO:         yellowbrick: 1.5
2025-07-01 11:47:11,411:INFO:              plotly: 5.24.1
2025-07-01 11:47:11,411:INFO:    plotly-resampler: Not installed
2025-07-01 11:47:11,411:INFO:             kaleido: 1.0.0
2025-07-01 11:47:11,411:INFO:           schemdraw: 0.15
2025-07-01 11:47:11,411:INFO:         statsmodels: 0.14.4
2025-07-01 11:47:11,411:INFO:              sktime: 0.26.0
2025-07-01 11:47:11,412:INFO:               tbats: 1.1.3
2025-07-01 11:47:11,412:INFO:            pmdarima: 2.0.4
2025-07-01 11:47:11,412:INFO:              psutil: 7.0.0
2025-07-01 11:47:11,412:INFO:          markupsafe: 3.0.2
2025-07-01 11:47:11,412:INFO:             pickle5: Not installed
2025-07-01 11:47:11,412:INFO:         cloudpickle: 3.1.1
2025-07-01 11:47:11,412:INFO:         deprecation: 2.1.0
2025-07-01 11:47:11,412:INFO:              xxhash: 3.5.0
2025-07-01 11:47:11,412:INFO:           wurlitzer: Not installed
2025-07-01 11:47:11,412:INFO:PyCaret optional dependencies:
2025-07-01 11:47:11,412:INFO:                shap: Not installed
2025-07-01 11:47:11,412:INFO:           interpret: Not installed
2025-07-01 11:47:11,412:INFO:                umap: Not installed
2025-07-01 11:47:11,412:INFO:     ydata_profiling: 4.16.1
2025-07-01 11:47:11,412:INFO:  explainerdashboard: Not installed
2025-07-01 11:47:11,412:INFO:             autoviz: Not installed
2025-07-01 11:47:11,412:INFO:           fairlearn: Not installed
2025-07-01 11:47:11,412:INFO:          deepchecks: Not installed
2025-07-01 11:47:11,412:INFO:             xgboost: 3.0.2
2025-07-01 11:47:11,412:INFO:            catboost: Not installed
2025-07-01 11:47:11,412:INFO:              kmodes: Not installed
2025-07-01 11:47:11,412:INFO:             mlxtend: Not installed
2025-07-01 11:47:11,412:INFO:       statsforecast: Not installed
2025-07-01 11:47:11,412:INFO:        tune_sklearn: Not installed
2025-07-01 11:47:11,412:INFO:                 ray: Not installed
2025-07-01 11:47:11,412:INFO:            hyperopt: Not installed
2025-07-01 11:47:11,412:INFO:              optuna: Not installed
2025-07-01 11:47:11,412:INFO:               skopt: Not installed
2025-07-01 11:47:11,413:INFO:              mlflow: Not installed
2025-07-01 11:47:11,413:INFO:              gradio: Not installed
2025-07-01 11:47:11,413:INFO:             fastapi: Not installed
2025-07-01 11:47:11,413:INFO:             uvicorn: Not installed
2025-07-01 11:47:11,413:INFO:              m2cgen: Not installed
2025-07-01 11:47:11,413:INFO:           evidently: Not installed
2025-07-01 11:47:11,413:INFO:               fugue: Not installed
2025-07-01 11:47:11,413:INFO:           streamlit: Not installed
2025-07-01 11:47:11,413:INFO:             prophet: Not installed
2025-07-01 11:47:11,413:INFO:None
2025-07-01 11:47:11,413:INFO:Set up data.
2025-07-01 11:47:11,422:INFO:Set up folding strategy.
2025-07-01 11:47:11,422:INFO:Set up train/test split.
2025-07-01 11:47:11,427:INFO:Set up index.
2025-07-01 11:47:11,428:INFO:Assigning column types.
2025-07-01 11:47:11,432:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-07-01 11:47:11,477:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-01 11:47:11,478:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-01 11:47:11,511:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 11:47:11,513:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 11:47:11,562:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-01 11:47:11,563:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-01 11:47:11,592:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 11:47:11,594:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 11:47:11,595:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-07-01 11:47:11,657:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-01 11:47:11,689:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 11:47:11,692:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 11:47:11,749:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-01 11:47:11,782:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 11:47:11,786:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 11:47:11,787:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-07-01 11:47:11,871:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 11:47:11,874:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 11:47:11,962:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 11:47:11,964:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 11:47:11,967:INFO:Preparing preprocessing pipeline...
2025-07-01 11:47:11,969:INFO:Set up simple imputation.
2025-07-01 11:47:12,000:INFO:Finished creating preprocessing pipeline.
2025-07-01 11:47:12,005:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\YOGA\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'Annual_Income',
                                             'Total_Spend', 'Years_as_Customer',
                                             'Num_of_Purchases',
                                             'Average_Transaction_Amount',
                                             'Num_of_Returns',
                                             'Num_of_Support_Contacts',
                                             'Satisfaction_Score',
                                             'Last_Purchase_Days_Ago',
                                             'Gender_Fem...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-07-01 11:47:12,005:INFO:Creating final display dataframe.
2025-07-01 11:47:12,141:INFO:Setup _display_container:                     Description              Value
0                    Session id               1415
1                        Target  Target_Churn_True
2                   Target type             Binary
3           Original data shape         (1000, 20)
4        Transformed data shape         (1000, 20)
5   Transformed train set shape          (700, 20)
6    Transformed test set shape          (300, 20)
7              Numeric features                 19
8                    Preprocess               True
9               Imputation type             simple
10           Numeric imputation               mean
11       Categorical imputation               mode
12               Fold Generator    StratifiedKFold
13                  Fold Number                 10
14                     CPU Jobs                 -1
15                      Use GPU              False
16               Log Experiment              False
17              Experiment Name   clf-default-name
18                          USI               bb3a
2025-07-01 11:47:12,261:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 11:47:12,263:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 11:47:12,374:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 11:47:12,379:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 11:47:12,381:INFO:setup() successfully completed in 0.98s...............
2025-07-01 11:47:12,385:INFO:Initializing compare_models()
2025-07-01 11:47:12,385:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DFF24A90>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000231DFF24A90>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2025-07-01 11:47:12,386:INFO:Checking exceptions
2025-07-01 11:47:12,391:INFO:Preparing display monitor
2025-07-01 11:47:12,424:INFO:Initializing Logistic Regression
2025-07-01 11:47:12,425:INFO:Total runtime is 0.0 minutes
2025-07-01 11:47:12,434:INFO:SubProcess create_model() called ==================================
2025-07-01 11:47:12,435:INFO:Initializing create_model()
2025-07-01 11:47:12,436:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DFF24A90>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231E0007390>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 11:47:12,436:INFO:Checking exceptions
2025-07-01 11:47:12,436:INFO:Importing libraries
2025-07-01 11:47:12,436:INFO:Copying training dataset
2025-07-01 11:47:12,452:INFO:Defining folds
2025-07-01 11:47:12,452:INFO:Declaring metric variables
2025-07-01 11:47:12,460:INFO:Importing untrained model
2025-07-01 11:47:12,467:INFO:Logistic Regression Imported successfully
2025-07-01 11:47:12,491:INFO:Starting cross validation
2025-07-01 11:47:12,492:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 11:47:18,397:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-07-01 11:47:18,408:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-07-01 11:47:18,451:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-07-01 11:47:18,678:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-07-01 11:47:18,685:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-07-01 11:47:18,694:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-07-01 11:47:18,784:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-07-01 11:47:18,785:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-07-01 11:47:18,842:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-07-01 11:47:19,056:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-07-01 11:47:19,095:INFO:Calculating mean and std
2025-07-01 11:47:19,097:INFO:Creating metrics dataframe
2025-07-01 11:47:19,103:INFO:Uploading results into container
2025-07-01 11:47:19,104:INFO:Uploading model into container now
2025-07-01 11:47:19,104:INFO:_master_model_container: 1
2025-07-01 11:47:19,104:INFO:_display_container: 2
2025-07-01 11:47:19,105:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1415, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-07-01 11:47:19,105:INFO:create_model() successfully completed......................................
2025-07-01 11:47:19,390:INFO:SubProcess create_model() end ==================================
2025-07-01 11:47:19,391:INFO:Creating metrics dataframe
2025-07-01 11:47:19,396:INFO:Initializing K Neighbors Classifier
2025-07-01 11:47:19,397:INFO:Total runtime is 0.11621218125025432 minutes
2025-07-01 11:47:19,405:INFO:SubProcess create_model() called ==================================
2025-07-01 11:47:19,407:INFO:Initializing create_model()
2025-07-01 11:47:19,407:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DFF24A90>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231E0007390>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 11:47:19,408:INFO:Checking exceptions
2025-07-01 11:47:19,408:INFO:Importing libraries
2025-07-01 11:47:19,408:INFO:Copying training dataset
2025-07-01 11:47:19,415:INFO:Defining folds
2025-07-01 11:47:19,416:INFO:Declaring metric variables
2025-07-01 11:47:19,425:INFO:Importing untrained model
2025-07-01 11:47:19,432:INFO:K Neighbors Classifier Imported successfully
2025-07-01 11:47:19,448:INFO:Starting cross validation
2025-07-01 11:47:19,451:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 11:47:19,725:INFO:Calculating mean and std
2025-07-01 11:47:19,727:INFO:Creating metrics dataframe
2025-07-01 11:47:19,728:INFO:Uploading results into container
2025-07-01 11:47:19,729:INFO:Uploading model into container now
2025-07-01 11:47:19,729:INFO:_master_model_container: 2
2025-07-01 11:47:19,729:INFO:_display_container: 2
2025-07-01 11:47:19,730:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-07-01 11:47:19,730:INFO:create_model() successfully completed......................................
2025-07-01 11:47:20,021:INFO:SubProcess create_model() end ==================================
2025-07-01 11:47:20,021:INFO:Creating metrics dataframe
2025-07-01 11:47:20,029:INFO:Initializing Naive Bayes
2025-07-01 11:47:20,030:INFO:Total runtime is 0.12675838867823283 minutes
2025-07-01 11:47:20,036:INFO:SubProcess create_model() called ==================================
2025-07-01 11:47:20,036:INFO:Initializing create_model()
2025-07-01 11:47:20,036:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DFF24A90>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231E0007390>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 11:47:20,037:INFO:Checking exceptions
2025-07-01 11:47:20,037:INFO:Importing libraries
2025-07-01 11:47:20,037:INFO:Copying training dataset
2025-07-01 11:47:20,046:INFO:Defining folds
2025-07-01 11:47:20,046:INFO:Declaring metric variables
2025-07-01 11:47:20,054:INFO:Importing untrained model
2025-07-01 11:47:20,061:INFO:Naive Bayes Imported successfully
2025-07-01 11:47:20,076:INFO:Starting cross validation
2025-07-01 11:47:20,077:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 11:47:20,174:INFO:Calculating mean and std
2025-07-01 11:47:20,175:INFO:Creating metrics dataframe
2025-07-01 11:47:20,179:INFO:Uploading results into container
2025-07-01 11:47:20,179:INFO:Uploading model into container now
2025-07-01 11:47:20,179:INFO:_master_model_container: 3
2025-07-01 11:47:20,179:INFO:_display_container: 2
2025-07-01 11:47:20,180:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-07-01 11:47:20,180:INFO:create_model() successfully completed......................................
2025-07-01 11:47:20,439:INFO:SubProcess create_model() end ==================================
2025-07-01 11:47:20,439:INFO:Creating metrics dataframe
2025-07-01 11:47:20,446:INFO:Initializing Decision Tree Classifier
2025-07-01 11:47:20,446:INFO:Total runtime is 0.13369087378184 minutes
2025-07-01 11:47:20,453:INFO:SubProcess create_model() called ==================================
2025-07-01 11:47:20,454:INFO:Initializing create_model()
2025-07-01 11:47:20,454:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DFF24A90>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231E0007390>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 11:47:20,454:INFO:Checking exceptions
2025-07-01 11:47:20,454:INFO:Importing libraries
2025-07-01 11:47:20,454:INFO:Copying training dataset
2025-07-01 11:47:20,460:INFO:Defining folds
2025-07-01 11:47:20,460:INFO:Declaring metric variables
2025-07-01 11:47:20,466:INFO:Importing untrained model
2025-07-01 11:47:20,473:INFO:Decision Tree Classifier Imported successfully
2025-07-01 11:47:20,483:INFO:Starting cross validation
2025-07-01 11:47:20,484:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 11:47:20,648:INFO:Calculating mean and std
2025-07-01 11:47:20,653:INFO:Creating metrics dataframe
2025-07-01 11:47:20,656:INFO:Uploading results into container
2025-07-01 11:47:20,656:INFO:Uploading model into container now
2025-07-01 11:47:20,657:INFO:_master_model_container: 4
2025-07-01 11:47:20,657:INFO:_display_container: 2
2025-07-01 11:47:20,657:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1415, splitter='best')
2025-07-01 11:47:20,657:INFO:create_model() successfully completed......................................
2025-07-01 11:47:20,856:INFO:SubProcess create_model() end ==================================
2025-07-01 11:47:20,856:INFO:Creating metrics dataframe
2025-07-01 11:47:20,863:INFO:Initializing SVM - Linear Kernel
2025-07-01 11:47:20,864:INFO:Total runtime is 0.14066253900527953 minutes
2025-07-01 11:47:20,868:INFO:SubProcess create_model() called ==================================
2025-07-01 11:47:20,869:INFO:Initializing create_model()
2025-07-01 11:47:20,869:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DFF24A90>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231E0007390>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 11:47:20,869:INFO:Checking exceptions
2025-07-01 11:47:20,869:INFO:Importing libraries
2025-07-01 11:47:20,869:INFO:Copying training dataset
2025-07-01 11:47:20,875:INFO:Defining folds
2025-07-01 11:47:20,876:INFO:Declaring metric variables
2025-07-01 11:47:20,881:INFO:Importing untrained model
2025-07-01 11:47:20,889:INFO:SVM - Linear Kernel Imported successfully
2025-07-01 11:47:20,898:INFO:Starting cross validation
2025-07-01 11:47:20,900:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 11:47:20,958:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-01 11:47:20,994:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-01 11:47:20,997:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-01 11:47:21,010:INFO:Calculating mean and std
2025-07-01 11:47:21,011:INFO:Creating metrics dataframe
2025-07-01 11:47:21,013:INFO:Uploading results into container
2025-07-01 11:47:21,014:INFO:Uploading model into container now
2025-07-01 11:47:21,015:INFO:_master_model_container: 5
2025-07-01 11:47:21,016:INFO:_display_container: 2
2025-07-01 11:47:21,017:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=1415, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-07-01 11:47:21,017:INFO:create_model() successfully completed......................................
2025-07-01 11:47:21,207:INFO:SubProcess create_model() end ==================================
2025-07-01 11:47:21,207:INFO:Creating metrics dataframe
2025-07-01 11:47:21,216:INFO:Initializing Ridge Classifier
2025-07-01 11:47:21,216:INFO:Total runtime is 0.14653422435124713 minutes
2025-07-01 11:47:21,221:INFO:SubProcess create_model() called ==================================
2025-07-01 11:47:21,221:INFO:Initializing create_model()
2025-07-01 11:47:21,221:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DFF24A90>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231E0007390>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 11:47:21,221:INFO:Checking exceptions
2025-07-01 11:47:21,221:INFO:Importing libraries
2025-07-01 11:47:21,222:INFO:Copying training dataset
2025-07-01 11:47:21,227:INFO:Defining folds
2025-07-01 11:47:21,227:INFO:Declaring metric variables
2025-07-01 11:47:21,234:INFO:Importing untrained model
2025-07-01 11:47:21,240:INFO:Ridge Classifier Imported successfully
2025-07-01 11:47:21,249:INFO:Starting cross validation
2025-07-01 11:47:21,251:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 11:47:21,354:INFO:Calculating mean and std
2025-07-01 11:47:21,355:INFO:Creating metrics dataframe
2025-07-01 11:47:21,357:INFO:Uploading results into container
2025-07-01 11:47:21,357:INFO:Uploading model into container now
2025-07-01 11:47:21,358:INFO:_master_model_container: 6
2025-07-01 11:47:21,358:INFO:_display_container: 2
2025-07-01 11:47:21,358:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=1415, solver='auto',
                tol=0.0001)
2025-07-01 11:47:21,358:INFO:create_model() successfully completed......................................
2025-07-01 11:47:21,543:INFO:SubProcess create_model() end ==================================
2025-07-01 11:47:21,543:INFO:Creating metrics dataframe
2025-07-01 11:47:21,557:INFO:Initializing Random Forest Classifier
2025-07-01 11:47:21,558:INFO:Total runtime is 0.15221470197041828 minutes
2025-07-01 11:47:21,562:INFO:SubProcess create_model() called ==================================
2025-07-01 11:47:21,562:INFO:Initializing create_model()
2025-07-01 11:47:21,562:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DFF24A90>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231E0007390>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 11:47:21,562:INFO:Checking exceptions
2025-07-01 11:47:21,562:INFO:Importing libraries
2025-07-01 11:47:21,563:INFO:Copying training dataset
2025-07-01 11:47:21,571:INFO:Defining folds
2025-07-01 11:47:21,571:INFO:Declaring metric variables
2025-07-01 11:47:21,575:INFO:Importing untrained model
2025-07-01 11:47:21,581:INFO:Random Forest Classifier Imported successfully
2025-07-01 11:47:21,592:INFO:Starting cross validation
2025-07-01 11:47:21,594:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 11:47:22,374:INFO:Calculating mean and std
2025-07-01 11:47:22,376:INFO:Creating metrics dataframe
2025-07-01 11:47:22,377:INFO:Uploading results into container
2025-07-01 11:47:22,378:INFO:Uploading model into container now
2025-07-01 11:47:22,379:INFO:_master_model_container: 7
2025-07-01 11:47:22,379:INFO:_display_container: 2
2025-07-01 11:47:22,382:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=1415, verbose=0,
                       warm_start=False)
2025-07-01 11:47:22,382:INFO:create_model() successfully completed......................................
2025-07-01 11:47:22,572:INFO:SubProcess create_model() end ==================================
2025-07-01 11:47:22,573:INFO:Creating metrics dataframe
2025-07-01 11:47:22,584:INFO:Initializing Quadratic Discriminant Analysis
2025-07-01 11:47:22,584:INFO:Total runtime is 0.16933755477269488 minutes
2025-07-01 11:47:22,587:INFO:SubProcess create_model() called ==================================
2025-07-01 11:47:22,588:INFO:Initializing create_model()
2025-07-01 11:47:22,588:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DFF24A90>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231E0007390>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 11:47:22,588:INFO:Checking exceptions
2025-07-01 11:47:22,588:INFO:Importing libraries
2025-07-01 11:47:22,588:INFO:Copying training dataset
2025-07-01 11:47:22,594:INFO:Defining folds
2025-07-01 11:47:22,595:INFO:Declaring metric variables
2025-07-01 11:47:22,601:INFO:Importing untrained model
2025-07-01 11:47:22,605:INFO:Quadratic Discriminant Analysis Imported successfully
2025-07-01 11:47:22,613:INFO:Starting cross validation
2025-07-01 11:47:22,615:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 11:47:22,651:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 11:47:22,654:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 11:47:22,657:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 11:47:22,657:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 11:47:22,660:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 11:47:22,664:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 11:47:22,668:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 11:47:22,669:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 11:47:22,678:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-01 11:47:22,699:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 11:47:22,701:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 11:47:22,721:INFO:Calculating mean and std
2025-07-01 11:47:22,722:INFO:Creating metrics dataframe
2025-07-01 11:47:22,726:INFO:Uploading results into container
2025-07-01 11:47:22,726:INFO:Uploading model into container now
2025-07-01 11:47:22,727:INFO:_master_model_container: 8
2025-07-01 11:47:22,727:INFO:_display_container: 2
2025-07-01 11:47:22,727:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-07-01 11:47:22,728:INFO:create_model() successfully completed......................................
2025-07-01 11:47:22,922:INFO:SubProcess create_model() end ==================================
2025-07-01 11:47:22,922:INFO:Creating metrics dataframe
2025-07-01 11:47:22,931:INFO:Initializing Ada Boost Classifier
2025-07-01 11:47:22,932:INFO:Total runtime is 0.17511111497879026 minutes
2025-07-01 11:47:22,937:INFO:SubProcess create_model() called ==================================
2025-07-01 11:47:22,938:INFO:Initializing create_model()
2025-07-01 11:47:22,938:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DFF24A90>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231E0007390>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 11:47:22,938:INFO:Checking exceptions
2025-07-01 11:47:22,938:INFO:Importing libraries
2025-07-01 11:47:22,938:INFO:Copying training dataset
2025-07-01 11:47:22,943:INFO:Defining folds
2025-07-01 11:47:22,944:INFO:Declaring metric variables
2025-07-01 11:47:22,946:INFO:Importing untrained model
2025-07-01 11:47:22,954:INFO:Ada Boost Classifier Imported successfully
2025-07-01 11:47:22,960:INFO:Starting cross validation
2025-07-01 11:47:22,961:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 11:47:22,992:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 11:47:22,996:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 11:47:23,003:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 11:47:23,005:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 11:47:23,006:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 11:47:23,008:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 11:47:23,009:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 11:47:23,023:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 11:47:23,218:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 11:47:23,224:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 11:47:23,400:INFO:Calculating mean and std
2025-07-01 11:47:23,401:INFO:Creating metrics dataframe
2025-07-01 11:47:23,404:INFO:Uploading results into container
2025-07-01 11:47:23,405:INFO:Uploading model into container now
2025-07-01 11:47:23,405:INFO:_master_model_container: 9
2025-07-01 11:47:23,405:INFO:_display_container: 2
2025-07-01 11:47:23,406:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=1415)
2025-07-01 11:47:23,407:INFO:create_model() successfully completed......................................
2025-07-01 11:47:23,641:INFO:SubProcess create_model() end ==================================
2025-07-01 11:47:23,641:INFO:Creating metrics dataframe
2025-07-01 11:47:23,654:INFO:Initializing Gradient Boosting Classifier
2025-07-01 11:47:23,655:INFO:Total runtime is 0.1871757348378499 minutes
2025-07-01 11:47:23,659:INFO:SubProcess create_model() called ==================================
2025-07-01 11:47:23,659:INFO:Initializing create_model()
2025-07-01 11:47:23,659:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DFF24A90>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231E0007390>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 11:47:23,659:INFO:Checking exceptions
2025-07-01 11:47:23,659:INFO:Importing libraries
2025-07-01 11:47:23,659:INFO:Copying training dataset
2025-07-01 11:47:23,669:INFO:Defining folds
2025-07-01 11:47:23,669:INFO:Declaring metric variables
2025-07-01 11:47:23,674:INFO:Importing untrained model
2025-07-01 11:47:23,680:INFO:Gradient Boosting Classifier Imported successfully
2025-07-01 11:47:23,694:INFO:Starting cross validation
2025-07-01 11:47:23,696:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 11:47:24,551:INFO:Calculating mean and std
2025-07-01 11:47:24,554:INFO:Creating metrics dataframe
2025-07-01 11:47:24,557:INFO:Uploading results into container
2025-07-01 11:47:24,558:INFO:Uploading model into container now
2025-07-01 11:47:24,558:INFO:_master_model_container: 10
2025-07-01 11:47:24,559:INFO:_display_container: 2
2025-07-01 11:47:24,559:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=1415, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-07-01 11:47:24,560:INFO:create_model() successfully completed......................................
2025-07-01 11:47:24,861:INFO:SubProcess create_model() end ==================================
2025-07-01 11:47:24,861:INFO:Creating metrics dataframe
2025-07-01 11:47:24,879:INFO:Initializing Linear Discriminant Analysis
2025-07-01 11:47:24,879:INFO:Total runtime is 0.2075826565424601 minutes
2025-07-01 11:47:24,889:INFO:SubProcess create_model() called ==================================
2025-07-01 11:47:24,889:INFO:Initializing create_model()
2025-07-01 11:47:24,889:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DFF24A90>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231E0007390>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 11:47:24,890:INFO:Checking exceptions
2025-07-01 11:47:24,890:INFO:Importing libraries
2025-07-01 11:47:24,890:INFO:Copying training dataset
2025-07-01 11:47:24,905:INFO:Defining folds
2025-07-01 11:47:24,905:INFO:Declaring metric variables
2025-07-01 11:47:24,910:INFO:Importing untrained model
2025-07-01 11:47:24,918:INFO:Linear Discriminant Analysis Imported successfully
2025-07-01 11:47:24,932:INFO:Starting cross validation
2025-07-01 11:47:24,933:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 11:47:25,082:INFO:Calculating mean and std
2025-07-01 11:47:25,087:INFO:Creating metrics dataframe
2025-07-01 11:47:25,089:INFO:Uploading results into container
2025-07-01 11:47:25,089:INFO:Uploading model into container now
2025-07-01 11:47:25,090:INFO:_master_model_container: 11
2025-07-01 11:47:25,090:INFO:_display_container: 2
2025-07-01 11:47:25,090:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-07-01 11:47:25,090:INFO:create_model() successfully completed......................................
2025-07-01 11:47:25,320:INFO:SubProcess create_model() end ==================================
2025-07-01 11:47:25,320:INFO:Creating metrics dataframe
2025-07-01 11:47:25,331:INFO:Initializing Extra Trees Classifier
2025-07-01 11:47:25,332:INFO:Total runtime is 0.21513669490814208 minutes
2025-07-01 11:47:25,339:INFO:SubProcess create_model() called ==================================
2025-07-01 11:47:25,339:INFO:Initializing create_model()
2025-07-01 11:47:25,340:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DFF24A90>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231E0007390>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 11:47:25,340:INFO:Checking exceptions
2025-07-01 11:47:25,340:INFO:Importing libraries
2025-07-01 11:47:25,340:INFO:Copying training dataset
2025-07-01 11:47:25,349:INFO:Defining folds
2025-07-01 11:47:25,350:INFO:Declaring metric variables
2025-07-01 11:47:25,355:INFO:Importing untrained model
2025-07-01 11:47:25,360:INFO:Extra Trees Classifier Imported successfully
2025-07-01 11:47:25,370:INFO:Starting cross validation
2025-07-01 11:47:25,371:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 11:47:26,202:INFO:Calculating mean and std
2025-07-01 11:47:26,205:INFO:Creating metrics dataframe
2025-07-01 11:47:26,207:INFO:Uploading results into container
2025-07-01 11:47:26,207:INFO:Uploading model into container now
2025-07-01 11:47:26,208:INFO:_master_model_container: 12
2025-07-01 11:47:26,208:INFO:_display_container: 2
2025-07-01 11:47:26,209:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=1415, verbose=0,
                     warm_start=False)
2025-07-01 11:47:26,209:INFO:create_model() successfully completed......................................
2025-07-01 11:47:26,457:INFO:SubProcess create_model() end ==================================
2025-07-01 11:47:26,458:INFO:Creating metrics dataframe
2025-07-01 11:47:26,472:INFO:Initializing Extreme Gradient Boosting
2025-07-01 11:47:26,472:INFO:Total runtime is 0.23413005272547402 minutes
2025-07-01 11:47:26,478:INFO:SubProcess create_model() called ==================================
2025-07-01 11:47:26,478:INFO:Initializing create_model()
2025-07-01 11:47:26,478:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DFF24A90>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231E0007390>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 11:47:26,478:INFO:Checking exceptions
2025-07-01 11:47:26,478:INFO:Importing libraries
2025-07-01 11:47:26,478:INFO:Copying training dataset
2025-07-01 11:47:26,490:INFO:Defining folds
2025-07-01 11:47:26,490:INFO:Declaring metric variables
2025-07-01 11:47:26,496:INFO:Importing untrained model
2025-07-01 11:47:26,502:INFO:Extreme Gradient Boosting Imported successfully
2025-07-01 11:47:26,518:INFO:Starting cross validation
2025-07-01 11:47:26,519:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 11:47:26,965:INFO:Calculating mean and std
2025-07-01 11:47:26,968:INFO:Creating metrics dataframe
2025-07-01 11:47:26,971:INFO:Uploading results into container
2025-07-01 11:47:26,972:INFO:Uploading model into container now
2025-07-01 11:47:26,972:INFO:_master_model_container: 13
2025-07-01 11:47:26,973:INFO:_display_container: 2
2025-07-01 11:47:26,974:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-07-01 11:47:26,974:INFO:create_model() successfully completed......................................
2025-07-01 11:47:27,226:INFO:SubProcess create_model() end ==================================
2025-07-01 11:47:27,226:INFO:Creating metrics dataframe
2025-07-01 11:47:27,243:INFO:Initializing Light Gradient Boosting Machine
2025-07-01 11:47:27,243:INFO:Total runtime is 0.2469780405362447 minutes
2025-07-01 11:47:27,251:INFO:SubProcess create_model() called ==================================
2025-07-01 11:47:27,251:INFO:Initializing create_model()
2025-07-01 11:47:27,251:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DFF24A90>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231E0007390>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 11:47:27,251:INFO:Checking exceptions
2025-07-01 11:47:27,251:INFO:Importing libraries
2025-07-01 11:47:27,252:INFO:Copying training dataset
2025-07-01 11:47:27,261:INFO:Defining folds
2025-07-01 11:47:27,261:INFO:Declaring metric variables
2025-07-01 11:47:27,268:INFO:Importing untrained model
2025-07-01 11:47:27,274:INFO:Light Gradient Boosting Machine Imported successfully
2025-07-01 11:47:27,285:INFO:Starting cross validation
2025-07-01 11:47:27,288:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 11:47:28,744:INFO:Calculating mean and std
2025-07-01 11:47:28,747:INFO:Creating metrics dataframe
2025-07-01 11:47:28,752:INFO:Uploading results into container
2025-07-01 11:47:28,753:INFO:Uploading model into container now
2025-07-01 11:47:28,754:INFO:_master_model_container: 14
2025-07-01 11:47:28,754:INFO:_display_container: 2
2025-07-01 11:47:28,755:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=1415, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-07-01 11:47:28,755:INFO:create_model() successfully completed......................................
2025-07-01 11:47:28,976:INFO:SubProcess create_model() end ==================================
2025-07-01 11:47:28,976:INFO:Creating metrics dataframe
2025-07-01 11:47:28,999:INFO:Initializing Dummy Classifier
2025-07-01 11:47:29,000:INFO:Total runtime is 0.2762634396553039 minutes
2025-07-01 11:47:29,007:INFO:SubProcess create_model() called ==================================
2025-07-01 11:47:29,007:INFO:Initializing create_model()
2025-07-01 11:47:29,007:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DFF24A90>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231E0007390>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 11:47:29,008:INFO:Checking exceptions
2025-07-01 11:47:29,008:INFO:Importing libraries
2025-07-01 11:47:29,008:INFO:Copying training dataset
2025-07-01 11:47:29,024:INFO:Defining folds
2025-07-01 11:47:29,024:INFO:Declaring metric variables
2025-07-01 11:47:29,031:INFO:Importing untrained model
2025-07-01 11:47:29,039:INFO:Dummy Classifier Imported successfully
2025-07-01 11:47:29,050:INFO:Starting cross validation
2025-07-01 11:47:29,055:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 11:47:29,175:INFO:Calculating mean and std
2025-07-01 11:47:29,177:INFO:Creating metrics dataframe
2025-07-01 11:47:29,178:INFO:Uploading results into container
2025-07-01 11:47:29,179:INFO:Uploading model into container now
2025-07-01 11:47:29,180:INFO:_master_model_container: 15
2025-07-01 11:47:29,180:INFO:_display_container: 2
2025-07-01 11:47:29,180:INFO:DummyClassifier(constant=None, random_state=1415, strategy='prior')
2025-07-01 11:47:29,180:INFO:create_model() successfully completed......................................
2025-07-01 11:47:29,398:INFO:SubProcess create_model() end ==================================
2025-07-01 11:47:29,398:INFO:Creating metrics dataframe
2025-07-01 11:47:29,408:WARNING:d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-07-01 11:47:29,421:INFO:Initializing create_model()
2025-07-01 11:47:29,421:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DFF24A90>, estimator=DummyClassifier(constant=None, random_state=1415, strategy='prior'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 11:47:29,421:INFO:Checking exceptions
2025-07-01 11:47:29,423:INFO:Importing libraries
2025-07-01 11:47:29,423:INFO:Copying training dataset
2025-07-01 11:47:29,429:INFO:Defining folds
2025-07-01 11:47:29,429:INFO:Declaring metric variables
2025-07-01 11:47:29,429:INFO:Importing untrained model
2025-07-01 11:47:29,429:INFO:Declaring custom model
2025-07-01 11:47:29,430:INFO:Dummy Classifier Imported successfully
2025-07-01 11:47:29,431:INFO:Cross validation set to False
2025-07-01 11:47:29,431:INFO:Fitting Model
2025-07-01 11:47:29,439:INFO:DummyClassifier(constant=None, random_state=1415, strategy='prior')
2025-07-01 11:47:29,439:INFO:create_model() successfully completed......................................
2025-07-01 11:47:29,672:INFO:_master_model_container: 15
2025-07-01 11:47:29,673:INFO:_display_container: 2
2025-07-01 11:47:29,673:INFO:DummyClassifier(constant=None, random_state=1415, strategy='prior')
2025-07-01 11:47:29,673:INFO:compare_models() successfully completed......................................
2025-07-01 11:50:00,571:INFO:PyCaret ClassificationExperiment
2025-07-01 11:50:00,571:INFO:Logging name: clf-default-name
2025-07-01 11:50:00,571:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-07-01 11:50:00,571:INFO:version 3.3.2
2025-07-01 11:50:00,571:INFO:Initializing setup()
2025-07-01 11:50:00,571:INFO:self.USI: 8494
2025-07-01 11:50:00,571:INFO:self._variable_keys: {'fix_imbalance', 'data', 'is_multiclass', 'y_test', 'X_train', 'log_plots_param', 'X', 'X_test', 'logging_param', 'n_jobs_param', 'gpu_param', 'idx', 'html_param', 'fold_generator', '_ml_usecase', 'exp_id', 'USI', '_available_plots', 'gpu_n_jobs_param', 'pipeline', 'y_train', 'fold_groups_param', 'y', 'fold_shuffle_param', 'target_param', 'memory', 'seed', 'exp_name_log'}
2025-07-01 11:50:00,572:INFO:Checking environment
2025-07-01 11:50:00,572:INFO:python_version: 3.11.13
2025-07-01 11:50:00,572:INFO:python_build: ('main', 'Jun  5 2025 13:03:15')
2025-07-01 11:50:00,572:INFO:machine: AMD64
2025-07-01 11:50:00,572:INFO:platform: Windows-10-10.0.22631-SP0
2025-07-01 11:50:00,580:INFO:Memory: svmem(total=12674457600, available=2064097280, percent=83.7, used=10610360320, free=2064097280)
2025-07-01 11:50:00,580:INFO:Physical Core: 4
2025-07-01 11:50:00,580:INFO:Logical Core: 8
2025-07-01 11:50:00,580:INFO:Checking libraries
2025-07-01 11:50:00,580:INFO:System:
2025-07-01 11:50:00,580:INFO:    python: 3.11.13 | packaged by Anaconda, Inc. | (main, Jun  5 2025, 13:03:15) [MSC v.1929 64 bit (AMD64)]
2025-07-01 11:50:00,581:INFO:executable: d:\ML_notes\.conda\python.exe
2025-07-01 11:50:00,581:INFO:   machine: Windows-10-10.0.22631-SP0
2025-07-01 11:50:00,581:INFO:PyCaret required dependencies:
2025-07-01 11:50:00,581:INFO:                 pip: 25.1
2025-07-01 11:50:00,581:INFO:          setuptools: 78.1.1
2025-07-01 11:50:00,581:INFO:             pycaret: 3.3.2
2025-07-01 11:50:00,581:INFO:             IPython: 9.3.0
2025-07-01 11:50:00,581:INFO:          ipywidgets: 8.1.7
2025-07-01 11:50:00,581:INFO:                tqdm: 4.67.1
2025-07-01 11:50:00,581:INFO:               numpy: 1.26.4
2025-07-01 11:50:00,581:INFO:              pandas: 2.1.4
2025-07-01 11:50:00,581:INFO:              jinja2: 3.1.6
2025-07-01 11:50:00,581:INFO:               scipy: 1.11.4
2025-07-01 11:50:00,581:INFO:              joblib: 1.3.2
2025-07-01 11:50:00,582:INFO:             sklearn: 1.4.2
2025-07-01 11:50:00,582:INFO:                pyod: 2.0.5
2025-07-01 11:50:00,582:INFO:            imblearn: 0.13.0
2025-07-01 11:50:00,582:INFO:   category_encoders: 2.7.0
2025-07-01 11:50:00,582:INFO:            lightgbm: 4.6.0
2025-07-01 11:50:00,582:INFO:               numba: 0.61.0
2025-07-01 11:50:00,582:INFO:            requests: 2.32.4
2025-07-01 11:50:00,582:INFO:          matplotlib: 3.7.5
2025-07-01 11:50:00,582:INFO:          scikitplot: 0.3.7
2025-07-01 11:50:00,582:INFO:         yellowbrick: 1.5
2025-07-01 11:50:00,582:INFO:              plotly: 5.24.1
2025-07-01 11:50:00,582:INFO:    plotly-resampler: Not installed
2025-07-01 11:50:00,582:INFO:             kaleido: 1.0.0
2025-07-01 11:50:00,582:INFO:           schemdraw: 0.15
2025-07-01 11:50:00,583:INFO:         statsmodels: 0.14.4
2025-07-01 11:50:00,583:INFO:              sktime: 0.26.0
2025-07-01 11:50:00,583:INFO:               tbats: 1.1.3
2025-07-01 11:50:00,583:INFO:            pmdarima: 2.0.4
2025-07-01 11:50:00,583:INFO:              psutil: 7.0.0
2025-07-01 11:50:00,583:INFO:          markupsafe: 3.0.2
2025-07-01 11:50:00,583:INFO:             pickle5: Not installed
2025-07-01 11:50:00,583:INFO:         cloudpickle: 3.1.1
2025-07-01 11:50:00,583:INFO:         deprecation: 2.1.0
2025-07-01 11:50:00,583:INFO:              xxhash: 3.5.0
2025-07-01 11:50:00,583:INFO:           wurlitzer: Not installed
2025-07-01 11:50:00,583:INFO:PyCaret optional dependencies:
2025-07-01 11:50:00,583:INFO:                shap: Not installed
2025-07-01 11:50:00,583:INFO:           interpret: Not installed
2025-07-01 11:50:00,583:INFO:                umap: Not installed
2025-07-01 11:50:00,584:INFO:     ydata_profiling: 4.16.1
2025-07-01 11:50:00,584:INFO:  explainerdashboard: Not installed
2025-07-01 11:50:00,584:INFO:             autoviz: Not installed
2025-07-01 11:50:00,584:INFO:           fairlearn: Not installed
2025-07-01 11:50:00,584:INFO:          deepchecks: Not installed
2025-07-01 11:50:00,584:INFO:             xgboost: 3.0.2
2025-07-01 11:50:00,584:INFO:            catboost: Not installed
2025-07-01 11:50:00,584:INFO:              kmodes: Not installed
2025-07-01 11:50:00,584:INFO:             mlxtend: Not installed
2025-07-01 11:50:00,584:INFO:       statsforecast: Not installed
2025-07-01 11:50:00,584:INFO:        tune_sklearn: Not installed
2025-07-01 11:50:00,584:INFO:                 ray: Not installed
2025-07-01 11:50:00,584:INFO:            hyperopt: Not installed
2025-07-01 11:50:00,584:INFO:              optuna: Not installed
2025-07-01 11:50:00,584:INFO:               skopt: Not installed
2025-07-01 11:50:00,584:INFO:              mlflow: Not installed
2025-07-01 11:50:00,584:INFO:              gradio: Not installed
2025-07-01 11:50:00,585:INFO:             fastapi: Not installed
2025-07-01 11:50:00,585:INFO:             uvicorn: Not installed
2025-07-01 11:50:00,585:INFO:              m2cgen: Not installed
2025-07-01 11:50:00,585:INFO:           evidently: Not installed
2025-07-01 11:50:00,585:INFO:               fugue: Not installed
2025-07-01 11:50:00,585:INFO:           streamlit: Not installed
2025-07-01 11:50:00,585:INFO:             prophet: Not installed
2025-07-01 11:50:00,585:INFO:None
2025-07-01 11:50:00,585:INFO:Set up data.
2025-07-01 12:05:12,220:INFO:PyCaret ClassificationExperiment
2025-07-01 12:05:12,220:INFO:Logging name: clf-default-name
2025-07-01 12:05:12,220:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-07-01 12:05:12,220:INFO:version 3.3.2
2025-07-01 12:05:12,220:INFO:Initializing setup()
2025-07-01 12:05:12,220:INFO:self.USI: 0ccc
2025-07-01 12:05:12,220:INFO:self._variable_keys: {'fix_imbalance', 'data', 'is_multiclass', 'y_test', 'X_train', 'log_plots_param', 'X', 'X_test', 'logging_param', 'n_jobs_param', 'gpu_param', 'idx', 'html_param', 'fold_generator', '_ml_usecase', 'exp_id', 'USI', '_available_plots', 'gpu_n_jobs_param', 'pipeline', 'y_train', 'fold_groups_param', 'y', 'fold_shuffle_param', 'target_param', 'memory', 'seed', 'exp_name_log'}
2025-07-01 12:05:12,220:INFO:Checking environment
2025-07-01 12:05:12,220:INFO:python_version: 3.11.13
2025-07-01 12:05:12,220:INFO:python_build: ('main', 'Jun  5 2025 13:03:15')
2025-07-01 12:05:12,220:INFO:machine: AMD64
2025-07-01 12:05:12,220:INFO:platform: Windows-10-10.0.22631-SP0
2025-07-01 12:05:12,225:INFO:Memory: svmem(total=12674457600, available=2242191360, percent=82.3, used=10432266240, free=2242191360)
2025-07-01 12:05:12,225:INFO:Physical Core: 4
2025-07-01 12:05:12,225:INFO:Logical Core: 8
2025-07-01 12:05:12,225:INFO:Checking libraries
2025-07-01 12:05:12,225:INFO:System:
2025-07-01 12:05:12,225:INFO:    python: 3.11.13 | packaged by Anaconda, Inc. | (main, Jun  5 2025, 13:03:15) [MSC v.1929 64 bit (AMD64)]
2025-07-01 12:05:12,225:INFO:executable: d:\ML_notes\.conda\python.exe
2025-07-01 12:05:12,225:INFO:   machine: Windows-10-10.0.22631-SP0
2025-07-01 12:05:12,225:INFO:PyCaret required dependencies:
2025-07-01 12:05:12,225:INFO:                 pip: 25.1
2025-07-01 12:05:12,225:INFO:          setuptools: 78.1.1
2025-07-01 12:05:12,225:INFO:             pycaret: 3.3.2
2025-07-01 12:05:12,225:INFO:             IPython: 9.3.0
2025-07-01 12:05:12,225:INFO:          ipywidgets: 8.1.7
2025-07-01 12:05:12,225:INFO:                tqdm: 4.67.1
2025-07-01 12:05:12,225:INFO:               numpy: 1.26.4
2025-07-01 12:05:12,225:INFO:              pandas: 2.1.4
2025-07-01 12:05:12,225:INFO:              jinja2: 3.1.6
2025-07-01 12:05:12,225:INFO:               scipy: 1.11.4
2025-07-01 12:05:12,225:INFO:              joblib: 1.3.2
2025-07-01 12:05:12,225:INFO:             sklearn: 1.4.2
2025-07-01 12:05:12,225:INFO:                pyod: 2.0.5
2025-07-01 12:05:12,225:INFO:            imblearn: 0.13.0
2025-07-01 12:05:12,225:INFO:   category_encoders: 2.7.0
2025-07-01 12:05:12,225:INFO:            lightgbm: 4.6.0
2025-07-01 12:05:12,225:INFO:               numba: 0.61.0
2025-07-01 12:05:12,225:INFO:            requests: 2.32.4
2025-07-01 12:05:12,225:INFO:          matplotlib: 3.7.5
2025-07-01 12:05:12,225:INFO:          scikitplot: 0.3.7
2025-07-01 12:05:12,225:INFO:         yellowbrick: 1.5
2025-07-01 12:05:12,225:INFO:              plotly: 5.24.1
2025-07-01 12:05:12,225:INFO:    plotly-resampler: Not installed
2025-07-01 12:05:12,225:INFO:             kaleido: 1.0.0
2025-07-01 12:05:12,226:INFO:           schemdraw: 0.15
2025-07-01 12:05:12,226:INFO:         statsmodels: 0.14.4
2025-07-01 12:05:12,226:INFO:              sktime: 0.26.0
2025-07-01 12:05:12,226:INFO:               tbats: 1.1.3
2025-07-01 12:05:12,226:INFO:            pmdarima: 2.0.4
2025-07-01 12:05:12,226:INFO:              psutil: 7.0.0
2025-07-01 12:05:12,226:INFO:          markupsafe: 3.0.2
2025-07-01 12:05:12,226:INFO:             pickle5: Not installed
2025-07-01 12:05:12,226:INFO:         cloudpickle: 3.1.1
2025-07-01 12:05:12,226:INFO:         deprecation: 2.1.0
2025-07-01 12:05:12,226:INFO:              xxhash: 3.5.0
2025-07-01 12:05:12,226:INFO:           wurlitzer: Not installed
2025-07-01 12:05:12,226:INFO:PyCaret optional dependencies:
2025-07-01 12:05:12,226:INFO:                shap: Not installed
2025-07-01 12:05:12,226:INFO:           interpret: Not installed
2025-07-01 12:05:12,226:INFO:                umap: Not installed
2025-07-01 12:05:12,226:INFO:     ydata_profiling: 4.16.1
2025-07-01 12:05:12,226:INFO:  explainerdashboard: Not installed
2025-07-01 12:05:12,226:INFO:             autoviz: Not installed
2025-07-01 12:05:12,226:INFO:           fairlearn: Not installed
2025-07-01 12:05:12,226:INFO:          deepchecks: Not installed
2025-07-01 12:05:12,226:INFO:             xgboost: 3.0.2
2025-07-01 12:05:12,226:INFO:            catboost: Not installed
2025-07-01 12:05:12,226:INFO:              kmodes: Not installed
2025-07-01 12:05:12,226:INFO:             mlxtend: Not installed
2025-07-01 12:05:12,226:INFO:       statsforecast: Not installed
2025-07-01 12:05:12,226:INFO:        tune_sklearn: Not installed
2025-07-01 12:05:12,226:INFO:                 ray: Not installed
2025-07-01 12:05:12,226:INFO:            hyperopt: Not installed
2025-07-01 12:05:12,226:INFO:              optuna: Not installed
2025-07-01 12:05:12,226:INFO:               skopt: Not installed
2025-07-01 12:05:12,226:INFO:              mlflow: Not installed
2025-07-01 12:05:12,226:INFO:              gradio: Not installed
2025-07-01 12:05:12,226:INFO:             fastapi: Not installed
2025-07-01 12:05:12,226:INFO:             uvicorn: Not installed
2025-07-01 12:05:12,227:INFO:              m2cgen: Not installed
2025-07-01 12:05:12,227:INFO:           evidently: Not installed
2025-07-01 12:05:12,227:INFO:               fugue: Not installed
2025-07-01 12:05:12,227:INFO:           streamlit: Not installed
2025-07-01 12:05:12,227:INFO:             prophet: Not installed
2025-07-01 12:05:12,227:INFO:None
2025-07-01 12:05:12,227:INFO:Set up data.
2025-07-01 12:05:12,233:INFO:Set up folding strategy.
2025-07-01 12:05:12,233:INFO:Set up train/test split.
2025-07-01 12:05:12,238:INFO:Set up index.
2025-07-01 12:05:12,239:INFO:Assigning column types.
2025-07-01 12:05:12,242:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-07-01 12:05:12,281:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-01 12:05:12,282:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-01 12:05:12,305:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 12:05:12,307:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 12:05:12,346:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-01 12:05:12,346:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-01 12:05:12,371:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 12:05:12,374:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 12:05:12,374:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-07-01 12:05:12,413:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-01 12:05:12,436:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 12:05:12,438:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 12:05:12,475:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-01 12:05:12,499:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 12:05:12,502:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 12:05:12,503:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-07-01 12:05:12,569:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 12:05:12,570:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 12:05:12,634:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 12:05:12,636:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 12:05:12,637:INFO:Preparing preprocessing pipeline...
2025-07-01 12:05:12,641:INFO:Finished creating preprocessing pipeline.
2025-07-01 12:05:12,641:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\YOGA\AppData\Local\Temp\joblib),
         steps=[('placeholder', None)], verbose=False)
2025-07-01 12:05:12,641:INFO:Creating final display dataframe.
2025-07-01 12:05:12,692:INFO:Setup _display_container:                     Description              Value
0                    Session id                123
1                        Target  Target_Churn_True
2                   Target type             Binary
3           Original data shape          (840, 20)
4        Transformed data shape          (840, 20)
5   Transformed train set shape          (588, 20)
6    Transformed test set shape          (252, 20)
7              Numeric features                 19
8                    Preprocess               True
9               Imputation type               None
10               Fold Generator    StratifiedKFold
11                  Fold Number                 10
12                     CPU Jobs                 -1
13                      Use GPU              False
14               Log Experiment              False
15              Experiment Name   clf-default-name
16                          USI               0ccc
2025-07-01 12:05:12,768:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 12:05:12,771:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 12:05:12,842:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 12:05:12,844:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 12:05:12,847:INFO:setup() successfully completed in 0.63s...............
2025-07-01 12:05:12,847:INFO:Initializing compare_models()
2025-07-01 12:05:12,847:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DD6F8E90>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000231DD6F8E90>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2025-07-01 12:05:12,847:INFO:Checking exceptions
2025-07-01 12:05:12,851:INFO:Preparing display monitor
2025-07-01 12:05:12,871:INFO:Initializing Logistic Regression
2025-07-01 12:05:12,871:INFO:Total runtime is 0.0 minutes
2025-07-01 12:05:12,874:INFO:SubProcess create_model() called ==================================
2025-07-01 12:05:12,874:INFO:Initializing create_model()
2025-07-01 12:05:12,874:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DD6F8E90>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231DD61A1D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 12:05:12,874:INFO:Checking exceptions
2025-07-01 12:05:12,874:INFO:Importing libraries
2025-07-01 12:05:12,874:INFO:Copying training dataset
2025-07-01 12:05:12,881:INFO:Defining folds
2025-07-01 12:05:12,882:INFO:Declaring metric variables
2025-07-01 12:05:12,886:INFO:Importing untrained model
2025-07-01 12:05:12,891:INFO:Logistic Regression Imported successfully
2025-07-01 12:05:12,900:INFO:Starting cross validation
2025-07-01 12:05:12,901:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 12:05:29,448:INFO:Calculating mean and std
2025-07-01 12:05:29,449:INFO:Creating metrics dataframe
2025-07-01 12:05:29,451:INFO:Uploading results into container
2025-07-01 12:05:29,452:INFO:Uploading model into container now
2025-07-01 12:05:29,452:INFO:_master_model_container: 1
2025-07-01 12:05:29,452:INFO:_display_container: 2
2025-07-01 12:05:29,453:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-07-01 12:05:29,453:INFO:create_model() successfully completed......................................
2025-07-01 12:05:29,653:INFO:SubProcess create_model() end ==================================
2025-07-01 12:05:29,653:INFO:Creating metrics dataframe
2025-07-01 12:05:29,659:INFO:Initializing K Neighbors Classifier
2025-07-01 12:05:29,659:INFO:Total runtime is 0.2797997196515401 minutes
2025-07-01 12:05:29,662:INFO:SubProcess create_model() called ==================================
2025-07-01 12:05:29,662:INFO:Initializing create_model()
2025-07-01 12:05:29,662:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DD6F8E90>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231DD61A1D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 12:05:29,662:INFO:Checking exceptions
2025-07-01 12:05:29,662:INFO:Importing libraries
2025-07-01 12:05:29,662:INFO:Copying training dataset
2025-07-01 12:05:29,667:INFO:Defining folds
2025-07-01 12:05:29,667:INFO:Declaring metric variables
2025-07-01 12:05:29,670:INFO:Importing untrained model
2025-07-01 12:05:29,675:INFO:K Neighbors Classifier Imported successfully
2025-07-01 12:05:29,684:INFO:Starting cross validation
2025-07-01 12:05:29,685:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 12:05:29,883:INFO:Calculating mean and std
2025-07-01 12:05:29,885:INFO:Creating metrics dataframe
2025-07-01 12:05:29,886:INFO:Uploading results into container
2025-07-01 12:05:29,886:INFO:Uploading model into container now
2025-07-01 12:05:29,887:INFO:_master_model_container: 2
2025-07-01 12:05:29,887:INFO:_display_container: 2
2025-07-01 12:05:29,887:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-07-01 12:05:29,887:INFO:create_model() successfully completed......................................
2025-07-01 12:05:30,056:INFO:SubProcess create_model() end ==================================
2025-07-01 12:05:30,056:INFO:Creating metrics dataframe
2025-07-01 12:05:30,063:INFO:Initializing Naive Bayes
2025-07-01 12:05:30,063:INFO:Total runtime is 0.2865242083867391 minutes
2025-07-01 12:05:30,066:INFO:SubProcess create_model() called ==================================
2025-07-01 12:05:30,066:INFO:Initializing create_model()
2025-07-01 12:05:30,066:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DD6F8E90>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231DD61A1D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 12:05:30,066:INFO:Checking exceptions
2025-07-01 12:05:30,066:INFO:Importing libraries
2025-07-01 12:05:30,066:INFO:Copying training dataset
2025-07-01 12:05:30,071:INFO:Defining folds
2025-07-01 12:05:30,071:INFO:Declaring metric variables
2025-07-01 12:05:30,076:INFO:Importing untrained model
2025-07-01 12:05:30,082:INFO:Naive Bayes Imported successfully
2025-07-01 12:05:30,088:INFO:Starting cross validation
2025-07-01 12:05:30,088:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 12:05:30,173:INFO:Calculating mean and std
2025-07-01 12:05:30,175:INFO:Creating metrics dataframe
2025-07-01 12:05:30,178:INFO:Uploading results into container
2025-07-01 12:05:30,179:INFO:Uploading model into container now
2025-07-01 12:05:30,180:INFO:_master_model_container: 3
2025-07-01 12:05:30,180:INFO:_display_container: 2
2025-07-01 12:05:30,180:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-07-01 12:05:30,180:INFO:create_model() successfully completed......................................
2025-07-01 12:05:30,345:INFO:SubProcess create_model() end ==================================
2025-07-01 12:05:30,345:INFO:Creating metrics dataframe
2025-07-01 12:05:30,351:INFO:Initializing Decision Tree Classifier
2025-07-01 12:05:30,352:INFO:Total runtime is 0.29132277568181353 minutes
2025-07-01 12:05:30,355:INFO:SubProcess create_model() called ==================================
2025-07-01 12:05:30,355:INFO:Initializing create_model()
2025-07-01 12:05:30,355:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DD6F8E90>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231DD61A1D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 12:05:30,355:INFO:Checking exceptions
2025-07-01 12:05:30,355:INFO:Importing libraries
2025-07-01 12:05:30,355:INFO:Copying training dataset
2025-07-01 12:05:30,362:INFO:Defining folds
2025-07-01 12:05:30,362:INFO:Declaring metric variables
2025-07-01 12:05:30,366:INFO:Importing untrained model
2025-07-01 12:05:30,370:INFO:Decision Tree Classifier Imported successfully
2025-07-01 12:05:30,378:INFO:Starting cross validation
2025-07-01 12:05:30,378:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 12:05:30,456:INFO:Calculating mean and std
2025-07-01 12:05:30,457:INFO:Creating metrics dataframe
2025-07-01 12:05:30,459:INFO:Uploading results into container
2025-07-01 12:05:30,460:INFO:Uploading model into container now
2025-07-01 12:05:30,460:INFO:_master_model_container: 4
2025-07-01 12:05:30,460:INFO:_display_container: 2
2025-07-01 12:05:30,461:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2025-07-01 12:05:30,461:INFO:create_model() successfully completed......................................
2025-07-01 12:05:30,622:INFO:SubProcess create_model() end ==================================
2025-07-01 12:05:30,622:INFO:Creating metrics dataframe
2025-07-01 12:05:30,630:INFO:Initializing SVM - Linear Kernel
2025-07-01 12:05:30,630:INFO:Total runtime is 0.2959736069043477 minutes
2025-07-01 12:05:30,633:INFO:SubProcess create_model() called ==================================
2025-07-01 12:05:30,633:INFO:Initializing create_model()
2025-07-01 12:05:30,633:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DD6F8E90>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231DD61A1D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 12:05:30,634:INFO:Checking exceptions
2025-07-01 12:05:30,634:INFO:Importing libraries
2025-07-01 12:05:30,634:INFO:Copying training dataset
2025-07-01 12:05:30,639:INFO:Defining folds
2025-07-01 12:05:30,639:INFO:Declaring metric variables
2025-07-01 12:05:30,643:INFO:Importing untrained model
2025-07-01 12:05:30,648:INFO:SVM - Linear Kernel Imported successfully
2025-07-01 12:05:30,654:INFO:Starting cross validation
2025-07-01 12:05:30,655:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 12:05:30,745:INFO:Calculating mean and std
2025-07-01 12:05:30,746:INFO:Creating metrics dataframe
2025-07-01 12:05:30,748:INFO:Uploading results into container
2025-07-01 12:05:30,748:INFO:Uploading model into container now
2025-07-01 12:05:30,749:INFO:_master_model_container: 5
2025-07-01 12:05:30,749:INFO:_display_container: 2
2025-07-01 12:05:30,749:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-07-01 12:05:30,749:INFO:create_model() successfully completed......................................
2025-07-01 12:05:30,913:INFO:SubProcess create_model() end ==================================
2025-07-01 12:05:30,913:INFO:Creating metrics dataframe
2025-07-01 12:05:30,922:INFO:Initializing Ridge Classifier
2025-07-01 12:05:30,922:INFO:Total runtime is 0.30084701776504513 minutes
2025-07-01 12:05:30,926:INFO:SubProcess create_model() called ==================================
2025-07-01 12:05:30,927:INFO:Initializing create_model()
2025-07-01 12:05:30,927:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DD6F8E90>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231DD61A1D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 12:05:30,927:INFO:Checking exceptions
2025-07-01 12:05:30,927:INFO:Importing libraries
2025-07-01 12:05:30,927:INFO:Copying training dataset
2025-07-01 12:05:30,931:INFO:Defining folds
2025-07-01 12:05:30,931:INFO:Declaring metric variables
2025-07-01 12:05:30,934:INFO:Importing untrained model
2025-07-01 12:05:30,937:INFO:Ridge Classifier Imported successfully
2025-07-01 12:05:30,945:INFO:Starting cross validation
2025-07-01 12:05:30,946:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 12:05:31,027:INFO:Calculating mean and std
2025-07-01 12:05:31,028:INFO:Creating metrics dataframe
2025-07-01 12:05:31,029:INFO:Uploading results into container
2025-07-01 12:05:31,029:INFO:Uploading model into container now
2025-07-01 12:05:31,030:INFO:_master_model_container: 6
2025-07-01 12:05:31,030:INFO:_display_container: 2
2025-07-01 12:05:31,030:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-07-01 12:05:31,030:INFO:create_model() successfully completed......................................
2025-07-01 12:05:31,202:INFO:SubProcess create_model() end ==================================
2025-07-01 12:05:31,202:INFO:Creating metrics dataframe
2025-07-01 12:05:31,210:INFO:Initializing Random Forest Classifier
2025-07-01 12:05:31,210:INFO:Total runtime is 0.30564262866973874 minutes
2025-07-01 12:05:31,216:INFO:SubProcess create_model() called ==================================
2025-07-01 12:05:31,216:INFO:Initializing create_model()
2025-07-01 12:05:31,217:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DD6F8E90>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231DD61A1D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 12:05:31,217:INFO:Checking exceptions
2025-07-01 12:05:31,217:INFO:Importing libraries
2025-07-01 12:05:31,217:INFO:Copying training dataset
2025-07-01 12:05:31,224:INFO:Defining folds
2025-07-01 12:05:31,224:INFO:Declaring metric variables
2025-07-01 12:05:31,229:INFO:Importing untrained model
2025-07-01 12:05:31,237:INFO:Random Forest Classifier Imported successfully
2025-07-01 12:05:31,245:INFO:Starting cross validation
2025-07-01 12:05:31,246:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 12:05:32,120:INFO:Calculating mean and std
2025-07-01 12:05:32,121:INFO:Creating metrics dataframe
2025-07-01 12:05:32,123:INFO:Uploading results into container
2025-07-01 12:05:32,124:INFO:Uploading model into container now
2025-07-01 12:05:32,124:INFO:_master_model_container: 7
2025-07-01 12:05:32,125:INFO:_display_container: 2
2025-07-01 12:05:32,126:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-07-01 12:05:32,126:INFO:create_model() successfully completed......................................
2025-07-01 12:05:32,327:INFO:SubProcess create_model() end ==================================
2025-07-01 12:05:32,327:INFO:Creating metrics dataframe
2025-07-01 12:05:32,335:INFO:Initializing Quadratic Discriminant Analysis
2025-07-01 12:05:32,335:INFO:Total runtime is 0.3243954459826151 minutes
2025-07-01 12:05:32,339:INFO:SubProcess create_model() called ==================================
2025-07-01 12:05:32,339:INFO:Initializing create_model()
2025-07-01 12:05:32,340:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DD6F8E90>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231DD61A1D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 12:05:32,340:INFO:Checking exceptions
2025-07-01 12:05:32,340:INFO:Importing libraries
2025-07-01 12:05:32,340:INFO:Copying training dataset
2025-07-01 12:05:32,347:INFO:Defining folds
2025-07-01 12:05:32,347:INFO:Declaring metric variables
2025-07-01 12:05:32,352:INFO:Importing untrained model
2025-07-01 12:05:32,357:INFO:Quadratic Discriminant Analysis Imported successfully
2025-07-01 12:05:32,366:INFO:Starting cross validation
2025-07-01 12:05:32,367:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 12:05:32,429:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 12:05:32,429:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 12:05:32,429:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 12:05:32,429:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 12:05:32,429:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 12:05:32,461:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 12:05:32,464:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 12:05:32,487:INFO:Calculating mean and std
2025-07-01 12:05:32,488:INFO:Creating metrics dataframe
2025-07-01 12:05:32,490:INFO:Uploading results into container
2025-07-01 12:05:32,491:INFO:Uploading model into container now
2025-07-01 12:05:32,492:INFO:_master_model_container: 8
2025-07-01 12:05:32,492:INFO:_display_container: 2
2025-07-01 12:05:32,493:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-07-01 12:05:32,493:INFO:create_model() successfully completed......................................
2025-07-01 12:05:32,769:INFO:SubProcess create_model() end ==================================
2025-07-01 12:05:32,769:INFO:Creating metrics dataframe
2025-07-01 12:05:32,781:INFO:Initializing Ada Boost Classifier
2025-07-01 12:05:32,781:INFO:Total runtime is 0.3318224867184956 minutes
2025-07-01 12:05:32,785:INFO:SubProcess create_model() called ==================================
2025-07-01 12:05:32,785:INFO:Initializing create_model()
2025-07-01 12:05:32,785:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DD6F8E90>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231DD61A1D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 12:05:32,785:INFO:Checking exceptions
2025-07-01 12:05:32,785:INFO:Importing libraries
2025-07-01 12:05:32,785:INFO:Copying training dataset
2025-07-01 12:05:32,793:INFO:Defining folds
2025-07-01 12:05:32,794:INFO:Declaring metric variables
2025-07-01 12:05:32,798:INFO:Importing untrained model
2025-07-01 12:05:32,803:INFO:Ada Boost Classifier Imported successfully
2025-07-01 12:05:32,812:INFO:Starting cross validation
2025-07-01 12:05:32,813:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 12:05:32,853:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 12:05:32,853:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 12:05:32,853:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 12:05:32,853:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 12:05:32,854:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 12:05:33,065:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 12:05:33,070:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 12:05:33,241:INFO:Calculating mean and std
2025-07-01 12:05:33,243:INFO:Creating metrics dataframe
2025-07-01 12:05:33,245:INFO:Uploading results into container
2025-07-01 12:05:33,246:INFO:Uploading model into container now
2025-07-01 12:05:33,246:INFO:_master_model_container: 9
2025-07-01 12:05:33,246:INFO:_display_container: 2
2025-07-01 12:05:33,247:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2025-07-01 12:05:33,247:INFO:create_model() successfully completed......................................
2025-07-01 12:05:33,432:INFO:SubProcess create_model() end ==================================
2025-07-01 12:05:33,432:INFO:Creating metrics dataframe
2025-07-01 12:05:33,444:INFO:Initializing Gradient Boosting Classifier
2025-07-01 12:05:33,444:INFO:Total runtime is 0.34287228981653844 minutes
2025-07-01 12:05:33,449:INFO:SubProcess create_model() called ==================================
2025-07-01 12:05:33,449:INFO:Initializing create_model()
2025-07-01 12:05:33,449:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DD6F8E90>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231DD61A1D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 12:05:33,449:INFO:Checking exceptions
2025-07-01 12:05:33,449:INFO:Importing libraries
2025-07-01 12:05:33,449:INFO:Copying training dataset
2025-07-01 12:05:33,454:INFO:Defining folds
2025-07-01 12:05:33,455:INFO:Declaring metric variables
2025-07-01 12:05:33,460:INFO:Importing untrained model
2025-07-01 12:05:33,466:INFO:Gradient Boosting Classifier Imported successfully
2025-07-01 12:05:33,474:INFO:Starting cross validation
2025-07-01 12:05:33,475:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 12:05:34,256:INFO:Calculating mean and std
2025-07-01 12:05:34,257:INFO:Creating metrics dataframe
2025-07-01 12:05:34,259:INFO:Uploading results into container
2025-07-01 12:05:34,260:INFO:Uploading model into container now
2025-07-01 12:05:34,260:INFO:_master_model_container: 10
2025-07-01 12:05:34,261:INFO:_display_container: 2
2025-07-01 12:05:34,261:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-07-01 12:05:34,262:INFO:create_model() successfully completed......................................
2025-07-01 12:05:34,454:INFO:SubProcess create_model() end ==================================
2025-07-01 12:05:34,454:INFO:Creating metrics dataframe
2025-07-01 12:05:34,464:INFO:Initializing Linear Discriminant Analysis
2025-07-01 12:05:34,464:INFO:Total runtime is 0.3598708152770996 minutes
2025-07-01 12:05:34,467:INFO:SubProcess create_model() called ==================================
2025-07-01 12:05:34,467:INFO:Initializing create_model()
2025-07-01 12:05:34,468:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DD6F8E90>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231DD61A1D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 12:05:34,468:INFO:Checking exceptions
2025-07-01 12:05:34,468:INFO:Importing libraries
2025-07-01 12:05:34,468:INFO:Copying training dataset
2025-07-01 12:05:34,477:INFO:Defining folds
2025-07-01 12:05:34,477:INFO:Declaring metric variables
2025-07-01 12:05:34,482:INFO:Importing untrained model
2025-07-01 12:05:34,486:INFO:Linear Discriminant Analysis Imported successfully
2025-07-01 12:05:34,495:INFO:Starting cross validation
2025-07-01 12:05:34,496:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 12:05:34,582:INFO:Calculating mean and std
2025-07-01 12:05:34,584:INFO:Creating metrics dataframe
2025-07-01 12:05:34,587:INFO:Uploading results into container
2025-07-01 12:05:34,587:INFO:Uploading model into container now
2025-07-01 12:05:34,588:INFO:_master_model_container: 11
2025-07-01 12:05:34,588:INFO:_display_container: 2
2025-07-01 12:05:34,588:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-07-01 12:05:34,589:INFO:create_model() successfully completed......................................
2025-07-01 12:05:34,786:INFO:SubProcess create_model() end ==================================
2025-07-01 12:05:34,786:INFO:Creating metrics dataframe
2025-07-01 12:05:34,801:INFO:Initializing Extra Trees Classifier
2025-07-01 12:05:34,801:INFO:Total runtime is 0.36548728148142495 minutes
2025-07-01 12:05:34,805:INFO:SubProcess create_model() called ==================================
2025-07-01 12:05:34,805:INFO:Initializing create_model()
2025-07-01 12:05:34,805:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DD6F8E90>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231DD61A1D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 12:05:34,805:INFO:Checking exceptions
2025-07-01 12:05:34,805:INFO:Importing libraries
2025-07-01 12:05:34,805:INFO:Copying training dataset
2025-07-01 12:05:34,814:INFO:Defining folds
2025-07-01 12:05:34,814:INFO:Declaring metric variables
2025-07-01 12:05:34,819:INFO:Importing untrained model
2025-07-01 12:05:34,825:INFO:Extra Trees Classifier Imported successfully
2025-07-01 12:05:34,834:INFO:Starting cross validation
2025-07-01 12:05:34,835:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 12:05:35,525:INFO:Calculating mean and std
2025-07-01 12:05:35,527:INFO:Creating metrics dataframe
2025-07-01 12:05:35,529:INFO:Uploading results into container
2025-07-01 12:05:35,530:INFO:Uploading model into container now
2025-07-01 12:05:35,531:INFO:_master_model_container: 12
2025-07-01 12:05:35,531:INFO:_display_container: 2
2025-07-01 12:05:35,532:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-07-01 12:05:35,532:INFO:create_model() successfully completed......................................
2025-07-01 12:05:35,725:INFO:SubProcess create_model() end ==================================
2025-07-01 12:05:35,726:INFO:Creating metrics dataframe
2025-07-01 12:05:35,738:INFO:Initializing Extreme Gradient Boosting
2025-07-01 12:05:35,738:INFO:Total runtime is 0.38110911448796586 minutes
2025-07-01 12:05:35,745:INFO:SubProcess create_model() called ==================================
2025-07-01 12:05:35,745:INFO:Initializing create_model()
2025-07-01 12:05:35,746:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DD6F8E90>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231DD61A1D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 12:05:35,746:INFO:Checking exceptions
2025-07-01 12:05:35,746:INFO:Importing libraries
2025-07-01 12:05:35,746:INFO:Copying training dataset
2025-07-01 12:05:35,751:INFO:Defining folds
2025-07-01 12:05:35,751:INFO:Declaring metric variables
2025-07-01 12:05:35,756:INFO:Importing untrained model
2025-07-01 12:05:35,762:INFO:Extreme Gradient Boosting Imported successfully
2025-07-01 12:05:35,771:INFO:Starting cross validation
2025-07-01 12:05:35,772:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 12:05:36,292:INFO:Calculating mean and std
2025-07-01 12:05:36,293:INFO:Creating metrics dataframe
2025-07-01 12:05:36,295:INFO:Uploading results into container
2025-07-01 12:05:36,295:INFO:Uploading model into container now
2025-07-01 12:05:36,296:INFO:_master_model_container: 13
2025-07-01 12:05:36,296:INFO:_display_container: 2
2025-07-01 12:05:36,297:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-07-01 12:05:36,297:INFO:create_model() successfully completed......................................
2025-07-01 12:05:36,469:INFO:SubProcess create_model() end ==================================
2025-07-01 12:05:36,469:INFO:Creating metrics dataframe
2025-07-01 12:05:36,479:INFO:Initializing Light Gradient Boosting Machine
2025-07-01 12:05:36,479:INFO:Total runtime is 0.393458358446757 minutes
2025-07-01 12:05:36,482:INFO:SubProcess create_model() called ==================================
2025-07-01 12:05:36,483:INFO:Initializing create_model()
2025-07-01 12:05:36,483:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DD6F8E90>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231DD61A1D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 12:05:36,483:INFO:Checking exceptions
2025-07-01 12:05:36,483:INFO:Importing libraries
2025-07-01 12:05:36,483:INFO:Copying training dataset
2025-07-01 12:05:36,488:INFO:Defining folds
2025-07-01 12:05:36,488:INFO:Declaring metric variables
2025-07-01 12:05:36,493:INFO:Importing untrained model
2025-07-01 12:05:36,497:INFO:Light Gradient Boosting Machine Imported successfully
2025-07-01 12:05:36,504:INFO:Starting cross validation
2025-07-01 12:05:36,505:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 12:05:37,274:INFO:Calculating mean and std
2025-07-01 12:05:37,276:INFO:Creating metrics dataframe
2025-07-01 12:05:37,278:INFO:Uploading results into container
2025-07-01 12:05:37,279:INFO:Uploading model into container now
2025-07-01 12:05:37,279:INFO:_master_model_container: 14
2025-07-01 12:05:37,279:INFO:_display_container: 2
2025-07-01 12:05:37,280:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-07-01 12:05:37,281:INFO:create_model() successfully completed......................................
2025-07-01 12:05:37,477:INFO:SubProcess create_model() end ==================================
2025-07-01 12:05:37,477:INFO:Creating metrics dataframe
2025-07-01 12:05:37,486:INFO:Initializing Dummy Classifier
2025-07-01 12:05:37,486:INFO:Total runtime is 0.4102497895558675 minutes
2025-07-01 12:05:37,491:INFO:SubProcess create_model() called ==================================
2025-07-01 12:05:37,492:INFO:Initializing create_model()
2025-07-01 12:05:37,492:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DD6F8E90>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231DD61A1D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 12:05:37,492:INFO:Checking exceptions
2025-07-01 12:05:37,492:INFO:Importing libraries
2025-07-01 12:05:37,492:INFO:Copying training dataset
2025-07-01 12:05:37,497:INFO:Defining folds
2025-07-01 12:05:37,498:INFO:Declaring metric variables
2025-07-01 12:05:37,502:INFO:Importing untrained model
2025-07-01 12:05:37,505:INFO:Dummy Classifier Imported successfully
2025-07-01 12:05:37,513:INFO:Starting cross validation
2025-07-01 12:05:37,514:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 12:05:37,566:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-01 12:05:37,566:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-01 12:05:37,566:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-01 12:05:37,569:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-01 12:05:37,579:INFO:Calculating mean and std
2025-07-01 12:05:37,579:INFO:Creating metrics dataframe
2025-07-01 12:05:37,580:INFO:Uploading results into container
2025-07-01 12:05:37,581:INFO:Uploading model into container now
2025-07-01 12:05:37,581:INFO:_master_model_container: 15
2025-07-01 12:05:37,581:INFO:_display_container: 2
2025-07-01 12:05:37,581:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2025-07-01 12:05:37,581:INFO:create_model() successfully completed......................................
2025-07-01 12:05:37,752:INFO:SubProcess create_model() end ==================================
2025-07-01 12:05:37,753:INFO:Creating metrics dataframe
2025-07-01 12:05:37,763:WARNING:d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-07-01 12:05:37,772:INFO:Initializing create_model()
2025-07-01 12:05:37,772:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DD6F8E90>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 12:05:37,772:INFO:Checking exceptions
2025-07-01 12:05:37,776:INFO:Importing libraries
2025-07-01 12:05:37,776:INFO:Copying training dataset
2025-07-01 12:05:37,780:INFO:Defining folds
2025-07-01 12:05:37,780:INFO:Declaring metric variables
2025-07-01 12:05:37,780:INFO:Importing untrained model
2025-07-01 12:05:37,780:INFO:Declaring custom model
2025-07-01 12:05:37,781:INFO:Extra Trees Classifier Imported successfully
2025-07-01 12:05:37,781:INFO:Cross validation set to False
2025-07-01 12:05:37,781:INFO:Fitting Model
2025-07-01 12:05:37,902:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-07-01 12:05:37,902:INFO:create_model() successfully completed......................................
2025-07-01 12:05:38,115:INFO:_master_model_container: 15
2025-07-01 12:05:38,116:INFO:_display_container: 2
2025-07-01 12:05:38,116:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-07-01 12:05:38,116:INFO:compare_models() successfully completed......................................
2025-07-01 12:06:15,981:INFO:PyCaret ClassificationExperiment
2025-07-01 12:06:15,981:INFO:Logging name: clf-default-name
2025-07-01 12:06:15,981:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-07-01 12:06:15,982:INFO:version 3.3.2
2025-07-01 12:06:15,982:INFO:Initializing setup()
2025-07-01 12:06:15,982:INFO:self.USI: 0697
2025-07-01 12:06:15,982:INFO:self._variable_keys: {'fix_imbalance', 'data', 'is_multiclass', 'y_test', 'X_train', 'log_plots_param', 'X', 'X_test', 'logging_param', 'n_jobs_param', 'gpu_param', 'idx', 'html_param', 'fold_generator', '_ml_usecase', 'exp_id', 'USI', '_available_plots', 'gpu_n_jobs_param', 'pipeline', 'y_train', 'fold_groups_param', 'y', 'fold_shuffle_param', 'target_param', 'memory', 'seed', 'exp_name_log'}
2025-07-01 12:06:15,982:INFO:Checking environment
2025-07-01 12:06:15,982:INFO:python_version: 3.11.13
2025-07-01 12:06:15,982:INFO:python_build: ('main', 'Jun  5 2025 13:03:15')
2025-07-01 12:06:15,982:INFO:machine: AMD64
2025-07-01 12:06:15,982:INFO:platform: Windows-10-10.0.22631-SP0
2025-07-01 12:06:15,987:INFO:Memory: svmem(total=12674457600, available=1516462080, percent=88.0, used=11157995520, free=1516462080)
2025-07-01 12:06:15,988:INFO:Physical Core: 4
2025-07-01 12:06:15,988:INFO:Logical Core: 8
2025-07-01 12:06:15,988:INFO:Checking libraries
2025-07-01 12:06:15,988:INFO:System:
2025-07-01 12:06:15,988:INFO:    python: 3.11.13 | packaged by Anaconda, Inc. | (main, Jun  5 2025, 13:03:15) [MSC v.1929 64 bit (AMD64)]
2025-07-01 12:06:15,988:INFO:executable: d:\ML_notes\.conda\python.exe
2025-07-01 12:06:15,988:INFO:   machine: Windows-10-10.0.22631-SP0
2025-07-01 12:06:15,988:INFO:PyCaret required dependencies:
2025-07-01 12:06:15,988:INFO:                 pip: 25.1
2025-07-01 12:06:15,988:INFO:          setuptools: 78.1.1
2025-07-01 12:06:15,988:INFO:             pycaret: 3.3.2
2025-07-01 12:06:15,988:INFO:             IPython: 9.3.0
2025-07-01 12:06:15,988:INFO:          ipywidgets: 8.1.7
2025-07-01 12:06:15,988:INFO:                tqdm: 4.67.1
2025-07-01 12:06:15,989:INFO:               numpy: 1.26.4
2025-07-01 12:06:15,989:INFO:              pandas: 2.1.4
2025-07-01 12:06:15,989:INFO:              jinja2: 3.1.6
2025-07-01 12:06:15,989:INFO:               scipy: 1.11.4
2025-07-01 12:06:15,989:INFO:              joblib: 1.3.2
2025-07-01 12:06:15,989:INFO:             sklearn: 1.4.2
2025-07-01 12:06:15,989:INFO:                pyod: 2.0.5
2025-07-01 12:06:15,989:INFO:            imblearn: 0.13.0
2025-07-01 12:06:15,989:INFO:   category_encoders: 2.7.0
2025-07-01 12:06:15,989:INFO:            lightgbm: 4.6.0
2025-07-01 12:06:15,989:INFO:               numba: 0.61.0
2025-07-01 12:06:15,989:INFO:            requests: 2.32.4
2025-07-01 12:06:15,989:INFO:          matplotlib: 3.7.5
2025-07-01 12:06:15,989:INFO:          scikitplot: 0.3.7
2025-07-01 12:06:15,989:INFO:         yellowbrick: 1.5
2025-07-01 12:06:15,989:INFO:              plotly: 5.24.1
2025-07-01 12:06:15,989:INFO:    plotly-resampler: Not installed
2025-07-01 12:06:15,989:INFO:             kaleido: 1.0.0
2025-07-01 12:06:15,989:INFO:           schemdraw: 0.15
2025-07-01 12:06:15,989:INFO:         statsmodels: 0.14.4
2025-07-01 12:06:15,989:INFO:              sktime: 0.26.0
2025-07-01 12:06:15,989:INFO:               tbats: 1.1.3
2025-07-01 12:06:15,989:INFO:            pmdarima: 2.0.4
2025-07-01 12:06:15,989:INFO:              psutil: 7.0.0
2025-07-01 12:06:15,989:INFO:          markupsafe: 3.0.2
2025-07-01 12:06:15,989:INFO:             pickle5: Not installed
2025-07-01 12:06:15,989:INFO:         cloudpickle: 3.1.1
2025-07-01 12:06:15,989:INFO:         deprecation: 2.1.0
2025-07-01 12:06:15,989:INFO:              xxhash: 3.5.0
2025-07-01 12:06:15,989:INFO:           wurlitzer: Not installed
2025-07-01 12:06:15,989:INFO:PyCaret optional dependencies:
2025-07-01 12:06:15,989:INFO:                shap: Not installed
2025-07-01 12:06:15,990:INFO:           interpret: Not installed
2025-07-01 12:06:15,990:INFO:                umap: Not installed
2025-07-01 12:06:15,990:INFO:     ydata_profiling: 4.16.1
2025-07-01 12:06:15,990:INFO:  explainerdashboard: Not installed
2025-07-01 12:06:15,990:INFO:             autoviz: Not installed
2025-07-01 12:06:15,990:INFO:           fairlearn: Not installed
2025-07-01 12:06:15,990:INFO:          deepchecks: Not installed
2025-07-01 12:06:15,990:INFO:             xgboost: 3.0.2
2025-07-01 12:06:15,990:INFO:            catboost: Not installed
2025-07-01 12:06:15,990:INFO:              kmodes: Not installed
2025-07-01 12:06:15,990:INFO:             mlxtend: Not installed
2025-07-01 12:06:15,990:INFO:       statsforecast: Not installed
2025-07-01 12:06:15,990:INFO:        tune_sklearn: Not installed
2025-07-01 12:06:15,990:INFO:                 ray: Not installed
2025-07-01 12:06:15,990:INFO:            hyperopt: Not installed
2025-07-01 12:06:15,990:INFO:              optuna: Not installed
2025-07-01 12:06:15,990:INFO:               skopt: Not installed
2025-07-01 12:06:15,990:INFO:              mlflow: Not installed
2025-07-01 12:06:15,990:INFO:              gradio: Not installed
2025-07-01 12:06:15,990:INFO:             fastapi: Not installed
2025-07-01 12:06:15,990:INFO:             uvicorn: Not installed
2025-07-01 12:06:15,990:INFO:              m2cgen: Not installed
2025-07-01 12:06:15,990:INFO:           evidently: Not installed
2025-07-01 12:06:15,990:INFO:               fugue: Not installed
2025-07-01 12:06:15,990:INFO:           streamlit: Not installed
2025-07-01 12:06:15,990:INFO:             prophet: Not installed
2025-07-01 12:06:15,990:INFO:None
2025-07-01 12:06:15,990:INFO:Set up data.
2025-07-01 12:06:15,998:INFO:Set up folding strategy.
2025-07-01 12:06:15,999:INFO:Set up train/test split.
2025-07-01 12:06:16,005:INFO:Set up index.
2025-07-01 12:06:16,006:INFO:Assigning column types.
2025-07-01 12:06:16,011:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-07-01 12:06:16,047:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-01 12:06:16,048:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-01 12:06:16,073:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 12:06:16,077:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 12:06:16,115:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-01 12:06:16,116:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-01 12:06:16,141:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 12:06:16,143:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 12:06:16,144:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-07-01 12:06:16,183:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-01 12:06:16,214:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 12:06:16,217:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 12:06:16,257:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-01 12:06:16,285:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 12:06:16,290:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 12:06:16,290:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-07-01 12:06:16,367:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 12:06:16,370:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 12:06:16,436:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 12:06:16,438:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 12:06:16,439:INFO:Preparing preprocessing pipeline...
2025-07-01 12:06:16,443:INFO:Finished creating preprocessing pipeline.
2025-07-01 12:06:16,443:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\YOGA\AppData\Local\Temp\joblib),
         steps=[('placeholder', None)], verbose=False)
2025-07-01 12:06:16,443:INFO:Creating final display dataframe.
2025-07-01 12:06:16,478:INFO:Setup _display_container:                     Description              Value
0                    Session id                  2
1                        Target  Target_Churn_True
2                   Target type             Binary
3           Original data shape          (840, 20)
4        Transformed data shape          (840, 20)
5   Transformed train set shape          (588, 20)
6    Transformed test set shape          (252, 20)
7              Numeric features                 19
8                    Preprocess               True
9               Imputation type               None
10               Fold Generator    StratifiedKFold
11                  Fold Number                 10
12                     CPU Jobs                 -1
13                      Use GPU              False
14               Log Experiment              False
15              Experiment Name   clf-default-name
16                          USI               0697
2025-07-01 12:06:16,555:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 12:06:16,557:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 12:06:16,627:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 12:06:16,630:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 12:06:16,631:INFO:setup() successfully completed in 0.65s...............
2025-07-01 12:06:16,632:INFO:Initializing compare_models()
2025-07-01 12:06:16,632:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DAC4BFD0>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000231DAC4BFD0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2025-07-01 12:06:16,632:INFO:Checking exceptions
2025-07-01 12:06:16,636:INFO:Preparing display monitor
2025-07-01 12:06:16,660:INFO:Initializing Logistic Regression
2025-07-01 12:06:16,661:INFO:Total runtime is 1.6673405965169272e-05 minutes
2025-07-01 12:06:16,665:INFO:SubProcess create_model() called ==================================
2025-07-01 12:06:16,665:INFO:Initializing create_model()
2025-07-01 12:06:16,665:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DAC4BFD0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231DFEE4050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 12:06:16,666:INFO:Checking exceptions
2025-07-01 12:06:16,666:INFO:Importing libraries
2025-07-01 12:06:16,666:INFO:Copying training dataset
2025-07-01 12:06:16,672:INFO:Defining folds
2025-07-01 12:06:16,672:INFO:Declaring metric variables
2025-07-01 12:06:16,677:INFO:Importing untrained model
2025-07-01 12:06:16,683:INFO:Logistic Regression Imported successfully
2025-07-01 12:06:16,692:INFO:Starting cross validation
2025-07-01 12:06:16,693:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 12:06:16,829:INFO:Calculating mean and std
2025-07-01 12:06:16,830:INFO:Creating metrics dataframe
2025-07-01 12:06:16,833:INFO:Uploading results into container
2025-07-01 12:06:16,834:INFO:Uploading model into container now
2025-07-01 12:06:16,834:INFO:_master_model_container: 1
2025-07-01 12:06:16,834:INFO:_display_container: 2
2025-07-01 12:06:16,835:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-07-01 12:06:16,835:INFO:create_model() successfully completed......................................
2025-07-01 12:06:17,096:INFO:SubProcess create_model() end ==================================
2025-07-01 12:06:17,096:INFO:Creating metrics dataframe
2025-07-01 12:06:17,104:INFO:Initializing K Neighbors Classifier
2025-07-01 12:06:17,104:INFO:Total runtime is 0.007406155268351237 minutes
2025-07-01 12:06:17,108:INFO:SubProcess create_model() called ==================================
2025-07-01 12:06:17,109:INFO:Initializing create_model()
2025-07-01 12:06:17,110:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DAC4BFD0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231DFEE4050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 12:06:17,110:INFO:Checking exceptions
2025-07-01 12:06:17,110:INFO:Importing libraries
2025-07-01 12:06:17,110:INFO:Copying training dataset
2025-07-01 12:06:17,116:INFO:Defining folds
2025-07-01 12:06:17,116:INFO:Declaring metric variables
2025-07-01 12:06:17,120:INFO:Importing untrained model
2025-07-01 12:06:17,127:INFO:K Neighbors Classifier Imported successfully
2025-07-01 12:06:17,148:INFO:Starting cross validation
2025-07-01 12:06:17,152:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 12:06:17,327:INFO:Calculating mean and std
2025-07-01 12:06:17,328:INFO:Creating metrics dataframe
2025-07-01 12:06:17,334:INFO:Uploading results into container
2025-07-01 12:06:17,335:INFO:Uploading model into container now
2025-07-01 12:06:17,336:INFO:_master_model_container: 2
2025-07-01 12:06:17,336:INFO:_display_container: 2
2025-07-01 12:06:17,336:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-07-01 12:06:17,337:INFO:create_model() successfully completed......................................
2025-07-01 12:06:17,595:INFO:SubProcess create_model() end ==================================
2025-07-01 12:06:17,595:INFO:Creating metrics dataframe
2025-07-01 12:06:17,605:INFO:Initializing Naive Bayes
2025-07-01 12:06:17,605:INFO:Total runtime is 0.01575628121693929 minutes
2025-07-01 12:06:17,611:INFO:SubProcess create_model() called ==================================
2025-07-01 12:06:17,611:INFO:Initializing create_model()
2025-07-01 12:06:17,611:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DAC4BFD0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231DFEE4050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 12:06:17,611:INFO:Checking exceptions
2025-07-01 12:06:17,611:INFO:Importing libraries
2025-07-01 12:06:17,611:INFO:Copying training dataset
2025-07-01 12:06:17,616:INFO:Defining folds
2025-07-01 12:06:17,616:INFO:Declaring metric variables
2025-07-01 12:06:17,623:INFO:Importing untrained model
2025-07-01 12:06:17,628:INFO:Naive Bayes Imported successfully
2025-07-01 12:06:17,638:INFO:Starting cross validation
2025-07-01 12:06:17,641:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 12:06:17,738:INFO:Calculating mean and std
2025-07-01 12:06:17,741:INFO:Creating metrics dataframe
2025-07-01 12:06:17,742:INFO:Uploading results into container
2025-07-01 12:06:17,743:INFO:Uploading model into container now
2025-07-01 12:06:17,743:INFO:_master_model_container: 3
2025-07-01 12:06:17,744:INFO:_display_container: 2
2025-07-01 12:06:17,744:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-07-01 12:06:17,744:INFO:create_model() successfully completed......................................
2025-07-01 12:06:17,958:INFO:SubProcess create_model() end ==================================
2025-07-01 12:06:17,958:INFO:Creating metrics dataframe
2025-07-01 12:06:17,965:INFO:Initializing Decision Tree Classifier
2025-07-01 12:06:17,965:INFO:Total runtime is 0.021760443846384682 minutes
2025-07-01 12:06:17,972:INFO:SubProcess create_model() called ==================================
2025-07-01 12:06:17,972:INFO:Initializing create_model()
2025-07-01 12:06:17,972:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DAC4BFD0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231DFEE4050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 12:06:17,972:INFO:Checking exceptions
2025-07-01 12:06:17,972:INFO:Importing libraries
2025-07-01 12:06:17,972:INFO:Copying training dataset
2025-07-01 12:06:17,978:INFO:Defining folds
2025-07-01 12:06:17,978:INFO:Declaring metric variables
2025-07-01 12:06:17,981:INFO:Importing untrained model
2025-07-01 12:06:17,986:INFO:Decision Tree Classifier Imported successfully
2025-07-01 12:06:17,997:INFO:Starting cross validation
2025-07-01 12:06:17,998:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 12:06:18,092:INFO:Calculating mean and std
2025-07-01 12:06:18,093:INFO:Creating metrics dataframe
2025-07-01 12:06:18,095:INFO:Uploading results into container
2025-07-01 12:06:18,095:INFO:Uploading model into container now
2025-07-01 12:06:18,095:INFO:_master_model_container: 4
2025-07-01 12:06:18,096:INFO:_display_container: 2
2025-07-01 12:06:18,096:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2, splitter='best')
2025-07-01 12:06:18,096:INFO:create_model() successfully completed......................................
2025-07-01 12:06:18,307:INFO:SubProcess create_model() end ==================================
2025-07-01 12:06:18,307:INFO:Creating metrics dataframe
2025-07-01 12:06:18,314:INFO:Initializing SVM - Linear Kernel
2025-07-01 12:06:18,314:INFO:Total runtime is 0.027573585510253903 minutes
2025-07-01 12:06:18,318:INFO:SubProcess create_model() called ==================================
2025-07-01 12:06:18,319:INFO:Initializing create_model()
2025-07-01 12:06:18,319:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DAC4BFD0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231DFEE4050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 12:06:18,319:INFO:Checking exceptions
2025-07-01 12:06:18,319:INFO:Importing libraries
2025-07-01 12:06:18,319:INFO:Copying training dataset
2025-07-01 12:06:18,326:INFO:Defining folds
2025-07-01 12:06:18,326:INFO:Declaring metric variables
2025-07-01 12:06:18,330:INFO:Importing untrained model
2025-07-01 12:06:18,335:INFO:SVM - Linear Kernel Imported successfully
2025-07-01 12:06:18,346:INFO:Starting cross validation
2025-07-01 12:06:18,347:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 12:06:18,448:INFO:Calculating mean and std
2025-07-01 12:06:18,450:INFO:Creating metrics dataframe
2025-07-01 12:06:18,454:INFO:Uploading results into container
2025-07-01 12:06:18,455:INFO:Uploading model into container now
2025-07-01 12:06:18,455:INFO:_master_model_container: 5
2025-07-01 12:06:18,455:INFO:_display_container: 2
2025-07-01 12:06:18,456:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=2, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-07-01 12:06:18,456:INFO:create_model() successfully completed......................................
2025-07-01 12:06:18,661:INFO:SubProcess create_model() end ==================================
2025-07-01 12:06:18,661:INFO:Creating metrics dataframe
2025-07-01 12:06:18,671:INFO:Initializing Ridge Classifier
2025-07-01 12:06:18,671:INFO:Total runtime is 0.03351626396179199 minutes
2025-07-01 12:06:18,674:INFO:SubProcess create_model() called ==================================
2025-07-01 12:06:18,675:INFO:Initializing create_model()
2025-07-01 12:06:18,675:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DAC4BFD0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231DFEE4050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 12:06:18,675:INFO:Checking exceptions
2025-07-01 12:06:18,675:INFO:Importing libraries
2025-07-01 12:06:18,675:INFO:Copying training dataset
2025-07-01 12:06:18,680:INFO:Defining folds
2025-07-01 12:06:18,680:INFO:Declaring metric variables
2025-07-01 12:06:18,685:INFO:Importing untrained model
2025-07-01 12:06:18,692:INFO:Ridge Classifier Imported successfully
2025-07-01 12:06:18,700:INFO:Starting cross validation
2025-07-01 12:06:18,701:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 12:06:18,787:INFO:Calculating mean and std
2025-07-01 12:06:18,788:INFO:Creating metrics dataframe
2025-07-01 12:06:18,790:INFO:Uploading results into container
2025-07-01 12:06:18,791:INFO:Uploading model into container now
2025-07-01 12:06:18,791:INFO:_master_model_container: 6
2025-07-01 12:06:18,791:INFO:_display_container: 2
2025-07-01 12:06:18,792:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=2, solver='auto',
                tol=0.0001)
2025-07-01 12:06:18,792:INFO:create_model() successfully completed......................................
2025-07-01 12:06:18,965:INFO:SubProcess create_model() end ==================================
2025-07-01 12:06:18,965:INFO:Creating metrics dataframe
2025-07-01 12:06:18,974:INFO:Initializing Random Forest Classifier
2025-07-01 12:06:18,974:INFO:Total runtime is 0.03857266108194987 minutes
2025-07-01 12:06:18,978:INFO:SubProcess create_model() called ==================================
2025-07-01 12:06:18,978:INFO:Initializing create_model()
2025-07-01 12:06:18,978:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DAC4BFD0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231DFEE4050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 12:06:18,978:INFO:Checking exceptions
2025-07-01 12:06:18,978:INFO:Importing libraries
2025-07-01 12:06:18,978:INFO:Copying training dataset
2025-07-01 12:06:18,984:INFO:Defining folds
2025-07-01 12:06:18,984:INFO:Declaring metric variables
2025-07-01 12:06:18,989:INFO:Importing untrained model
2025-07-01 12:06:18,993:INFO:Random Forest Classifier Imported successfully
2025-07-01 12:06:19,002:INFO:Starting cross validation
2025-07-01 12:06:19,003:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 12:06:19,892:INFO:Calculating mean and std
2025-07-01 12:06:19,893:INFO:Creating metrics dataframe
2025-07-01 12:06:19,895:INFO:Uploading results into container
2025-07-01 12:06:19,896:INFO:Uploading model into container now
2025-07-01 12:06:19,896:INFO:_master_model_container: 7
2025-07-01 12:06:19,896:INFO:_display_container: 2
2025-07-01 12:06:19,897:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=2, verbose=0,
                       warm_start=False)
2025-07-01 12:06:19,897:INFO:create_model() successfully completed......................................
2025-07-01 12:06:20,109:INFO:SubProcess create_model() end ==================================
2025-07-01 12:06:20,109:INFO:Creating metrics dataframe
2025-07-01 12:06:20,122:INFO:Initializing Quadratic Discriminant Analysis
2025-07-01 12:06:20,122:INFO:Total runtime is 0.057711199919382734 minutes
2025-07-01 12:06:20,127:INFO:SubProcess create_model() called ==================================
2025-07-01 12:06:20,127:INFO:Initializing create_model()
2025-07-01 12:06:20,128:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DAC4BFD0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231DFEE4050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 12:06:20,128:INFO:Checking exceptions
2025-07-01 12:06:20,128:INFO:Importing libraries
2025-07-01 12:06:20,128:INFO:Copying training dataset
2025-07-01 12:06:20,135:INFO:Defining folds
2025-07-01 12:06:20,135:INFO:Declaring metric variables
2025-07-01 12:06:20,141:INFO:Importing untrained model
2025-07-01 12:06:20,146:INFO:Quadratic Discriminant Analysis Imported successfully
2025-07-01 12:06:20,156:INFO:Starting cross validation
2025-07-01 12:06:20,158:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 12:06:20,180:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 12:06:20,182:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 12:06:20,185:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 12:06:20,187:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 12:06:20,189:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 12:06:20,193:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 12:06:20,204:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 12:06:20,219:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 12:06:20,221:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 12:06:20,223:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 12:06:20,252:INFO:Calculating mean and std
2025-07-01 12:06:20,253:INFO:Creating metrics dataframe
2025-07-01 12:06:20,254:INFO:Uploading results into container
2025-07-01 12:06:20,255:INFO:Uploading model into container now
2025-07-01 12:06:20,255:INFO:_master_model_container: 8
2025-07-01 12:06:20,256:INFO:_display_container: 2
2025-07-01 12:06:20,256:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-07-01 12:06:20,256:INFO:create_model() successfully completed......................................
2025-07-01 12:06:20,501:INFO:SubProcess create_model() end ==================================
2025-07-01 12:06:20,502:INFO:Creating metrics dataframe
2025-07-01 12:06:20,519:INFO:Initializing Ada Boost Classifier
2025-07-01 12:06:20,519:INFO:Total runtime is 0.0643219272295634 minutes
2025-07-01 12:06:20,526:INFO:SubProcess create_model() called ==================================
2025-07-01 12:06:20,527:INFO:Initializing create_model()
2025-07-01 12:06:20,527:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DAC4BFD0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231DFEE4050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 12:06:20,527:INFO:Checking exceptions
2025-07-01 12:06:20,527:INFO:Importing libraries
2025-07-01 12:06:20,527:INFO:Copying training dataset
2025-07-01 12:06:20,542:INFO:Defining folds
2025-07-01 12:06:20,542:INFO:Declaring metric variables
2025-07-01 12:06:20,549:INFO:Importing untrained model
2025-07-01 12:06:20,555:INFO:Ada Boost Classifier Imported successfully
2025-07-01 12:06:20,627:INFO:Starting cross validation
2025-07-01 12:06:20,629:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 12:06:20,650:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 12:06:20,656:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 12:06:20,657:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 12:06:20,666:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 12:06:20,672:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 12:06:20,677:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 12:06:20,679:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 12:06:20,707:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 12:06:20,963:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 12:06:20,976:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 12:06:21,242:INFO:Calculating mean and std
2025-07-01 12:06:21,244:INFO:Creating metrics dataframe
2025-07-01 12:06:21,246:INFO:Uploading results into container
2025-07-01 12:06:21,247:INFO:Uploading model into container now
2025-07-01 12:06:21,247:INFO:_master_model_container: 9
2025-07-01 12:06:21,247:INFO:_display_container: 2
2025-07-01 12:06:21,248:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=2)
2025-07-01 12:06:21,248:INFO:create_model() successfully completed......................................
2025-07-01 12:06:21,544:INFO:SubProcess create_model() end ==================================
2025-07-01 12:06:21,544:INFO:Creating metrics dataframe
2025-07-01 12:06:21,559:INFO:Initializing Gradient Boosting Classifier
2025-07-01 12:06:21,559:INFO:Total runtime is 0.08166342973709106 minutes
2025-07-01 12:06:21,563:INFO:SubProcess create_model() called ==================================
2025-07-01 12:06:21,563:INFO:Initializing create_model()
2025-07-01 12:06:21,563:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DAC4BFD0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231DFEE4050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 12:06:21,563:INFO:Checking exceptions
2025-07-01 12:06:21,563:INFO:Importing libraries
2025-07-01 12:06:21,564:INFO:Copying training dataset
2025-07-01 12:06:21,576:INFO:Defining folds
2025-07-01 12:06:21,576:INFO:Declaring metric variables
2025-07-01 12:06:21,581:INFO:Importing untrained model
2025-07-01 12:06:21,586:INFO:Gradient Boosting Classifier Imported successfully
2025-07-01 12:06:21,598:INFO:Starting cross validation
2025-07-01 12:06:21,600:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 12:06:22,543:INFO:Calculating mean and std
2025-07-01 12:06:22,544:INFO:Creating metrics dataframe
2025-07-01 12:06:22,546:INFO:Uploading results into container
2025-07-01 12:06:22,546:INFO:Uploading model into container now
2025-07-01 12:06:22,547:INFO:_master_model_container: 10
2025-07-01 12:06:22,547:INFO:_display_container: 2
2025-07-01 12:06:22,547:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-07-01 12:06:22,547:INFO:create_model() successfully completed......................................
2025-07-01 12:06:22,762:INFO:SubProcess create_model() end ==================================
2025-07-01 12:06:22,762:INFO:Creating metrics dataframe
2025-07-01 12:06:22,777:INFO:Initializing Linear Discriminant Analysis
2025-07-01 12:06:22,777:INFO:Total runtime is 0.10195380449295044 minutes
2025-07-01 12:06:22,781:INFO:SubProcess create_model() called ==================================
2025-07-01 12:06:22,781:INFO:Initializing create_model()
2025-07-01 12:06:22,782:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DAC4BFD0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231DFEE4050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 12:06:22,782:INFO:Checking exceptions
2025-07-01 12:06:22,782:INFO:Importing libraries
2025-07-01 12:06:22,782:INFO:Copying training dataset
2025-07-01 12:06:22,789:INFO:Defining folds
2025-07-01 12:06:22,789:INFO:Declaring metric variables
2025-07-01 12:06:22,795:INFO:Importing untrained model
2025-07-01 12:06:22,798:INFO:Linear Discriminant Analysis Imported successfully
2025-07-01 12:06:22,809:INFO:Starting cross validation
2025-07-01 12:06:22,810:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 12:06:22,896:INFO:Calculating mean and std
2025-07-01 12:06:22,897:INFO:Creating metrics dataframe
2025-07-01 12:06:22,899:INFO:Uploading results into container
2025-07-01 12:06:22,900:INFO:Uploading model into container now
2025-07-01 12:06:22,901:INFO:_master_model_container: 11
2025-07-01 12:06:22,901:INFO:_display_container: 2
2025-07-01 12:06:22,902:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-07-01 12:06:22,902:INFO:create_model() successfully completed......................................
2025-07-01 12:06:23,130:INFO:SubProcess create_model() end ==================================
2025-07-01 12:06:23,130:INFO:Creating metrics dataframe
2025-07-01 12:06:23,143:INFO:Initializing Extra Trees Classifier
2025-07-01 12:06:23,143:INFO:Total runtime is 0.10805185238520304 minutes
2025-07-01 12:06:23,147:INFO:SubProcess create_model() called ==================================
2025-07-01 12:06:23,147:INFO:Initializing create_model()
2025-07-01 12:06:23,147:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DAC4BFD0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231DFEE4050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 12:06:23,147:INFO:Checking exceptions
2025-07-01 12:06:23,147:INFO:Importing libraries
2025-07-01 12:06:23,147:INFO:Copying training dataset
2025-07-01 12:06:23,155:INFO:Defining folds
2025-07-01 12:06:23,156:INFO:Declaring metric variables
2025-07-01 12:06:23,161:INFO:Importing untrained model
2025-07-01 12:06:23,165:INFO:Extra Trees Classifier Imported successfully
2025-07-01 12:06:23,178:INFO:Starting cross validation
2025-07-01 12:06:23,180:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 12:06:23,882:INFO:Calculating mean and std
2025-07-01 12:06:23,886:INFO:Creating metrics dataframe
2025-07-01 12:06:23,888:INFO:Uploading results into container
2025-07-01 12:06:23,889:INFO:Uploading model into container now
2025-07-01 12:06:23,889:INFO:_master_model_container: 12
2025-07-01 12:06:23,889:INFO:_display_container: 2
2025-07-01 12:06:23,890:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=2, verbose=0,
                     warm_start=False)
2025-07-01 12:06:23,890:INFO:create_model() successfully completed......................................
2025-07-01 12:06:24,092:INFO:SubProcess create_model() end ==================================
2025-07-01 12:06:24,092:INFO:Creating metrics dataframe
2025-07-01 12:06:24,103:INFO:Initializing Extreme Gradient Boosting
2025-07-01 12:06:24,103:INFO:Total runtime is 0.1240477164586385 minutes
2025-07-01 12:06:24,108:INFO:SubProcess create_model() called ==================================
2025-07-01 12:06:24,108:INFO:Initializing create_model()
2025-07-01 12:06:24,108:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DAC4BFD0>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231DFEE4050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 12:06:24,108:INFO:Checking exceptions
2025-07-01 12:06:24,108:INFO:Importing libraries
2025-07-01 12:06:24,109:INFO:Copying training dataset
2025-07-01 12:06:24,114:INFO:Defining folds
2025-07-01 12:06:24,114:INFO:Declaring metric variables
2025-07-01 12:06:24,120:INFO:Importing untrained model
2025-07-01 12:06:24,125:INFO:Extreme Gradient Boosting Imported successfully
2025-07-01 12:06:24,135:INFO:Starting cross validation
2025-07-01 12:06:24,136:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 12:06:24,575:INFO:Calculating mean and std
2025-07-01 12:06:24,577:INFO:Creating metrics dataframe
2025-07-01 12:06:24,578:INFO:Uploading results into container
2025-07-01 12:06:24,579:INFO:Uploading model into container now
2025-07-01 12:06:24,579:INFO:_master_model_container: 13
2025-07-01 12:06:24,580:INFO:_display_container: 2
2025-07-01 12:06:24,581:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-07-01 12:06:24,581:INFO:create_model() successfully completed......................................
2025-07-01 12:06:24,808:INFO:SubProcess create_model() end ==================================
2025-07-01 12:06:24,808:INFO:Creating metrics dataframe
2025-07-01 12:06:24,822:INFO:Initializing Light Gradient Boosting Machine
2025-07-01 12:06:24,822:INFO:Total runtime is 0.13604079882303874 minutes
2025-07-01 12:06:24,825:INFO:SubProcess create_model() called ==================================
2025-07-01 12:06:24,825:INFO:Initializing create_model()
2025-07-01 12:06:24,826:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DAC4BFD0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231DFEE4050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 12:06:24,826:INFO:Checking exceptions
2025-07-01 12:06:24,826:INFO:Importing libraries
2025-07-01 12:06:24,826:INFO:Copying training dataset
2025-07-01 12:06:24,835:INFO:Defining folds
2025-07-01 12:06:24,835:INFO:Declaring metric variables
2025-07-01 12:06:24,838:INFO:Importing untrained model
2025-07-01 12:06:24,843:INFO:Light Gradient Boosting Machine Imported successfully
2025-07-01 12:06:24,851:INFO:Starting cross validation
2025-07-01 12:06:24,852:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 12:06:25,971:INFO:Calculating mean and std
2025-07-01 12:06:25,973:INFO:Creating metrics dataframe
2025-07-01 12:06:25,976:INFO:Uploading results into container
2025-07-01 12:06:25,977:INFO:Uploading model into container now
2025-07-01 12:06:25,978:INFO:_master_model_container: 14
2025-07-01 12:06:25,978:INFO:_display_container: 2
2025-07-01 12:06:25,979:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-07-01 12:06:25,979:INFO:create_model() successfully completed......................................
2025-07-01 12:06:26,185:INFO:SubProcess create_model() end ==================================
2025-07-01 12:06:26,186:INFO:Creating metrics dataframe
2025-07-01 12:06:26,196:INFO:Initializing Dummy Classifier
2025-07-01 12:06:26,196:INFO:Total runtime is 0.1589397112528483 minutes
2025-07-01 12:06:26,200:INFO:SubProcess create_model() called ==================================
2025-07-01 12:06:26,201:INFO:Initializing create_model()
2025-07-01 12:06:26,201:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DAC4BFD0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231DFEE4050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 12:06:26,201:INFO:Checking exceptions
2025-07-01 12:06:26,201:INFO:Importing libraries
2025-07-01 12:06:26,201:INFO:Copying training dataset
2025-07-01 12:06:26,206:INFO:Defining folds
2025-07-01 12:06:26,207:INFO:Declaring metric variables
2025-07-01 12:06:26,210:INFO:Importing untrained model
2025-07-01 12:06:26,214:INFO:Dummy Classifier Imported successfully
2025-07-01 12:06:26,222:INFO:Starting cross validation
2025-07-01 12:06:26,223:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 12:06:26,251:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-01 12:06:26,252:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-01 12:06:26,253:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-01 12:06:26,257:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-01 12:06:26,279:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-01 12:06:26,281:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-01 12:06:26,297:INFO:Calculating mean and std
2025-07-01 12:06:26,297:INFO:Creating metrics dataframe
2025-07-01 12:06:26,301:INFO:Uploading results into container
2025-07-01 12:06:26,301:INFO:Uploading model into container now
2025-07-01 12:06:26,302:INFO:_master_model_container: 15
2025-07-01 12:06:26,302:INFO:_display_container: 2
2025-07-01 12:06:26,302:INFO:DummyClassifier(constant=None, random_state=2, strategy='prior')
2025-07-01 12:06:26,302:INFO:create_model() successfully completed......................................
2025-07-01 12:06:26,480:INFO:SubProcess create_model() end ==================================
2025-07-01 12:06:26,480:INFO:Creating metrics dataframe
2025-07-01 12:06:26,494:WARNING:d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-07-01 12:06:26,504:INFO:Initializing create_model()
2025-07-01 12:06:26,505:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DAC4BFD0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=2, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 12:06:26,505:INFO:Checking exceptions
2025-07-01 12:06:26,506:INFO:Importing libraries
2025-07-01 12:06:26,507:INFO:Copying training dataset
2025-07-01 12:06:26,510:INFO:Defining folds
2025-07-01 12:06:26,511:INFO:Declaring metric variables
2025-07-01 12:06:26,511:INFO:Importing untrained model
2025-07-01 12:06:26,511:INFO:Declaring custom model
2025-07-01 12:06:26,511:INFO:Extra Trees Classifier Imported successfully
2025-07-01 12:06:26,512:INFO:Cross validation set to False
2025-07-01 12:06:26,512:INFO:Fitting Model
2025-07-01 12:06:26,643:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=2, verbose=0,
                     warm_start=False)
2025-07-01 12:06:26,643:INFO:create_model() successfully completed......................................
2025-07-01 12:06:26,845:INFO:_master_model_container: 15
2025-07-01 12:06:26,845:INFO:_display_container: 2
2025-07-01 12:06:26,846:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=2, verbose=0,
                     warm_start=False)
2025-07-01 12:06:26,846:INFO:compare_models() successfully completed......................................
2025-07-01 12:06:27,098:INFO:PyCaret ClassificationExperiment
2025-07-01 12:06:27,099:INFO:Logging name: clf-default-name
2025-07-01 12:06:27,099:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-07-01 12:06:27,099:INFO:version 3.3.2
2025-07-01 12:06:27,099:INFO:Initializing setup()
2025-07-01 12:06:27,099:INFO:self.USI: 6b09
2025-07-01 12:06:27,099:INFO:self._variable_keys: {'fix_imbalance', 'data', 'is_multiclass', 'y_test', 'X_train', 'log_plots_param', 'X', 'X_test', 'logging_param', 'n_jobs_param', 'gpu_param', 'idx', 'html_param', 'fold_generator', '_ml_usecase', 'exp_id', 'USI', '_available_plots', 'gpu_n_jobs_param', 'pipeline', 'y_train', 'fold_groups_param', 'y', 'fold_shuffle_param', 'target_param', 'memory', 'seed', 'exp_name_log'}
2025-07-01 12:06:27,099:INFO:Checking environment
2025-07-01 12:06:27,099:INFO:python_version: 3.11.13
2025-07-01 12:06:27,099:INFO:python_build: ('main', 'Jun  5 2025 13:03:15')
2025-07-01 12:06:27,099:INFO:machine: AMD64
2025-07-01 12:06:27,099:INFO:platform: Windows-10-10.0.22631-SP0
2025-07-01 12:06:27,105:INFO:Memory: svmem(total=12674457600, available=1418887168, percent=88.8, used=11255570432, free=1418887168)
2025-07-01 12:06:27,105:INFO:Physical Core: 4
2025-07-01 12:06:27,105:INFO:Logical Core: 8
2025-07-01 12:06:27,105:INFO:Checking libraries
2025-07-01 12:06:27,105:INFO:System:
2025-07-01 12:06:27,105:INFO:    python: 3.11.13 | packaged by Anaconda, Inc. | (main, Jun  5 2025, 13:03:15) [MSC v.1929 64 bit (AMD64)]
2025-07-01 12:06:27,105:INFO:executable: d:\ML_notes\.conda\python.exe
2025-07-01 12:06:27,105:INFO:   machine: Windows-10-10.0.22631-SP0
2025-07-01 12:06:27,106:INFO:PyCaret required dependencies:
2025-07-01 12:06:27,106:INFO:                 pip: 25.1
2025-07-01 12:06:27,106:INFO:          setuptools: 78.1.1
2025-07-01 12:06:27,106:INFO:             pycaret: 3.3.2
2025-07-01 12:06:27,106:INFO:             IPython: 9.3.0
2025-07-01 12:06:27,106:INFO:          ipywidgets: 8.1.7
2025-07-01 12:06:27,106:INFO:                tqdm: 4.67.1
2025-07-01 12:06:27,106:INFO:               numpy: 1.26.4
2025-07-01 12:06:27,106:INFO:              pandas: 2.1.4
2025-07-01 12:06:27,106:INFO:              jinja2: 3.1.6
2025-07-01 12:06:27,106:INFO:               scipy: 1.11.4
2025-07-01 12:06:27,106:INFO:              joblib: 1.3.2
2025-07-01 12:06:27,106:INFO:             sklearn: 1.4.2
2025-07-01 12:06:27,107:INFO:                pyod: 2.0.5
2025-07-01 12:06:27,107:INFO:            imblearn: 0.13.0
2025-07-01 12:06:27,107:INFO:   category_encoders: 2.7.0
2025-07-01 12:06:27,107:INFO:            lightgbm: 4.6.0
2025-07-01 12:06:27,107:INFO:               numba: 0.61.0
2025-07-01 12:06:27,107:INFO:            requests: 2.32.4
2025-07-01 12:06:27,107:INFO:          matplotlib: 3.7.5
2025-07-01 12:06:27,107:INFO:          scikitplot: 0.3.7
2025-07-01 12:06:27,107:INFO:         yellowbrick: 1.5
2025-07-01 12:06:27,107:INFO:              plotly: 5.24.1
2025-07-01 12:06:27,107:INFO:    plotly-resampler: Not installed
2025-07-01 12:06:27,107:INFO:             kaleido: 1.0.0
2025-07-01 12:06:27,107:INFO:           schemdraw: 0.15
2025-07-01 12:06:27,107:INFO:         statsmodels: 0.14.4
2025-07-01 12:06:27,107:INFO:              sktime: 0.26.0
2025-07-01 12:06:27,107:INFO:               tbats: 1.1.3
2025-07-01 12:06:27,107:INFO:            pmdarima: 2.0.4
2025-07-01 12:06:27,107:INFO:              psutil: 7.0.0
2025-07-01 12:06:27,107:INFO:          markupsafe: 3.0.2
2025-07-01 12:06:27,107:INFO:             pickle5: Not installed
2025-07-01 12:06:27,107:INFO:         cloudpickle: 3.1.1
2025-07-01 12:06:27,107:INFO:         deprecation: 2.1.0
2025-07-01 12:06:27,108:INFO:              xxhash: 3.5.0
2025-07-01 12:06:27,108:INFO:           wurlitzer: Not installed
2025-07-01 12:06:27,108:INFO:PyCaret optional dependencies:
2025-07-01 12:06:27,108:INFO:                shap: Not installed
2025-07-01 12:06:27,108:INFO:           interpret: Not installed
2025-07-01 12:06:27,108:INFO:                umap: Not installed
2025-07-01 12:06:27,108:INFO:     ydata_profiling: 4.16.1
2025-07-01 12:06:27,108:INFO:  explainerdashboard: Not installed
2025-07-01 12:06:27,108:INFO:             autoviz: Not installed
2025-07-01 12:06:27,108:INFO:           fairlearn: Not installed
2025-07-01 12:06:27,108:INFO:          deepchecks: Not installed
2025-07-01 12:06:27,108:INFO:             xgboost: 3.0.2
2025-07-01 12:06:27,108:INFO:            catboost: Not installed
2025-07-01 12:06:27,108:INFO:              kmodes: Not installed
2025-07-01 12:06:27,108:INFO:             mlxtend: Not installed
2025-07-01 12:06:27,108:INFO:       statsforecast: Not installed
2025-07-01 12:06:27,108:INFO:        tune_sklearn: Not installed
2025-07-01 12:06:27,108:INFO:                 ray: Not installed
2025-07-01 12:06:27,108:INFO:            hyperopt: Not installed
2025-07-01 12:06:27,109:INFO:              optuna: Not installed
2025-07-01 12:06:27,109:INFO:               skopt: Not installed
2025-07-01 12:06:27,109:INFO:              mlflow: Not installed
2025-07-01 12:06:27,109:INFO:              gradio: Not installed
2025-07-01 12:06:27,109:INFO:             fastapi: Not installed
2025-07-01 12:06:27,109:INFO:             uvicorn: Not installed
2025-07-01 12:06:27,109:INFO:              m2cgen: Not installed
2025-07-01 12:06:27,109:INFO:           evidently: Not installed
2025-07-01 12:06:27,109:INFO:               fugue: Not installed
2025-07-01 12:06:27,109:INFO:           streamlit: Not installed
2025-07-01 12:06:27,109:INFO:             prophet: Not installed
2025-07-01 12:06:27,109:INFO:None
2025-07-01 12:06:27,109:INFO:Set up data.
2025-07-01 12:06:27,115:INFO:Set up folding strategy.
2025-07-01 12:06:27,116:INFO:Set up train/test split.
2025-07-01 12:06:27,122:INFO:Set up index.
2025-07-01 12:06:27,124:INFO:Assigning column types.
2025-07-01 12:06:27,129:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-07-01 12:06:27,199:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-01 12:06:27,200:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-01 12:06:27,230:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 12:06:27,234:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 12:06:27,277:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-01 12:06:27,278:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-01 12:06:27,307:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 12:06:27,310:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 12:06:27,310:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-07-01 12:06:27,360:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-01 12:06:27,387:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 12:06:27,390:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 12:06:27,438:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-01 12:06:27,464:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 12:06:27,467:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 12:06:27,467:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-07-01 12:06:27,537:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 12:06:27,541:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 12:06:27,612:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 12:06:27,615:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 12:06:27,616:INFO:Preparing preprocessing pipeline...
2025-07-01 12:06:27,622:INFO:Finished creating preprocessing pipeline.
2025-07-01 12:06:27,622:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\YOGA\AppData\Local\Temp\joblib),
         steps=[('placeholder', None)], verbose=False)
2025-07-01 12:06:27,622:INFO:Creating final display dataframe.
2025-07-01 12:06:27,658:INFO:Setup _display_container:                     Description              Value
0                    Session id                900
1                        Target  Target_Churn_True
2                   Target type             Binary
3           Original data shape          (840, 20)
4        Transformed data shape          (840, 20)
5   Transformed train set shape          (588, 20)
6    Transformed test set shape          (252, 20)
7              Numeric features                 19
8                    Preprocess               True
9               Imputation type               None
10               Fold Generator    StratifiedKFold
11                  Fold Number                 10
12                     CPU Jobs                 -1
13                      Use GPU              False
14               Log Experiment              False
15              Experiment Name   clf-default-name
16                          USI               6b09
2025-07-01 12:06:27,738:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 12:06:27,742:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 12:06:27,825:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 12:06:27,828:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 12:06:27,829:INFO:setup() successfully completed in 0.73s...............
2025-07-01 12:06:27,830:INFO:Initializing compare_models()
2025-07-01 12:06:27,830:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DD673690>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000231DD673690>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2025-07-01 12:06:27,830:INFO:Checking exceptions
2025-07-01 12:06:27,836:INFO:Preparing display monitor
2025-07-01 12:06:27,870:INFO:Initializing Logistic Regression
2025-07-01 12:06:27,870:INFO:Total runtime is 0.0 minutes
2025-07-01 12:06:27,875:INFO:SubProcess create_model() called ==================================
2025-07-01 12:06:27,875:INFO:Initializing create_model()
2025-07-01 12:06:27,876:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DD673690>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231DFF1BD90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 12:06:27,876:INFO:Checking exceptions
2025-07-01 12:06:27,876:INFO:Importing libraries
2025-07-01 12:06:27,876:INFO:Copying training dataset
2025-07-01 12:06:27,888:INFO:Defining folds
2025-07-01 12:06:27,888:INFO:Declaring metric variables
2025-07-01 12:06:27,893:INFO:Importing untrained model
2025-07-01 12:06:27,901:INFO:Logistic Regression Imported successfully
2025-07-01 12:06:27,914:INFO:Starting cross validation
2025-07-01 12:06:27,915:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 12:06:28,029:INFO:Calculating mean and std
2025-07-01 12:06:28,030:INFO:Creating metrics dataframe
2025-07-01 12:06:28,031:INFO:Uploading results into container
2025-07-01 12:06:28,032:INFO:Uploading model into container now
2025-07-01 12:06:28,032:INFO:_master_model_container: 1
2025-07-01 12:06:28,032:INFO:_display_container: 2
2025-07-01 12:06:28,033:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=900, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-07-01 12:06:28,033:INFO:create_model() successfully completed......................................
2025-07-01 12:06:28,275:INFO:SubProcess create_model() end ==================================
2025-07-01 12:06:28,275:INFO:Creating metrics dataframe
2025-07-01 12:06:28,281:INFO:Initializing K Neighbors Classifier
2025-07-01 12:06:28,281:INFO:Total runtime is 0.006858944892883301 minutes
2025-07-01 12:06:28,288:INFO:SubProcess create_model() called ==================================
2025-07-01 12:06:28,288:INFO:Initializing create_model()
2025-07-01 12:06:28,289:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DD673690>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231DFF1BD90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 12:06:28,289:INFO:Checking exceptions
2025-07-01 12:06:28,289:INFO:Importing libraries
2025-07-01 12:06:28,289:INFO:Copying training dataset
2025-07-01 12:06:28,294:INFO:Defining folds
2025-07-01 12:06:28,294:INFO:Declaring metric variables
2025-07-01 12:06:28,297:INFO:Importing untrained model
2025-07-01 12:06:28,304:INFO:K Neighbors Classifier Imported successfully
2025-07-01 12:06:28,311:INFO:Starting cross validation
2025-07-01 12:06:28,312:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 12:06:28,418:INFO:Calculating mean and std
2025-07-01 12:06:28,419:INFO:Creating metrics dataframe
2025-07-01 12:06:28,421:INFO:Uploading results into container
2025-07-01 12:06:28,422:INFO:Uploading model into container now
2025-07-01 12:06:28,422:INFO:_master_model_container: 2
2025-07-01 12:06:28,422:INFO:_display_container: 2
2025-07-01 12:06:28,423:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-07-01 12:06:28,423:INFO:create_model() successfully completed......................................
2025-07-01 12:06:28,634:INFO:SubProcess create_model() end ==================================
2025-07-01 12:06:28,634:INFO:Creating metrics dataframe
2025-07-01 12:06:28,645:INFO:Initializing Naive Bayes
2025-07-01 12:06:28,645:INFO:Total runtime is 0.012913556893666585 minutes
2025-07-01 12:06:28,648:INFO:SubProcess create_model() called ==================================
2025-07-01 12:06:28,649:INFO:Initializing create_model()
2025-07-01 12:06:28,649:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DD673690>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231DFF1BD90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 12:06:28,649:INFO:Checking exceptions
2025-07-01 12:06:28,649:INFO:Importing libraries
2025-07-01 12:06:28,649:INFO:Copying training dataset
2025-07-01 12:06:28,655:INFO:Defining folds
2025-07-01 12:06:28,655:INFO:Declaring metric variables
2025-07-01 12:06:28,658:INFO:Importing untrained model
2025-07-01 12:06:28,661:INFO:Naive Bayes Imported successfully
2025-07-01 12:06:28,668:INFO:Starting cross validation
2025-07-01 12:06:28,670:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 12:06:28,751:INFO:Calculating mean and std
2025-07-01 12:06:28,752:INFO:Creating metrics dataframe
2025-07-01 12:06:28,752:INFO:Uploading results into container
2025-07-01 12:06:28,753:INFO:Uploading model into container now
2025-07-01 12:06:28,753:INFO:_master_model_container: 3
2025-07-01 12:06:28,753:INFO:_display_container: 2
2025-07-01 12:06:28,753:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-07-01 12:06:28,753:INFO:create_model() successfully completed......................................
2025-07-01 12:06:28,931:INFO:SubProcess create_model() end ==================================
2025-07-01 12:06:28,931:INFO:Creating metrics dataframe
2025-07-01 12:06:28,939:INFO:Initializing Decision Tree Classifier
2025-07-01 12:06:28,939:INFO:Total runtime is 0.017815860112508138 minutes
2025-07-01 12:06:28,942:INFO:SubProcess create_model() called ==================================
2025-07-01 12:06:28,943:INFO:Initializing create_model()
2025-07-01 12:06:28,943:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DD673690>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231DFF1BD90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 12:06:28,943:INFO:Checking exceptions
2025-07-01 12:06:28,943:INFO:Importing libraries
2025-07-01 12:06:28,943:INFO:Copying training dataset
2025-07-01 12:06:28,949:INFO:Defining folds
2025-07-01 12:06:28,950:INFO:Declaring metric variables
2025-07-01 12:06:28,954:INFO:Importing untrained model
2025-07-01 12:06:28,959:INFO:Decision Tree Classifier Imported successfully
2025-07-01 12:06:28,967:INFO:Starting cross validation
2025-07-01 12:06:28,968:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 12:06:29,060:INFO:Calculating mean and std
2025-07-01 12:06:29,061:INFO:Creating metrics dataframe
2025-07-01 12:06:29,062:INFO:Uploading results into container
2025-07-01 12:06:29,063:INFO:Uploading model into container now
2025-07-01 12:06:29,064:INFO:_master_model_container: 4
2025-07-01 12:06:29,064:INFO:_display_container: 2
2025-07-01 12:06:29,064:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=900, splitter='best')
2025-07-01 12:06:29,065:INFO:create_model() successfully completed......................................
2025-07-01 12:06:29,256:INFO:SubProcess create_model() end ==================================
2025-07-01 12:06:29,256:INFO:Creating metrics dataframe
2025-07-01 12:06:29,264:INFO:Initializing SVM - Linear Kernel
2025-07-01 12:06:29,264:INFO:Total runtime is 0.02323084274927775 minutes
2025-07-01 12:06:29,268:INFO:SubProcess create_model() called ==================================
2025-07-01 12:06:29,268:INFO:Initializing create_model()
2025-07-01 12:06:29,268:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DD673690>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231DFF1BD90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 12:06:29,268:INFO:Checking exceptions
2025-07-01 12:06:29,268:INFO:Importing libraries
2025-07-01 12:06:29,268:INFO:Copying training dataset
2025-07-01 12:06:29,274:INFO:Defining folds
2025-07-01 12:06:29,274:INFO:Declaring metric variables
2025-07-01 12:06:29,277:INFO:Importing untrained model
2025-07-01 12:06:29,281:INFO:SVM - Linear Kernel Imported successfully
2025-07-01 12:06:29,289:INFO:Starting cross validation
2025-07-01 12:06:29,290:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 12:06:29,376:INFO:Calculating mean and std
2025-07-01 12:06:29,377:INFO:Creating metrics dataframe
2025-07-01 12:06:29,379:INFO:Uploading results into container
2025-07-01 12:06:29,379:INFO:Uploading model into container now
2025-07-01 12:06:29,379:INFO:_master_model_container: 5
2025-07-01 12:06:29,379:INFO:_display_container: 2
2025-07-01 12:06:29,380:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=900, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-07-01 12:06:29,380:INFO:create_model() successfully completed......................................
2025-07-01 12:06:29,556:INFO:SubProcess create_model() end ==================================
2025-07-01 12:06:29,556:INFO:Creating metrics dataframe
2025-07-01 12:06:29,563:INFO:Initializing Ridge Classifier
2025-07-01 12:06:29,564:INFO:Total runtime is 0.028229578336079912 minutes
2025-07-01 12:06:29,569:INFO:SubProcess create_model() called ==================================
2025-07-01 12:06:29,569:INFO:Initializing create_model()
2025-07-01 12:06:29,569:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DD673690>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231DFF1BD90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 12:06:29,569:INFO:Checking exceptions
2025-07-01 12:06:29,569:INFO:Importing libraries
2025-07-01 12:06:29,570:INFO:Copying training dataset
2025-07-01 12:06:29,574:INFO:Defining folds
2025-07-01 12:06:29,575:INFO:Declaring metric variables
2025-07-01 12:06:29,579:INFO:Importing untrained model
2025-07-01 12:06:29,583:INFO:Ridge Classifier Imported successfully
2025-07-01 12:06:29,593:INFO:Starting cross validation
2025-07-01 12:06:29,594:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 12:06:29,672:INFO:Calculating mean and std
2025-07-01 12:06:29,673:INFO:Creating metrics dataframe
2025-07-01 12:06:29,675:INFO:Uploading results into container
2025-07-01 12:06:29,676:INFO:Uploading model into container now
2025-07-01 12:06:29,676:INFO:_master_model_container: 6
2025-07-01 12:06:29,676:INFO:_display_container: 2
2025-07-01 12:06:29,677:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=900, solver='auto',
                tol=0.0001)
2025-07-01 12:06:29,677:INFO:create_model() successfully completed......................................
2025-07-01 12:06:29,848:INFO:SubProcess create_model() end ==================================
2025-07-01 12:06:29,848:INFO:Creating metrics dataframe
2025-07-01 12:06:29,856:INFO:Initializing Random Forest Classifier
2025-07-01 12:06:29,856:INFO:Total runtime is 0.033102031548817946 minutes
2025-07-01 12:06:29,859:INFO:SubProcess create_model() called ==================================
2025-07-01 12:06:29,859:INFO:Initializing create_model()
2025-07-01 12:06:29,859:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DD673690>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231DFF1BD90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 12:06:29,860:INFO:Checking exceptions
2025-07-01 12:06:29,860:INFO:Importing libraries
2025-07-01 12:06:29,860:INFO:Copying training dataset
2025-07-01 12:06:29,867:INFO:Defining folds
2025-07-01 12:06:29,867:INFO:Declaring metric variables
2025-07-01 12:06:29,870:INFO:Importing untrained model
2025-07-01 12:06:29,873:INFO:Random Forest Classifier Imported successfully
2025-07-01 12:06:29,880:INFO:Starting cross validation
2025-07-01 12:06:29,882:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 12:06:30,732:INFO:Calculating mean and std
2025-07-01 12:06:30,732:INFO:Creating metrics dataframe
2025-07-01 12:06:30,736:INFO:Uploading results into container
2025-07-01 12:06:30,737:INFO:Uploading model into container now
2025-07-01 12:06:30,737:INFO:_master_model_container: 7
2025-07-01 12:06:30,737:INFO:_display_container: 2
2025-07-01 12:06:30,738:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=900, verbose=0,
                       warm_start=False)
2025-07-01 12:06:30,738:INFO:create_model() successfully completed......................................
2025-07-01 12:06:30,918:INFO:SubProcess create_model() end ==================================
2025-07-01 12:06:30,919:INFO:Creating metrics dataframe
2025-07-01 12:06:30,927:INFO:Initializing Quadratic Discriminant Analysis
2025-07-01 12:06:30,928:INFO:Total runtime is 0.050966274738311765 minutes
2025-07-01 12:06:30,931:INFO:SubProcess create_model() called ==================================
2025-07-01 12:06:30,932:INFO:Initializing create_model()
2025-07-01 12:06:30,932:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DD673690>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231DFF1BD90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 12:06:30,932:INFO:Checking exceptions
2025-07-01 12:06:30,932:INFO:Importing libraries
2025-07-01 12:06:30,932:INFO:Copying training dataset
2025-07-01 12:06:30,938:INFO:Defining folds
2025-07-01 12:06:30,938:INFO:Declaring metric variables
2025-07-01 12:06:30,941:INFO:Importing untrained model
2025-07-01 12:06:30,944:INFO:Quadratic Discriminant Analysis Imported successfully
2025-07-01 12:06:30,955:INFO:Starting cross validation
2025-07-01 12:06:30,956:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 12:06:30,973:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 12:06:30,975:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 12:06:30,977:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 12:06:30,979:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 12:06:30,992:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 12:06:31,026:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 12:06:31,039:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 12:06:31,062:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 12:06:31,064:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 12:06:31,067:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 12:06:31,093:INFO:Calculating mean and std
2025-07-01 12:06:31,093:INFO:Creating metrics dataframe
2025-07-01 12:06:31,095:INFO:Uploading results into container
2025-07-01 12:06:31,096:INFO:Uploading model into container now
2025-07-01 12:06:31,096:INFO:_master_model_container: 8
2025-07-01 12:06:31,096:INFO:_display_container: 2
2025-07-01 12:06:31,097:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-07-01 12:06:31,097:INFO:create_model() successfully completed......................................
2025-07-01 12:06:31,288:INFO:SubProcess create_model() end ==================================
2025-07-01 12:06:31,288:INFO:Creating metrics dataframe
2025-07-01 12:06:31,296:INFO:Initializing Ada Boost Classifier
2025-07-01 12:06:31,296:INFO:Total runtime is 0.057106379667917886 minutes
2025-07-01 12:06:31,300:INFO:SubProcess create_model() called ==================================
2025-07-01 12:06:31,301:INFO:Initializing create_model()
2025-07-01 12:06:31,301:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DD673690>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231DFF1BD90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 12:06:31,301:INFO:Checking exceptions
2025-07-01 12:06:31,301:INFO:Importing libraries
2025-07-01 12:06:31,301:INFO:Copying training dataset
2025-07-01 12:06:31,307:INFO:Defining folds
2025-07-01 12:06:31,307:INFO:Declaring metric variables
2025-07-01 12:06:31,310:INFO:Importing untrained model
2025-07-01 12:06:31,313:INFO:Ada Boost Classifier Imported successfully
2025-07-01 12:06:31,323:INFO:Starting cross validation
2025-07-01 12:06:31,323:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 12:06:31,337:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 12:06:31,339:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 12:06:31,341:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 12:06:31,342:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 12:06:31,345:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 12:06:31,346:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 12:06:31,351:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 12:06:31,369:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 12:06:31,636:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 12:06:31,643:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 12:06:31,833:INFO:Calculating mean and std
2025-07-01 12:06:31,833:INFO:Creating metrics dataframe
2025-07-01 12:06:31,835:INFO:Uploading results into container
2025-07-01 12:06:31,836:INFO:Uploading model into container now
2025-07-01 12:06:31,836:INFO:_master_model_container: 9
2025-07-01 12:06:31,837:INFO:_display_container: 2
2025-07-01 12:06:31,837:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=900)
2025-07-01 12:06:31,837:INFO:create_model() successfully completed......................................
2025-07-01 12:06:32,034:INFO:SubProcess create_model() end ==================================
2025-07-01 12:06:32,034:INFO:Creating metrics dataframe
2025-07-01 12:06:32,044:INFO:Initializing Gradient Boosting Classifier
2025-07-01 12:06:32,044:INFO:Total runtime is 0.06957759062449137 minutes
2025-07-01 12:06:32,050:INFO:SubProcess create_model() called ==================================
2025-07-01 12:06:32,050:INFO:Initializing create_model()
2025-07-01 12:06:32,051:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DD673690>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231DFF1BD90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 12:06:32,051:INFO:Checking exceptions
2025-07-01 12:06:32,051:INFO:Importing libraries
2025-07-01 12:06:32,051:INFO:Copying training dataset
2025-07-01 12:06:32,058:INFO:Defining folds
2025-07-01 12:06:32,058:INFO:Declaring metric variables
2025-07-01 12:06:32,063:INFO:Importing untrained model
2025-07-01 12:06:32,068:INFO:Gradient Boosting Classifier Imported successfully
2025-07-01 12:06:32,079:INFO:Starting cross validation
2025-07-01 12:06:32,080:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 12:06:32,892:INFO:Calculating mean and std
2025-07-01 12:06:32,892:INFO:Creating metrics dataframe
2025-07-01 12:06:32,894:INFO:Uploading results into container
2025-07-01 12:06:32,894:INFO:Uploading model into container now
2025-07-01 12:06:32,895:INFO:_master_model_container: 10
2025-07-01 12:06:32,895:INFO:_display_container: 2
2025-07-01 12:06:32,895:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=900, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-07-01 12:06:32,895:INFO:create_model() successfully completed......................................
2025-07-01 12:06:33,081:INFO:SubProcess create_model() end ==================================
2025-07-01 12:06:33,081:INFO:Creating metrics dataframe
2025-07-01 12:06:33,092:INFO:Initializing Linear Discriminant Analysis
2025-07-01 12:06:33,092:INFO:Total runtime is 0.08703103065490722 minutes
2025-07-01 12:06:33,096:INFO:SubProcess create_model() called ==================================
2025-07-01 12:06:33,096:INFO:Initializing create_model()
2025-07-01 12:06:33,096:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DD673690>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231DFF1BD90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 12:06:33,096:INFO:Checking exceptions
2025-07-01 12:06:33,097:INFO:Importing libraries
2025-07-01 12:06:33,097:INFO:Copying training dataset
2025-07-01 12:06:33,104:INFO:Defining folds
2025-07-01 12:06:33,104:INFO:Declaring metric variables
2025-07-01 12:06:33,107:INFO:Importing untrained model
2025-07-01 12:06:33,111:INFO:Linear Discriminant Analysis Imported successfully
2025-07-01 12:06:33,120:INFO:Starting cross validation
2025-07-01 12:06:33,122:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 12:06:33,206:INFO:Calculating mean and std
2025-07-01 12:06:33,207:INFO:Creating metrics dataframe
2025-07-01 12:06:33,208:INFO:Uploading results into container
2025-07-01 12:06:33,209:INFO:Uploading model into container now
2025-07-01 12:06:33,209:INFO:_master_model_container: 11
2025-07-01 12:06:33,209:INFO:_display_container: 2
2025-07-01 12:06:33,209:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-07-01 12:06:33,209:INFO:create_model() successfully completed......................................
2025-07-01 12:06:33,405:INFO:SubProcess create_model() end ==================================
2025-07-01 12:06:33,406:INFO:Creating metrics dataframe
2025-07-01 12:06:33,417:INFO:Initializing Extra Trees Classifier
2025-07-01 12:06:33,417:INFO:Total runtime is 0.09244811137517293 minutes
2025-07-01 12:06:33,421:INFO:SubProcess create_model() called ==================================
2025-07-01 12:06:33,421:INFO:Initializing create_model()
2025-07-01 12:06:33,421:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DD673690>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231DFF1BD90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 12:06:33,421:INFO:Checking exceptions
2025-07-01 12:06:33,422:INFO:Importing libraries
2025-07-01 12:06:33,422:INFO:Copying training dataset
2025-07-01 12:06:33,427:INFO:Defining folds
2025-07-01 12:06:33,427:INFO:Declaring metric variables
2025-07-01 12:06:33,431:INFO:Importing untrained model
2025-07-01 12:06:33,436:INFO:Extra Trees Classifier Imported successfully
2025-07-01 12:06:33,443:INFO:Starting cross validation
2025-07-01 12:06:33,444:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 12:06:34,094:INFO:Calculating mean and std
2025-07-01 12:06:34,095:INFO:Creating metrics dataframe
2025-07-01 12:06:34,101:INFO:Uploading results into container
2025-07-01 12:06:34,102:INFO:Uploading model into container now
2025-07-01 12:06:34,103:INFO:_master_model_container: 12
2025-07-01 12:06:34,103:INFO:_display_container: 2
2025-07-01 12:06:34,105:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=900, verbose=0,
                     warm_start=False)
2025-07-01 12:06:34,105:INFO:create_model() successfully completed......................................
2025-07-01 12:06:34,331:INFO:SubProcess create_model() end ==================================
2025-07-01 12:06:34,331:INFO:Creating metrics dataframe
2025-07-01 12:06:34,343:INFO:Initializing Extreme Gradient Boosting
2025-07-01 12:06:34,343:INFO:Total runtime is 0.10789502461751302 minutes
2025-07-01 12:06:34,347:INFO:SubProcess create_model() called ==================================
2025-07-01 12:06:34,348:INFO:Initializing create_model()
2025-07-01 12:06:34,349:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DD673690>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231DFF1BD90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 12:06:34,349:INFO:Checking exceptions
2025-07-01 12:06:34,349:INFO:Importing libraries
2025-07-01 12:06:34,349:INFO:Copying training dataset
2025-07-01 12:06:34,355:INFO:Defining folds
2025-07-01 12:06:34,355:INFO:Declaring metric variables
2025-07-01 12:06:34,359:INFO:Importing untrained model
2025-07-01 12:06:34,363:INFO:Extreme Gradient Boosting Imported successfully
2025-07-01 12:06:34,372:INFO:Starting cross validation
2025-07-01 12:06:34,372:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 12:06:34,742:INFO:Calculating mean and std
2025-07-01 12:06:34,743:INFO:Creating metrics dataframe
2025-07-01 12:06:34,745:INFO:Uploading results into container
2025-07-01 12:06:34,745:INFO:Uploading model into container now
2025-07-01 12:06:34,746:INFO:_master_model_container: 13
2025-07-01 12:06:34,746:INFO:_display_container: 2
2025-07-01 12:06:34,748:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-07-01 12:06:34,749:INFO:create_model() successfully completed......................................
2025-07-01 12:06:34,945:INFO:SubProcess create_model() end ==================================
2025-07-01 12:06:34,945:INFO:Creating metrics dataframe
2025-07-01 12:06:34,957:INFO:Initializing Light Gradient Boosting Machine
2025-07-01 12:06:34,957:INFO:Total runtime is 0.11811343034108479 minutes
2025-07-01 12:06:34,961:INFO:SubProcess create_model() called ==================================
2025-07-01 12:06:34,961:INFO:Initializing create_model()
2025-07-01 12:06:34,961:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DD673690>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231DFF1BD90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 12:06:34,961:INFO:Checking exceptions
2025-07-01 12:06:34,961:INFO:Importing libraries
2025-07-01 12:06:34,961:INFO:Copying training dataset
2025-07-01 12:06:34,969:INFO:Defining folds
2025-07-01 12:06:34,970:INFO:Declaring metric variables
2025-07-01 12:06:34,974:INFO:Importing untrained model
2025-07-01 12:06:34,979:INFO:Light Gradient Boosting Machine Imported successfully
2025-07-01 12:06:34,988:INFO:Starting cross validation
2025-07-01 12:06:34,989:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 12:06:36,020:INFO:Calculating mean and std
2025-07-01 12:06:36,023:INFO:Creating metrics dataframe
2025-07-01 12:06:36,026:INFO:Uploading results into container
2025-07-01 12:06:36,027:INFO:Uploading model into container now
2025-07-01 12:06:36,027:INFO:_master_model_container: 14
2025-07-01 12:06:36,028:INFO:_display_container: 2
2025-07-01 12:06:36,029:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=900, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-07-01 12:06:36,029:INFO:create_model() successfully completed......................................
2025-07-01 12:06:36,275:INFO:SubProcess create_model() end ==================================
2025-07-01 12:06:36,276:INFO:Creating metrics dataframe
2025-07-01 12:06:36,290:INFO:Initializing Dummy Classifier
2025-07-01 12:06:36,290:INFO:Total runtime is 0.14033883810043335 minutes
2025-07-01 12:06:36,294:INFO:SubProcess create_model() called ==================================
2025-07-01 12:06:36,295:INFO:Initializing create_model()
2025-07-01 12:06:36,295:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DD673690>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231DFF1BD90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 12:06:36,295:INFO:Checking exceptions
2025-07-01 12:06:36,295:INFO:Importing libraries
2025-07-01 12:06:36,295:INFO:Copying training dataset
2025-07-01 12:06:36,304:INFO:Defining folds
2025-07-01 12:06:36,304:INFO:Declaring metric variables
2025-07-01 12:06:36,309:INFO:Importing untrained model
2025-07-01 12:06:36,313:INFO:Dummy Classifier Imported successfully
2025-07-01 12:06:36,326:INFO:Starting cross validation
2025-07-01 12:06:36,327:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 12:06:36,355:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-01 12:06:36,358:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-01 12:06:36,359:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-01 12:06:36,362:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-01 12:06:36,381:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-01 12:06:36,388:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-01 12:06:36,405:INFO:Calculating mean and std
2025-07-01 12:06:36,406:INFO:Creating metrics dataframe
2025-07-01 12:06:36,408:INFO:Uploading results into container
2025-07-01 12:06:36,408:INFO:Uploading model into container now
2025-07-01 12:06:36,409:INFO:_master_model_container: 15
2025-07-01 12:06:36,409:INFO:_display_container: 2
2025-07-01 12:06:36,409:INFO:DummyClassifier(constant=None, random_state=900, strategy='prior')
2025-07-01 12:06:36,410:INFO:create_model() successfully completed......................................
2025-07-01 12:06:36,619:INFO:SubProcess create_model() end ==================================
2025-07-01 12:06:36,619:INFO:Creating metrics dataframe
2025-07-01 12:06:36,632:WARNING:d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-07-01 12:06:36,643:INFO:Initializing create_model()
2025-07-01 12:06:36,643:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DD673690>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=900), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 12:06:36,643:INFO:Checking exceptions
2025-07-01 12:06:36,645:INFO:Importing libraries
2025-07-01 12:06:36,646:INFO:Copying training dataset
2025-07-01 12:06:36,652:INFO:Defining folds
2025-07-01 12:06:36,652:INFO:Declaring metric variables
2025-07-01 12:06:36,652:INFO:Importing untrained model
2025-07-01 12:06:36,652:INFO:Declaring custom model
2025-07-01 12:06:36,653:INFO:Ada Boost Classifier Imported successfully
2025-07-01 12:06:36,653:INFO:Cross validation set to False
2025-07-01 12:06:36,653:INFO:Fitting Model
2025-07-01 12:06:36,656:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 12:06:36,875:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=900)
2025-07-01 12:06:36,875:INFO:create_model() successfully completed......................................
2025-07-01 12:06:37,115:INFO:_master_model_container: 15
2025-07-01 12:06:37,116:INFO:_display_container: 2
2025-07-01 12:06:37,116:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=900)
2025-07-01 12:06:37,116:INFO:compare_models() successfully completed......................................
2025-07-01 12:07:27,503:INFO:PyCaret ClassificationExperiment
2025-07-01 12:07:27,503:INFO:Logging name: clf-default-name
2025-07-01 12:07:27,503:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-07-01 12:07:27,503:INFO:version 3.3.2
2025-07-01 12:07:27,504:INFO:Initializing setup()
2025-07-01 12:07:27,504:INFO:self.USI: 36bd
2025-07-01 12:07:27,504:INFO:self._variable_keys: {'fix_imbalance', 'data', 'is_multiclass', 'y_test', 'X_train', 'log_plots_param', 'X', 'X_test', 'logging_param', 'n_jobs_param', 'gpu_param', 'idx', 'html_param', 'fold_generator', '_ml_usecase', 'exp_id', 'USI', '_available_plots', 'gpu_n_jobs_param', 'pipeline', 'y_train', 'fold_groups_param', 'y', 'fold_shuffle_param', 'target_param', 'memory', 'seed', 'exp_name_log'}
2025-07-01 12:07:27,504:INFO:Checking environment
2025-07-01 12:07:27,504:INFO:python_version: 3.11.13
2025-07-01 12:07:27,504:INFO:python_build: ('main', 'Jun  5 2025 13:03:15')
2025-07-01 12:07:27,504:INFO:machine: AMD64
2025-07-01 12:07:27,504:INFO:platform: Windows-10-10.0.22631-SP0
2025-07-01 12:07:27,510:INFO:Memory: svmem(total=12674457600, available=1400606720, percent=88.9, used=11273850880, free=1400606720)
2025-07-01 12:07:27,511:INFO:Physical Core: 4
2025-07-01 12:07:27,511:INFO:Logical Core: 8
2025-07-01 12:07:27,511:INFO:Checking libraries
2025-07-01 12:07:27,511:INFO:System:
2025-07-01 12:07:27,511:INFO:    python: 3.11.13 | packaged by Anaconda, Inc. | (main, Jun  5 2025, 13:03:15) [MSC v.1929 64 bit (AMD64)]
2025-07-01 12:07:27,511:INFO:executable: d:\ML_notes\.conda\python.exe
2025-07-01 12:07:27,511:INFO:   machine: Windows-10-10.0.22631-SP0
2025-07-01 12:07:27,511:INFO:PyCaret required dependencies:
2025-07-01 12:07:27,511:INFO:                 pip: 25.1
2025-07-01 12:07:27,511:INFO:          setuptools: 78.1.1
2025-07-01 12:07:27,511:INFO:             pycaret: 3.3.2
2025-07-01 12:07:27,511:INFO:             IPython: 9.3.0
2025-07-01 12:07:27,511:INFO:          ipywidgets: 8.1.7
2025-07-01 12:07:27,511:INFO:                tqdm: 4.67.1
2025-07-01 12:07:27,511:INFO:               numpy: 1.26.4
2025-07-01 12:07:27,511:INFO:              pandas: 2.1.4
2025-07-01 12:07:27,511:INFO:              jinja2: 3.1.6
2025-07-01 12:07:27,511:INFO:               scipy: 1.11.4
2025-07-01 12:07:27,511:INFO:              joblib: 1.3.2
2025-07-01 12:07:27,511:INFO:             sklearn: 1.4.2
2025-07-01 12:07:27,511:INFO:                pyod: 2.0.5
2025-07-01 12:07:27,511:INFO:            imblearn: 0.13.0
2025-07-01 12:07:27,511:INFO:   category_encoders: 2.7.0
2025-07-01 12:07:27,511:INFO:            lightgbm: 4.6.0
2025-07-01 12:07:27,512:INFO:               numba: 0.61.0
2025-07-01 12:07:27,512:INFO:            requests: 2.32.4
2025-07-01 12:07:27,512:INFO:          matplotlib: 3.7.5
2025-07-01 12:07:27,512:INFO:          scikitplot: 0.3.7
2025-07-01 12:07:27,512:INFO:         yellowbrick: 1.5
2025-07-01 12:07:27,512:INFO:              plotly: 5.24.1
2025-07-01 12:07:27,512:INFO:    plotly-resampler: Not installed
2025-07-01 12:07:27,512:INFO:             kaleido: 1.0.0
2025-07-01 12:07:27,512:INFO:           schemdraw: 0.15
2025-07-01 12:07:27,512:INFO:         statsmodels: 0.14.4
2025-07-01 12:07:27,512:INFO:              sktime: 0.26.0
2025-07-01 12:07:27,512:INFO:               tbats: 1.1.3
2025-07-01 12:07:27,512:INFO:            pmdarima: 2.0.4
2025-07-01 12:07:27,512:INFO:              psutil: 7.0.0
2025-07-01 12:07:27,512:INFO:          markupsafe: 3.0.2
2025-07-01 12:07:27,512:INFO:             pickle5: Not installed
2025-07-01 12:07:27,512:INFO:         cloudpickle: 3.1.1
2025-07-01 12:07:27,512:INFO:         deprecation: 2.1.0
2025-07-01 12:07:27,512:INFO:              xxhash: 3.5.0
2025-07-01 12:07:27,512:INFO:           wurlitzer: Not installed
2025-07-01 12:07:27,512:INFO:PyCaret optional dependencies:
2025-07-01 12:07:27,512:INFO:                shap: Not installed
2025-07-01 12:07:27,512:INFO:           interpret: Not installed
2025-07-01 12:07:27,512:INFO:                umap: Not installed
2025-07-01 12:07:27,512:INFO:     ydata_profiling: 4.16.1
2025-07-01 12:07:27,512:INFO:  explainerdashboard: Not installed
2025-07-01 12:07:27,512:INFO:             autoviz: Not installed
2025-07-01 12:07:27,512:INFO:           fairlearn: Not installed
2025-07-01 12:07:27,513:INFO:          deepchecks: Not installed
2025-07-01 12:07:27,513:INFO:             xgboost: 3.0.2
2025-07-01 12:07:27,513:INFO:            catboost: Not installed
2025-07-01 12:07:27,513:INFO:              kmodes: Not installed
2025-07-01 12:07:27,513:INFO:             mlxtend: Not installed
2025-07-01 12:07:27,513:INFO:       statsforecast: Not installed
2025-07-01 12:07:27,513:INFO:        tune_sklearn: Not installed
2025-07-01 12:07:27,513:INFO:                 ray: Not installed
2025-07-01 12:07:27,513:INFO:            hyperopt: Not installed
2025-07-01 12:07:27,513:INFO:              optuna: Not installed
2025-07-01 12:07:27,513:INFO:               skopt: Not installed
2025-07-01 12:07:27,513:INFO:              mlflow: Not installed
2025-07-01 12:07:27,513:INFO:              gradio: Not installed
2025-07-01 12:07:27,513:INFO:             fastapi: Not installed
2025-07-01 12:07:27,513:INFO:             uvicorn: Not installed
2025-07-01 12:07:27,513:INFO:              m2cgen: Not installed
2025-07-01 12:07:27,513:INFO:           evidently: Not installed
2025-07-01 12:07:27,513:INFO:               fugue: Not installed
2025-07-01 12:07:27,513:INFO:           streamlit: Not installed
2025-07-01 12:07:27,513:INFO:             prophet: Not installed
2025-07-01 12:07:27,513:INFO:None
2025-07-01 12:07:27,513:INFO:Set up data.
2025-07-01 12:07:27,518:INFO:Set up folding strategy.
2025-07-01 12:07:27,518:INFO:Set up train/test split.
2025-07-01 12:07:27,521:INFO:Set up index.
2025-07-01 12:07:27,521:INFO:Assigning column types.
2025-07-01 12:07:27,527:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-07-01 12:07:27,569:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-01 12:07:27,570:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-01 12:07:27,600:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 12:07:27,644:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 12:07:27,700:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-01 12:07:27,700:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-01 12:07:27,731:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 12:07:27,736:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 12:07:27,737:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-07-01 12:07:27,784:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-01 12:07:27,813:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 12:07:27,815:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 12:07:27,863:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-01 12:07:27,892:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 12:07:27,895:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 12:07:27,895:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-07-01 12:07:27,972:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 12:07:27,975:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 12:07:28,050:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 12:07:28,053:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 12:07:28,055:INFO:Preparing preprocessing pipeline...
2025-07-01 12:07:28,059:INFO:Finished creating preprocessing pipeline.
2025-07-01 12:07:28,061:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\YOGA\AppData\Local\Temp\joblib),
         steps=[('placeholder', None)], verbose=False)
2025-07-01 12:07:28,061:INFO:Creating final display dataframe.
2025-07-01 12:07:28,099:INFO:Setup _display_container:                     Description              Value
0                    Session id                900
1                        Target  Target_Churn_True
2                   Target type             Binary
3           Original data shape          (840, 20)
4        Transformed data shape          (840, 20)
5   Transformed train set shape          (588, 20)
6    Transformed test set shape          (252, 20)
7              Numeric features                 19
8                    Preprocess               True
9               Imputation type               None
10               Fold Generator    StratifiedKFold
11                  Fold Number                 10
12                     CPU Jobs                 -1
13                      Use GPU              False
14               Log Experiment              False
15              Experiment Name   clf-default-name
16                          USI               36bd
2025-07-01 12:07:28,184:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 12:07:28,188:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 12:07:28,266:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 12:07:28,271:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 12:07:28,273:INFO:setup() successfully completed in 0.77s...............
2025-07-01 12:07:28,276:INFO:Initializing compare_models()
2025-07-01 12:07:28,276:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DD673010>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000231DD673010>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2025-07-01 12:07:28,276:INFO:Checking exceptions
2025-07-01 12:07:28,280:INFO:Preparing display monitor
2025-07-01 12:07:28,308:INFO:Initializing Logistic Regression
2025-07-01 12:07:28,308:INFO:Total runtime is 0.0 minutes
2025-07-01 12:07:28,314:INFO:SubProcess create_model() called ==================================
2025-07-01 12:07:28,315:INFO:Initializing create_model()
2025-07-01 12:07:28,315:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DD673010>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231DD6DF0D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 12:07:28,315:INFO:Checking exceptions
2025-07-01 12:07:28,315:INFO:Importing libraries
2025-07-01 12:07:28,315:INFO:Copying training dataset
2025-07-01 12:07:28,322:INFO:Defining folds
2025-07-01 12:07:28,322:INFO:Declaring metric variables
2025-07-01 12:07:28,326:INFO:Importing untrained model
2025-07-01 12:07:28,332:INFO:Logistic Regression Imported successfully
2025-07-01 12:07:28,342:INFO:Starting cross validation
2025-07-01 12:07:28,345:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 12:07:28,453:INFO:Calculating mean and std
2025-07-01 12:07:28,454:INFO:Creating metrics dataframe
2025-07-01 12:07:28,456:INFO:Uploading results into container
2025-07-01 12:07:28,458:INFO:Uploading model into container now
2025-07-01 12:07:28,459:INFO:_master_model_container: 1
2025-07-01 12:07:28,460:INFO:_display_container: 2
2025-07-01 12:07:28,461:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=900, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-07-01 12:07:28,461:INFO:create_model() successfully completed......................................
2025-07-01 12:07:28,719:INFO:SubProcess create_model() end ==================================
2025-07-01 12:07:28,719:INFO:Creating metrics dataframe
2025-07-01 12:07:28,728:INFO:Initializing K Neighbors Classifier
2025-07-01 12:07:28,728:INFO:Total runtime is 0.006990186373392741 minutes
2025-07-01 12:07:28,733:INFO:SubProcess create_model() called ==================================
2025-07-01 12:07:28,734:INFO:Initializing create_model()
2025-07-01 12:07:28,734:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DD673010>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231DD6DF0D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 12:07:28,734:INFO:Checking exceptions
2025-07-01 12:07:28,734:INFO:Importing libraries
2025-07-01 12:07:28,734:INFO:Copying training dataset
2025-07-01 12:07:28,739:INFO:Defining folds
2025-07-01 12:07:28,740:INFO:Declaring metric variables
2025-07-01 12:07:28,746:INFO:Importing untrained model
2025-07-01 12:07:28,750:INFO:K Neighbors Classifier Imported successfully
2025-07-01 12:07:28,760:INFO:Starting cross validation
2025-07-01 12:07:28,761:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 12:07:28,877:INFO:Calculating mean and std
2025-07-01 12:07:28,877:INFO:Creating metrics dataframe
2025-07-01 12:07:28,880:INFO:Uploading results into container
2025-07-01 12:07:28,881:INFO:Uploading model into container now
2025-07-01 12:07:28,881:INFO:_master_model_container: 2
2025-07-01 12:07:28,881:INFO:_display_container: 2
2025-07-01 12:07:28,881:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-07-01 12:07:28,881:INFO:create_model() successfully completed......................................
2025-07-01 12:07:29,098:INFO:SubProcess create_model() end ==================================
2025-07-01 12:07:29,098:INFO:Creating metrics dataframe
2025-07-01 12:07:29,105:INFO:Initializing Naive Bayes
2025-07-01 12:07:29,105:INFO:Total runtime is 0.013282235463460287 minutes
2025-07-01 12:07:29,112:INFO:SubProcess create_model() called ==================================
2025-07-01 12:07:29,112:INFO:Initializing create_model()
2025-07-01 12:07:29,112:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DD673010>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231DD6DF0D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 12:07:29,112:INFO:Checking exceptions
2025-07-01 12:07:29,112:INFO:Importing libraries
2025-07-01 12:07:29,112:INFO:Copying training dataset
2025-07-01 12:07:29,117:INFO:Defining folds
2025-07-01 12:07:29,117:INFO:Declaring metric variables
2025-07-01 12:07:29,120:INFO:Importing untrained model
2025-07-01 12:07:29,126:INFO:Naive Bayes Imported successfully
2025-07-01 12:07:29,135:INFO:Starting cross validation
2025-07-01 12:07:29,135:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 12:07:29,222:INFO:Calculating mean and std
2025-07-01 12:07:29,222:INFO:Creating metrics dataframe
2025-07-01 12:07:29,225:INFO:Uploading results into container
2025-07-01 12:07:29,226:INFO:Uploading model into container now
2025-07-01 12:07:29,226:INFO:_master_model_container: 3
2025-07-01 12:07:29,227:INFO:_display_container: 2
2025-07-01 12:07:29,227:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-07-01 12:07:29,227:INFO:create_model() successfully completed......................................
2025-07-01 12:07:29,444:INFO:SubProcess create_model() end ==================================
2025-07-01 12:07:29,444:INFO:Creating metrics dataframe
2025-07-01 12:07:29,451:INFO:Initializing Decision Tree Classifier
2025-07-01 12:07:29,451:INFO:Total runtime is 0.019055950641632083 minutes
2025-07-01 12:07:29,455:INFO:SubProcess create_model() called ==================================
2025-07-01 12:07:29,455:INFO:Initializing create_model()
2025-07-01 12:07:29,455:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DD673010>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231DD6DF0D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 12:07:29,455:INFO:Checking exceptions
2025-07-01 12:07:29,456:INFO:Importing libraries
2025-07-01 12:07:29,456:INFO:Copying training dataset
2025-07-01 12:07:29,463:INFO:Defining folds
2025-07-01 12:07:29,463:INFO:Declaring metric variables
2025-07-01 12:07:29,465:INFO:Importing untrained model
2025-07-01 12:07:29,470:INFO:Decision Tree Classifier Imported successfully
2025-07-01 12:07:29,480:INFO:Starting cross validation
2025-07-01 12:07:29,481:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 12:07:29,568:INFO:Calculating mean and std
2025-07-01 12:07:29,569:INFO:Creating metrics dataframe
2025-07-01 12:07:29,572:INFO:Uploading results into container
2025-07-01 12:07:29,573:INFO:Uploading model into container now
2025-07-01 12:07:29,574:INFO:_master_model_container: 4
2025-07-01 12:07:29,575:INFO:_display_container: 2
2025-07-01 12:07:29,575:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=900, splitter='best')
2025-07-01 12:07:29,575:INFO:create_model() successfully completed......................................
2025-07-01 12:07:29,770:INFO:SubProcess create_model() end ==================================
2025-07-01 12:07:29,770:INFO:Creating metrics dataframe
2025-07-01 12:07:29,781:INFO:Initializing SVM - Linear Kernel
2025-07-01 12:07:29,781:INFO:Total runtime is 0.02454005082448324 minutes
2025-07-01 12:07:29,784:INFO:SubProcess create_model() called ==================================
2025-07-01 12:07:29,785:INFO:Initializing create_model()
2025-07-01 12:07:29,785:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DD673010>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231DD6DF0D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 12:07:29,785:INFO:Checking exceptions
2025-07-01 12:07:29,785:INFO:Importing libraries
2025-07-01 12:07:29,785:INFO:Copying training dataset
2025-07-01 12:07:29,792:INFO:Defining folds
2025-07-01 12:07:29,792:INFO:Declaring metric variables
2025-07-01 12:07:29,796:INFO:Importing untrained model
2025-07-01 12:07:29,801:INFO:SVM - Linear Kernel Imported successfully
2025-07-01 12:07:29,848:INFO:Starting cross validation
2025-07-01 12:07:29,849:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 12:07:29,957:INFO:Calculating mean and std
2025-07-01 12:07:29,958:INFO:Creating metrics dataframe
2025-07-01 12:07:29,960:INFO:Uploading results into container
2025-07-01 12:07:29,960:INFO:Uploading model into container now
2025-07-01 12:07:29,961:INFO:_master_model_container: 5
2025-07-01 12:07:29,961:INFO:_display_container: 2
2025-07-01 12:07:29,961:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=900, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-07-01 12:07:29,962:INFO:create_model() successfully completed......................................
2025-07-01 12:07:30,159:INFO:SubProcess create_model() end ==================================
2025-07-01 12:07:30,159:INFO:Creating metrics dataframe
2025-07-01 12:07:30,165:INFO:Initializing Ridge Classifier
2025-07-01 12:07:30,165:INFO:Total runtime is 0.030955910682678226 minutes
2025-07-01 12:07:30,169:INFO:SubProcess create_model() called ==================================
2025-07-01 12:07:30,169:INFO:Initializing create_model()
2025-07-01 12:07:30,169:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DD673010>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231DD6DF0D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 12:07:30,170:INFO:Checking exceptions
2025-07-01 12:07:30,170:INFO:Importing libraries
2025-07-01 12:07:30,170:INFO:Copying training dataset
2025-07-01 12:07:30,178:INFO:Defining folds
2025-07-01 12:07:30,178:INFO:Declaring metric variables
2025-07-01 12:07:30,181:INFO:Importing untrained model
2025-07-01 12:07:30,185:INFO:Ridge Classifier Imported successfully
2025-07-01 12:07:30,195:INFO:Starting cross validation
2025-07-01 12:07:30,196:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 12:07:30,278:INFO:Calculating mean and std
2025-07-01 12:07:30,279:INFO:Creating metrics dataframe
2025-07-01 12:07:30,281:INFO:Uploading results into container
2025-07-01 12:07:30,282:INFO:Uploading model into container now
2025-07-01 12:07:30,283:INFO:_master_model_container: 6
2025-07-01 12:07:30,283:INFO:_display_container: 2
2025-07-01 12:07:30,284:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=900, solver='auto',
                tol=0.0001)
2025-07-01 12:07:30,284:INFO:create_model() successfully completed......................................
2025-07-01 12:07:30,468:INFO:SubProcess create_model() end ==================================
2025-07-01 12:07:30,468:INFO:Creating metrics dataframe
2025-07-01 12:07:30,479:INFO:Initializing Random Forest Classifier
2025-07-01 12:07:30,479:INFO:Total runtime is 0.03617736498514811 minutes
2025-07-01 12:07:30,482:INFO:SubProcess create_model() called ==================================
2025-07-01 12:07:30,483:INFO:Initializing create_model()
2025-07-01 12:07:30,483:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DD673010>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231DD6DF0D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 12:07:30,483:INFO:Checking exceptions
2025-07-01 12:07:30,483:INFO:Importing libraries
2025-07-01 12:07:30,483:INFO:Copying training dataset
2025-07-01 12:07:30,491:INFO:Defining folds
2025-07-01 12:07:30,491:INFO:Declaring metric variables
2025-07-01 12:07:30,495:INFO:Importing untrained model
2025-07-01 12:07:30,499:INFO:Random Forest Classifier Imported successfully
2025-07-01 12:07:30,510:INFO:Starting cross validation
2025-07-01 12:07:30,511:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 12:07:31,363:INFO:Calculating mean and std
2025-07-01 12:07:31,364:INFO:Creating metrics dataframe
2025-07-01 12:07:31,366:INFO:Uploading results into container
2025-07-01 12:07:31,367:INFO:Uploading model into container now
2025-07-01 12:07:31,367:INFO:_master_model_container: 7
2025-07-01 12:07:31,367:INFO:_display_container: 2
2025-07-01 12:07:31,368:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=900, verbose=0,
                       warm_start=False)
2025-07-01 12:07:31,368:INFO:create_model() successfully completed......................................
2025-07-01 12:07:31,555:INFO:SubProcess create_model() end ==================================
2025-07-01 12:07:31,556:INFO:Creating metrics dataframe
2025-07-01 12:07:31,564:INFO:Initializing Quadratic Discriminant Analysis
2025-07-01 12:07:31,564:INFO:Total runtime is 0.054259268442789714 minutes
2025-07-01 12:07:31,567:INFO:SubProcess create_model() called ==================================
2025-07-01 12:07:31,568:INFO:Initializing create_model()
2025-07-01 12:07:31,568:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DD673010>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231DD6DF0D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 12:07:31,568:INFO:Checking exceptions
2025-07-01 12:07:31,568:INFO:Importing libraries
2025-07-01 12:07:31,568:INFO:Copying training dataset
2025-07-01 12:07:31,575:INFO:Defining folds
2025-07-01 12:07:31,575:INFO:Declaring metric variables
2025-07-01 12:07:31,580:INFO:Importing untrained model
2025-07-01 12:07:31,584:INFO:Quadratic Discriminant Analysis Imported successfully
2025-07-01 12:07:31,594:INFO:Starting cross validation
2025-07-01 12:07:31,595:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 12:07:31,610:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 12:07:31,612:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 12:07:31,614:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 12:07:31,615:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 12:07:31,617:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 12:07:31,619:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 12:07:31,625:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 12:07:31,646:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 12:07:31,648:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 12:07:31,649:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 12:07:31,676:INFO:Calculating mean and std
2025-07-01 12:07:31,677:INFO:Creating metrics dataframe
2025-07-01 12:07:31,679:INFO:Uploading results into container
2025-07-01 12:07:31,679:INFO:Uploading model into container now
2025-07-01 12:07:31,680:INFO:_master_model_container: 8
2025-07-01 12:07:31,680:INFO:_display_container: 2
2025-07-01 12:07:31,680:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-07-01 12:07:31,680:INFO:create_model() successfully completed......................................
2025-07-01 12:07:31,870:INFO:SubProcess create_model() end ==================================
2025-07-01 12:07:31,870:INFO:Creating metrics dataframe
2025-07-01 12:07:31,880:INFO:Initializing Ada Boost Classifier
2025-07-01 12:07:31,881:INFO:Total runtime is 0.05954201618830363 minutes
2025-07-01 12:07:31,884:INFO:SubProcess create_model() called ==================================
2025-07-01 12:07:31,884:INFO:Initializing create_model()
2025-07-01 12:07:31,884:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DD673010>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231DD6DF0D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 12:07:31,884:INFO:Checking exceptions
2025-07-01 12:07:31,885:INFO:Importing libraries
2025-07-01 12:07:31,885:INFO:Copying training dataset
2025-07-01 12:07:31,891:INFO:Defining folds
2025-07-01 12:07:31,892:INFO:Declaring metric variables
2025-07-01 12:07:31,896:INFO:Importing untrained model
2025-07-01 12:07:31,899:INFO:Ada Boost Classifier Imported successfully
2025-07-01 12:07:31,909:INFO:Starting cross validation
2025-07-01 12:07:31,910:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 12:07:31,922:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 12:07:31,925:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 12:07:31,928:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 12:07:31,930:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 12:07:31,932:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 12:07:31,934:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 12:07:31,937:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 12:07:31,963:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 12:07:32,173:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 12:07:32,181:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 12:07:32,407:INFO:Calculating mean and std
2025-07-01 12:07:32,409:INFO:Creating metrics dataframe
2025-07-01 12:07:32,410:INFO:Uploading results into container
2025-07-01 12:07:32,411:INFO:Uploading model into container now
2025-07-01 12:07:32,411:INFO:_master_model_container: 9
2025-07-01 12:07:32,411:INFO:_display_container: 2
2025-07-01 12:07:32,412:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=900)
2025-07-01 12:07:32,412:INFO:create_model() successfully completed......................................
2025-07-01 12:07:32,619:INFO:SubProcess create_model() end ==================================
2025-07-01 12:07:32,619:INFO:Creating metrics dataframe
2025-07-01 12:07:32,631:INFO:Initializing Gradient Boosting Classifier
2025-07-01 12:07:32,631:INFO:Total runtime is 0.07204036712646485 minutes
2025-07-01 12:07:32,635:INFO:SubProcess create_model() called ==================================
2025-07-01 12:07:32,636:INFO:Initializing create_model()
2025-07-01 12:07:32,636:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DD673010>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231DD6DF0D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 12:07:32,636:INFO:Checking exceptions
2025-07-01 12:07:32,636:INFO:Importing libraries
2025-07-01 12:07:32,636:INFO:Copying training dataset
2025-07-01 12:07:32,644:INFO:Defining folds
2025-07-01 12:07:32,644:INFO:Declaring metric variables
2025-07-01 12:07:32,647:INFO:Importing untrained model
2025-07-01 12:07:32,653:INFO:Gradient Boosting Classifier Imported successfully
2025-07-01 12:07:32,662:INFO:Starting cross validation
2025-07-01 12:07:32,663:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 12:07:33,467:INFO:Calculating mean and std
2025-07-01 12:07:33,468:INFO:Creating metrics dataframe
2025-07-01 12:07:33,471:INFO:Uploading results into container
2025-07-01 12:07:33,471:INFO:Uploading model into container now
2025-07-01 12:07:33,472:INFO:_master_model_container: 10
2025-07-01 12:07:33,472:INFO:_display_container: 2
2025-07-01 12:07:33,473:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=900, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-07-01 12:07:33,473:INFO:create_model() successfully completed......................................
2025-07-01 12:07:33,658:INFO:SubProcess create_model() end ==================================
2025-07-01 12:07:33,658:INFO:Creating metrics dataframe
2025-07-01 12:07:33,666:INFO:Initializing Linear Discriminant Analysis
2025-07-01 12:07:33,666:INFO:Total runtime is 0.08930497566858928 minutes
2025-07-01 12:07:33,669:INFO:SubProcess create_model() called ==================================
2025-07-01 12:07:33,669:INFO:Initializing create_model()
2025-07-01 12:07:33,669:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DD673010>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231DD6DF0D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 12:07:33,669:INFO:Checking exceptions
2025-07-01 12:07:33,670:INFO:Importing libraries
2025-07-01 12:07:33,670:INFO:Copying training dataset
2025-07-01 12:07:33,677:INFO:Defining folds
2025-07-01 12:07:33,677:INFO:Declaring metric variables
2025-07-01 12:07:33,680:INFO:Importing untrained model
2025-07-01 12:07:33,685:INFO:Linear Discriminant Analysis Imported successfully
2025-07-01 12:07:33,693:INFO:Starting cross validation
2025-07-01 12:07:33,693:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 12:07:33,774:INFO:Calculating mean and std
2025-07-01 12:07:33,775:INFO:Creating metrics dataframe
2025-07-01 12:07:33,776:INFO:Uploading results into container
2025-07-01 12:07:33,777:INFO:Uploading model into container now
2025-07-01 12:07:33,777:INFO:_master_model_container: 11
2025-07-01 12:07:33,777:INFO:_display_container: 2
2025-07-01 12:07:33,777:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-07-01 12:07:33,777:INFO:create_model() successfully completed......................................
2025-07-01 12:07:33,947:INFO:SubProcess create_model() end ==================================
2025-07-01 12:07:33,947:INFO:Creating metrics dataframe
2025-07-01 12:07:33,959:INFO:Initializing Extra Trees Classifier
2025-07-01 12:07:33,959:INFO:Total runtime is 0.09418381849924723 minutes
2025-07-01 12:07:33,963:INFO:SubProcess create_model() called ==================================
2025-07-01 12:07:33,963:INFO:Initializing create_model()
2025-07-01 12:07:33,963:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DD673010>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231DD6DF0D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 12:07:33,963:INFO:Checking exceptions
2025-07-01 12:07:33,963:INFO:Importing libraries
2025-07-01 12:07:33,963:INFO:Copying training dataset
2025-07-01 12:07:33,969:INFO:Defining folds
2025-07-01 12:07:33,969:INFO:Declaring metric variables
2025-07-01 12:07:33,973:INFO:Importing untrained model
2025-07-01 12:07:33,978:INFO:Extra Trees Classifier Imported successfully
2025-07-01 12:07:33,985:INFO:Starting cross validation
2025-07-01 12:07:33,986:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 12:07:34,650:INFO:Calculating mean and std
2025-07-01 12:07:34,652:INFO:Creating metrics dataframe
2025-07-01 12:07:34,654:INFO:Uploading results into container
2025-07-01 12:07:34,655:INFO:Uploading model into container now
2025-07-01 12:07:34,656:INFO:_master_model_container: 12
2025-07-01 12:07:34,656:INFO:_display_container: 2
2025-07-01 12:07:34,657:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=900, verbose=0,
                     warm_start=False)
2025-07-01 12:07:34,657:INFO:create_model() successfully completed......................................
2025-07-01 12:07:34,843:INFO:SubProcess create_model() end ==================================
2025-07-01 12:07:34,843:INFO:Creating metrics dataframe
2025-07-01 12:07:34,852:INFO:Initializing Extreme Gradient Boosting
2025-07-01 12:07:34,852:INFO:Total runtime is 0.1090575337409973 minutes
2025-07-01 12:07:34,855:INFO:SubProcess create_model() called ==================================
2025-07-01 12:07:34,856:INFO:Initializing create_model()
2025-07-01 12:07:34,856:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DD673010>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231DD6DF0D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 12:07:34,857:INFO:Checking exceptions
2025-07-01 12:07:34,857:INFO:Importing libraries
2025-07-01 12:07:34,857:INFO:Copying training dataset
2025-07-01 12:07:34,863:INFO:Defining folds
2025-07-01 12:07:34,863:INFO:Declaring metric variables
2025-07-01 12:07:34,866:INFO:Importing untrained model
2025-07-01 12:07:34,872:INFO:Extreme Gradient Boosting Imported successfully
2025-07-01 12:07:34,880:INFO:Starting cross validation
2025-07-01 12:07:34,881:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 12:07:35,352:INFO:Calculating mean and std
2025-07-01 12:07:35,353:INFO:Creating metrics dataframe
2025-07-01 12:07:35,359:INFO:Uploading results into container
2025-07-01 12:07:35,360:INFO:Uploading model into container now
2025-07-01 12:07:35,360:INFO:_master_model_container: 13
2025-07-01 12:07:35,360:INFO:_display_container: 2
2025-07-01 12:07:35,361:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-07-01 12:07:35,361:INFO:create_model() successfully completed......................................
2025-07-01 12:07:35,586:INFO:SubProcess create_model() end ==================================
2025-07-01 12:07:35,586:INFO:Creating metrics dataframe
2025-07-01 12:07:35,600:INFO:Initializing Light Gradient Boosting Machine
2025-07-01 12:07:35,600:INFO:Total runtime is 0.1215303063392639 minutes
2025-07-01 12:07:35,603:INFO:SubProcess create_model() called ==================================
2025-07-01 12:07:35,604:INFO:Initializing create_model()
2025-07-01 12:07:35,604:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DD673010>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231DD6DF0D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 12:07:35,604:INFO:Checking exceptions
2025-07-01 12:07:35,604:INFO:Importing libraries
2025-07-01 12:07:35,604:INFO:Copying training dataset
2025-07-01 12:07:35,613:INFO:Defining folds
2025-07-01 12:07:35,613:INFO:Declaring metric variables
2025-07-01 12:07:35,617:INFO:Importing untrained model
2025-07-01 12:07:35,623:INFO:Light Gradient Boosting Machine Imported successfully
2025-07-01 12:07:35,632:INFO:Starting cross validation
2025-07-01 12:07:35,633:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 12:07:36,684:INFO:Calculating mean and std
2025-07-01 12:07:36,686:INFO:Creating metrics dataframe
2025-07-01 12:07:36,692:INFO:Uploading results into container
2025-07-01 12:07:36,696:INFO:Uploading model into container now
2025-07-01 12:07:36,697:INFO:_master_model_container: 14
2025-07-01 12:07:36,697:INFO:_display_container: 2
2025-07-01 12:07:36,698:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=900, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-07-01 12:07:36,699:INFO:create_model() successfully completed......................................
2025-07-01 12:07:36,992:INFO:SubProcess create_model() end ==================================
2025-07-01 12:07:36,992:INFO:Creating metrics dataframe
2025-07-01 12:07:37,006:INFO:Initializing Dummy Classifier
2025-07-01 12:07:37,006:INFO:Total runtime is 0.14496622880299884 minutes
2025-07-01 12:07:37,011:INFO:SubProcess create_model() called ==================================
2025-07-01 12:07:37,011:INFO:Initializing create_model()
2025-07-01 12:07:37,012:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DD673010>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231DD6DF0D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 12:07:37,012:INFO:Checking exceptions
2025-07-01 12:07:37,012:INFO:Importing libraries
2025-07-01 12:07:37,012:INFO:Copying training dataset
2025-07-01 12:07:37,018:INFO:Defining folds
2025-07-01 12:07:37,018:INFO:Declaring metric variables
2025-07-01 12:07:37,024:INFO:Importing untrained model
2025-07-01 12:07:37,029:INFO:Dummy Classifier Imported successfully
2025-07-01 12:07:37,036:INFO:Starting cross validation
2025-07-01 12:07:37,038:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 12:07:37,065:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-01 12:07:37,066:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-01 12:07:37,069:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-01 12:07:37,074:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-01 12:07:37,097:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-01 12:07:37,098:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-01 12:07:37,116:INFO:Calculating mean and std
2025-07-01 12:07:37,116:INFO:Creating metrics dataframe
2025-07-01 12:07:37,119:INFO:Uploading results into container
2025-07-01 12:07:37,120:INFO:Uploading model into container now
2025-07-01 12:07:37,121:INFO:_master_model_container: 15
2025-07-01 12:07:37,121:INFO:_display_container: 2
2025-07-01 12:07:37,121:INFO:DummyClassifier(constant=None, random_state=900, strategy='prior')
2025-07-01 12:07:37,122:INFO:create_model() successfully completed......................................
2025-07-01 12:07:37,377:INFO:SubProcess create_model() end ==================================
2025-07-01 12:07:37,378:INFO:Creating metrics dataframe
2025-07-01 12:07:37,394:WARNING:d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-07-01 12:07:37,405:INFO:Initializing create_model()
2025-07-01 12:07:37,405:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DD673010>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=900), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 12:07:37,405:INFO:Checking exceptions
2025-07-01 12:07:37,411:INFO:Importing libraries
2025-07-01 12:07:37,411:INFO:Copying training dataset
2025-07-01 12:07:37,416:INFO:Defining folds
2025-07-01 12:07:37,416:INFO:Declaring metric variables
2025-07-01 12:07:37,417:INFO:Importing untrained model
2025-07-01 12:07:37,417:INFO:Declaring custom model
2025-07-01 12:07:37,417:INFO:Ada Boost Classifier Imported successfully
2025-07-01 12:07:37,418:INFO:Cross validation set to False
2025-07-01 12:07:37,418:INFO:Fitting Model
2025-07-01 12:07:37,420:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 12:07:37,546:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=900)
2025-07-01 12:07:37,546:INFO:create_model() successfully completed......................................
2025-07-01 12:07:37,812:INFO:_master_model_container: 15
2025-07-01 12:07:37,812:INFO:_display_container: 2
2025-07-01 12:07:37,813:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=900)
2025-07-01 12:07:37,813:INFO:compare_models() successfully completed......................................
2025-07-01 12:07:44,483:INFO:PyCaret ClassificationExperiment
2025-07-01 12:07:44,483:INFO:Logging name: clf-default-name
2025-07-01 12:07:44,483:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-07-01 12:07:44,483:INFO:version 3.3.2
2025-07-01 12:07:44,483:INFO:Initializing setup()
2025-07-01 12:07:44,483:INFO:self.USI: b5e6
2025-07-01 12:07:44,483:INFO:self._variable_keys: {'fix_imbalance', 'data', 'is_multiclass', 'y_test', 'X_train', 'log_plots_param', 'X', 'X_test', 'logging_param', 'n_jobs_param', 'gpu_param', 'idx', 'html_param', 'fold_generator', '_ml_usecase', 'exp_id', 'USI', '_available_plots', 'gpu_n_jobs_param', 'pipeline', 'y_train', 'fold_groups_param', 'y', 'fold_shuffle_param', 'target_param', 'memory', 'seed', 'exp_name_log'}
2025-07-01 12:07:44,483:INFO:Checking environment
2025-07-01 12:07:44,483:INFO:python_version: 3.11.13
2025-07-01 12:07:44,483:INFO:python_build: ('main', 'Jun  5 2025 13:03:15')
2025-07-01 12:07:44,483:INFO:machine: AMD64
2025-07-01 12:07:44,483:INFO:platform: Windows-10-10.0.22631-SP0
2025-07-01 12:07:44,490:INFO:Memory: svmem(total=12674457600, available=1382268928, percent=89.1, used=11292188672, free=1382268928)
2025-07-01 12:07:44,490:INFO:Physical Core: 4
2025-07-01 12:07:44,490:INFO:Logical Core: 8
2025-07-01 12:07:44,490:INFO:Checking libraries
2025-07-01 12:07:44,490:INFO:System:
2025-07-01 12:07:44,490:INFO:    python: 3.11.13 | packaged by Anaconda, Inc. | (main, Jun  5 2025, 13:03:15) [MSC v.1929 64 bit (AMD64)]
2025-07-01 12:07:44,490:INFO:executable: d:\ML_notes\.conda\python.exe
2025-07-01 12:07:44,490:INFO:   machine: Windows-10-10.0.22631-SP0
2025-07-01 12:07:44,490:INFO:PyCaret required dependencies:
2025-07-01 12:07:44,490:INFO:                 pip: 25.1
2025-07-01 12:07:44,491:INFO:          setuptools: 78.1.1
2025-07-01 12:07:44,491:INFO:             pycaret: 3.3.2
2025-07-01 12:07:44,491:INFO:             IPython: 9.3.0
2025-07-01 12:07:44,491:INFO:          ipywidgets: 8.1.7
2025-07-01 12:07:44,491:INFO:                tqdm: 4.67.1
2025-07-01 12:07:44,491:INFO:               numpy: 1.26.4
2025-07-01 12:07:44,491:INFO:              pandas: 2.1.4
2025-07-01 12:07:44,491:INFO:              jinja2: 3.1.6
2025-07-01 12:07:44,491:INFO:               scipy: 1.11.4
2025-07-01 12:07:44,491:INFO:              joblib: 1.3.2
2025-07-01 12:07:44,491:INFO:             sklearn: 1.4.2
2025-07-01 12:07:44,491:INFO:                pyod: 2.0.5
2025-07-01 12:07:44,491:INFO:            imblearn: 0.13.0
2025-07-01 12:07:44,491:INFO:   category_encoders: 2.7.0
2025-07-01 12:07:44,491:INFO:            lightgbm: 4.6.0
2025-07-01 12:07:44,491:INFO:               numba: 0.61.0
2025-07-01 12:07:44,491:INFO:            requests: 2.32.4
2025-07-01 12:07:44,491:INFO:          matplotlib: 3.7.5
2025-07-01 12:07:44,491:INFO:          scikitplot: 0.3.7
2025-07-01 12:07:44,491:INFO:         yellowbrick: 1.5
2025-07-01 12:07:44,491:INFO:              plotly: 5.24.1
2025-07-01 12:07:44,491:INFO:    plotly-resampler: Not installed
2025-07-01 12:07:44,491:INFO:             kaleido: 1.0.0
2025-07-01 12:07:44,491:INFO:           schemdraw: 0.15
2025-07-01 12:07:44,491:INFO:         statsmodels: 0.14.4
2025-07-01 12:07:44,491:INFO:              sktime: 0.26.0
2025-07-01 12:07:44,491:INFO:               tbats: 1.1.3
2025-07-01 12:07:44,491:INFO:            pmdarima: 2.0.4
2025-07-01 12:07:44,491:INFO:              psutil: 7.0.0
2025-07-01 12:07:44,491:INFO:          markupsafe: 3.0.2
2025-07-01 12:07:44,491:INFO:             pickle5: Not installed
2025-07-01 12:07:44,491:INFO:         cloudpickle: 3.1.1
2025-07-01 12:07:44,491:INFO:         deprecation: 2.1.0
2025-07-01 12:07:44,491:INFO:              xxhash: 3.5.0
2025-07-01 12:07:44,492:INFO:           wurlitzer: Not installed
2025-07-01 12:07:44,492:INFO:PyCaret optional dependencies:
2025-07-01 12:07:44,492:INFO:                shap: Not installed
2025-07-01 12:07:44,492:INFO:           interpret: Not installed
2025-07-01 12:07:44,492:INFO:                umap: Not installed
2025-07-01 12:07:44,492:INFO:     ydata_profiling: 4.16.1
2025-07-01 12:07:44,492:INFO:  explainerdashboard: Not installed
2025-07-01 12:07:44,492:INFO:             autoviz: Not installed
2025-07-01 12:07:44,492:INFO:           fairlearn: Not installed
2025-07-01 12:07:44,492:INFO:          deepchecks: Not installed
2025-07-01 12:07:44,492:INFO:             xgboost: 3.0.2
2025-07-01 12:07:44,492:INFO:            catboost: Not installed
2025-07-01 12:07:44,492:INFO:              kmodes: Not installed
2025-07-01 12:07:44,492:INFO:             mlxtend: Not installed
2025-07-01 12:07:44,492:INFO:       statsforecast: Not installed
2025-07-01 12:07:44,492:INFO:        tune_sklearn: Not installed
2025-07-01 12:07:44,492:INFO:                 ray: Not installed
2025-07-01 12:07:44,492:INFO:            hyperopt: Not installed
2025-07-01 12:07:44,492:INFO:              optuna: Not installed
2025-07-01 12:07:44,492:INFO:               skopt: Not installed
2025-07-01 12:07:44,492:INFO:              mlflow: Not installed
2025-07-01 12:07:44,492:INFO:              gradio: Not installed
2025-07-01 12:07:44,492:INFO:             fastapi: Not installed
2025-07-01 12:07:44,493:INFO:             uvicorn: Not installed
2025-07-01 12:07:44,493:INFO:              m2cgen: Not installed
2025-07-01 12:07:44,493:INFO:           evidently: Not installed
2025-07-01 12:07:44,493:INFO:               fugue: Not installed
2025-07-01 12:07:44,493:INFO:           streamlit: Not installed
2025-07-01 12:07:44,493:INFO:             prophet: Not installed
2025-07-01 12:07:44,493:INFO:None
2025-07-01 12:07:44,493:INFO:Set up data.
2025-07-01 12:07:44,500:INFO:Set up folding strategy.
2025-07-01 12:07:44,500:INFO:Set up train/test split.
2025-07-01 12:07:44,506:INFO:Set up index.
2025-07-01 12:07:44,506:INFO:Assigning column types.
2025-07-01 12:07:44,511:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-07-01 12:07:44,551:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-01 12:07:44,552:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-01 12:07:44,579:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 12:07:44,582:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 12:07:44,625:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-01 12:07:44,625:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-01 12:07:44,651:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 12:07:44,655:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 12:07:44,656:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-07-01 12:07:44,699:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-01 12:07:44,728:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 12:07:44,730:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 12:07:44,775:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-01 12:07:44,805:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 12:07:44,807:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 12:07:44,808:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-07-01 12:07:44,880:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 12:07:44,883:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 12:07:44,962:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 12:07:44,964:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 12:07:44,965:INFO:Preparing preprocessing pipeline...
2025-07-01 12:07:44,969:INFO:Finished creating preprocessing pipeline.
2025-07-01 12:07:44,970:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\YOGA\AppData\Local\Temp\joblib),
         steps=[('placeholder', None)], verbose=False)
2025-07-01 12:07:44,970:INFO:Creating final display dataframe.
2025-07-01 12:07:45,014:INFO:Setup _display_container:                     Description              Value
0                    Session id                900
1                        Target  Target_Churn_True
2                   Target type             Binary
3           Original data shape          (840, 20)
4        Transformed data shape          (840, 20)
5   Transformed train set shape          (588, 20)
6    Transformed test set shape          (252, 20)
7              Numeric features                 19
8                    Preprocess               True
9               Imputation type               None
10               Fold Generator    StratifiedKFold
11                  Fold Number                 10
12                     CPU Jobs                 -1
13                      Use GPU              False
14               Log Experiment              False
15              Experiment Name   clf-default-name
16                          USI               b5e6
2025-07-01 12:07:45,104:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 12:07:45,107:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 12:07:45,183:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 12:07:45,186:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 12:07:45,188:INFO:setup() successfully completed in 0.71s...............
2025-07-01 12:07:45,190:INFO:Initializing compare_models()
2025-07-01 12:07:45,190:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DFF1A690>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000231DFF1A690>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2025-07-01 12:07:45,190:INFO:Checking exceptions
2025-07-01 12:07:45,193:INFO:Preparing display monitor
2025-07-01 12:07:45,217:INFO:Initializing Logistic Regression
2025-07-01 12:07:45,217:INFO:Total runtime is 0.0 minutes
2025-07-01 12:07:45,222:INFO:SubProcess create_model() called ==================================
2025-07-01 12:07:45,223:INFO:Initializing create_model()
2025-07-01 12:07:45,223:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DFF1A690>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231DD671990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 12:07:45,223:INFO:Checking exceptions
2025-07-01 12:07:45,223:INFO:Importing libraries
2025-07-01 12:07:45,223:INFO:Copying training dataset
2025-07-01 12:07:45,231:INFO:Defining folds
2025-07-01 12:07:45,231:INFO:Declaring metric variables
2025-07-01 12:07:45,234:INFO:Importing untrained model
2025-07-01 12:07:45,239:INFO:Logistic Regression Imported successfully
2025-07-01 12:07:45,249:INFO:Starting cross validation
2025-07-01 12:07:45,250:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 12:07:45,569:INFO:Calculating mean and std
2025-07-01 12:07:45,570:INFO:Creating metrics dataframe
2025-07-01 12:07:45,572:INFO:Uploading results into container
2025-07-01 12:07:45,572:INFO:Uploading model into container now
2025-07-01 12:07:45,573:INFO:_master_model_container: 1
2025-07-01 12:07:45,573:INFO:_display_container: 2
2025-07-01 12:07:45,573:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=900, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-07-01 12:07:45,573:INFO:create_model() successfully completed......................................
2025-07-01 12:07:45,816:INFO:SubProcess create_model() end ==================================
2025-07-01 12:07:45,816:INFO:Creating metrics dataframe
2025-07-01 12:07:45,826:INFO:Initializing K Neighbors Classifier
2025-07-01 12:07:45,826:INFO:Total runtime is 0.0101348876953125 minutes
2025-07-01 12:07:45,830:INFO:SubProcess create_model() called ==================================
2025-07-01 12:07:45,831:INFO:Initializing create_model()
2025-07-01 12:07:45,831:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DFF1A690>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231DD671990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 12:07:45,831:INFO:Checking exceptions
2025-07-01 12:07:45,831:INFO:Importing libraries
2025-07-01 12:07:45,831:INFO:Copying training dataset
2025-07-01 12:07:45,836:INFO:Defining folds
2025-07-01 12:07:45,837:INFO:Declaring metric variables
2025-07-01 12:07:45,842:INFO:Importing untrained model
2025-07-01 12:07:45,846:INFO:K Neighbors Classifier Imported successfully
2025-07-01 12:07:45,857:INFO:Starting cross validation
2025-07-01 12:07:45,859:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 12:07:45,969:INFO:Calculating mean and std
2025-07-01 12:07:45,970:INFO:Creating metrics dataframe
2025-07-01 12:07:45,974:INFO:Uploading results into container
2025-07-01 12:07:45,974:INFO:Uploading model into container now
2025-07-01 12:07:45,975:INFO:_master_model_container: 2
2025-07-01 12:07:45,975:INFO:_display_container: 2
2025-07-01 12:07:45,975:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-07-01 12:07:45,975:INFO:create_model() successfully completed......................................
2025-07-01 12:07:46,196:INFO:SubProcess create_model() end ==================================
2025-07-01 12:07:46,196:INFO:Creating metrics dataframe
2025-07-01 12:07:46,207:INFO:Initializing Naive Bayes
2025-07-01 12:07:46,207:INFO:Total runtime is 0.016496193408966065 minutes
2025-07-01 12:07:46,211:INFO:SubProcess create_model() called ==================================
2025-07-01 12:07:46,212:INFO:Initializing create_model()
2025-07-01 12:07:46,212:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DFF1A690>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231DD671990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 12:07:46,212:INFO:Checking exceptions
2025-07-01 12:07:46,212:INFO:Importing libraries
2025-07-01 12:07:46,212:INFO:Copying training dataset
2025-07-01 12:07:46,219:INFO:Defining folds
2025-07-01 12:07:46,219:INFO:Declaring metric variables
2025-07-01 12:07:46,225:INFO:Importing untrained model
2025-07-01 12:07:46,230:INFO:Naive Bayes Imported successfully
2025-07-01 12:07:46,241:INFO:Starting cross validation
2025-07-01 12:07:46,243:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 12:07:46,329:INFO:Calculating mean and std
2025-07-01 12:07:46,330:INFO:Creating metrics dataframe
2025-07-01 12:07:46,332:INFO:Uploading results into container
2025-07-01 12:07:46,333:INFO:Uploading model into container now
2025-07-01 12:07:46,333:INFO:_master_model_container: 3
2025-07-01 12:07:46,333:INFO:_display_container: 2
2025-07-01 12:07:46,333:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-07-01 12:07:46,333:INFO:create_model() successfully completed......................................
2025-07-01 12:07:46,536:INFO:SubProcess create_model() end ==================================
2025-07-01 12:07:46,536:INFO:Creating metrics dataframe
2025-07-01 12:07:46,546:INFO:Initializing Decision Tree Classifier
2025-07-01 12:07:46,546:INFO:Total runtime is 0.022145851453145345 minutes
2025-07-01 12:07:46,549:INFO:SubProcess create_model() called ==================================
2025-07-01 12:07:46,549:INFO:Initializing create_model()
2025-07-01 12:07:46,550:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DFF1A690>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231DD671990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 12:07:46,550:INFO:Checking exceptions
2025-07-01 12:07:46,550:INFO:Importing libraries
2025-07-01 12:07:46,550:INFO:Copying training dataset
2025-07-01 12:07:46,559:INFO:Defining folds
2025-07-01 12:07:46,560:INFO:Declaring metric variables
2025-07-01 12:07:46,564:INFO:Importing untrained model
2025-07-01 12:07:46,568:INFO:Decision Tree Classifier Imported successfully
2025-07-01 12:07:46,580:INFO:Starting cross validation
2025-07-01 12:07:46,581:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 12:07:46,680:INFO:Calculating mean and std
2025-07-01 12:07:46,682:INFO:Creating metrics dataframe
2025-07-01 12:07:46,684:INFO:Uploading results into container
2025-07-01 12:07:46,684:INFO:Uploading model into container now
2025-07-01 12:07:46,685:INFO:_master_model_container: 4
2025-07-01 12:07:46,685:INFO:_display_container: 2
2025-07-01 12:07:46,685:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=900, splitter='best')
2025-07-01 12:07:46,686:INFO:create_model() successfully completed......................................
2025-07-01 12:07:46,880:INFO:SubProcess create_model() end ==================================
2025-07-01 12:07:46,880:INFO:Creating metrics dataframe
2025-07-01 12:07:46,889:INFO:Initializing SVM - Linear Kernel
2025-07-01 12:07:46,889:INFO:Total runtime is 0.027858901023864745 minutes
2025-07-01 12:07:46,892:INFO:SubProcess create_model() called ==================================
2025-07-01 12:07:46,893:INFO:Initializing create_model()
2025-07-01 12:07:46,893:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DFF1A690>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231DD671990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 12:07:46,893:INFO:Checking exceptions
2025-07-01 12:07:46,893:INFO:Importing libraries
2025-07-01 12:07:46,893:INFO:Copying training dataset
2025-07-01 12:07:46,899:INFO:Defining folds
2025-07-01 12:07:46,899:INFO:Declaring metric variables
2025-07-01 12:07:46,902:INFO:Importing untrained model
2025-07-01 12:07:46,909:INFO:SVM - Linear Kernel Imported successfully
2025-07-01 12:07:46,916:INFO:Starting cross validation
2025-07-01 12:07:46,916:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 12:07:47,007:INFO:Calculating mean and std
2025-07-01 12:07:47,008:INFO:Creating metrics dataframe
2025-07-01 12:07:47,010:INFO:Uploading results into container
2025-07-01 12:07:47,011:INFO:Uploading model into container now
2025-07-01 12:07:47,011:INFO:_master_model_container: 5
2025-07-01 12:07:47,011:INFO:_display_container: 2
2025-07-01 12:07:47,011:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=900, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-07-01 12:07:47,011:INFO:create_model() successfully completed......................................
2025-07-01 12:07:47,185:INFO:SubProcess create_model() end ==================================
2025-07-01 12:07:47,185:INFO:Creating metrics dataframe
2025-07-01 12:07:47,195:INFO:Initializing Ridge Classifier
2025-07-01 12:07:47,195:INFO:Total runtime is 0.0329536239306132 minutes
2025-07-01 12:07:47,199:INFO:SubProcess create_model() called ==================================
2025-07-01 12:07:47,199:INFO:Initializing create_model()
2025-07-01 12:07:47,199:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DFF1A690>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231DD671990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 12:07:47,199:INFO:Checking exceptions
2025-07-01 12:07:47,199:INFO:Importing libraries
2025-07-01 12:07:47,200:INFO:Copying training dataset
2025-07-01 12:07:47,206:INFO:Defining folds
2025-07-01 12:07:47,207:INFO:Declaring metric variables
2025-07-01 12:07:47,212:INFO:Importing untrained model
2025-07-01 12:07:47,215:INFO:Ridge Classifier Imported successfully
2025-07-01 12:07:47,222:INFO:Starting cross validation
2025-07-01 12:07:47,223:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 12:07:47,326:INFO:Calculating mean and std
2025-07-01 12:07:47,328:INFO:Creating metrics dataframe
2025-07-01 12:07:47,330:INFO:Uploading results into container
2025-07-01 12:07:47,331:INFO:Uploading model into container now
2025-07-01 12:07:47,331:INFO:_master_model_container: 6
2025-07-01 12:07:47,331:INFO:_display_container: 2
2025-07-01 12:07:47,332:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=900, solver='auto',
                tol=0.0001)
2025-07-01 12:07:47,332:INFO:create_model() successfully completed......................................
2025-07-01 12:07:47,537:INFO:SubProcess create_model() end ==================================
2025-07-01 12:07:47,537:INFO:Creating metrics dataframe
2025-07-01 12:07:47,548:INFO:Initializing Random Forest Classifier
2025-07-01 12:07:47,548:INFO:Total runtime is 0.038840186595916745 minutes
2025-07-01 12:07:47,552:INFO:SubProcess create_model() called ==================================
2025-07-01 12:07:47,552:INFO:Initializing create_model()
2025-07-01 12:07:47,552:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DFF1A690>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231DD671990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 12:07:47,552:INFO:Checking exceptions
2025-07-01 12:07:47,553:INFO:Importing libraries
2025-07-01 12:07:47,553:INFO:Copying training dataset
2025-07-01 12:07:47,560:INFO:Defining folds
2025-07-01 12:07:47,560:INFO:Declaring metric variables
2025-07-01 12:07:47,564:INFO:Importing untrained model
2025-07-01 12:07:47,569:INFO:Random Forest Classifier Imported successfully
2025-07-01 12:07:47,580:INFO:Starting cross validation
2025-07-01 12:07:47,581:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 12:07:48,526:INFO:Calculating mean and std
2025-07-01 12:07:48,528:INFO:Creating metrics dataframe
2025-07-01 12:07:48,530:INFO:Uploading results into container
2025-07-01 12:07:48,530:INFO:Uploading model into container now
2025-07-01 12:07:48,531:INFO:_master_model_container: 7
2025-07-01 12:07:48,531:INFO:_display_container: 2
2025-07-01 12:07:48,532:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=900, verbose=0,
                       warm_start=False)
2025-07-01 12:07:48,532:INFO:create_model() successfully completed......................................
2025-07-01 12:07:48,749:INFO:SubProcess create_model() end ==================================
2025-07-01 12:07:48,749:INFO:Creating metrics dataframe
2025-07-01 12:07:48,759:INFO:Initializing Quadratic Discriminant Analysis
2025-07-01 12:07:48,759:INFO:Total runtime is 0.059030791123708085 minutes
2025-07-01 12:07:48,763:INFO:SubProcess create_model() called ==================================
2025-07-01 12:07:48,764:INFO:Initializing create_model()
2025-07-01 12:07:48,764:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DFF1A690>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231DD671990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 12:07:48,764:INFO:Checking exceptions
2025-07-01 12:07:48,764:INFO:Importing libraries
2025-07-01 12:07:48,764:INFO:Copying training dataset
2025-07-01 12:07:48,772:INFO:Defining folds
2025-07-01 12:07:48,773:INFO:Declaring metric variables
2025-07-01 12:07:48,778:INFO:Importing untrained model
2025-07-01 12:07:48,782:INFO:Quadratic Discriminant Analysis Imported successfully
2025-07-01 12:07:48,794:INFO:Starting cross validation
2025-07-01 12:07:48,795:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 12:07:48,813:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 12:07:48,815:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 12:07:48,817:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 12:07:48,819:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 12:07:48,821:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 12:07:48,829:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 12:07:48,831:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 12:07:48,859:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 12:07:48,860:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 12:07:48,861:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 12:07:48,888:INFO:Calculating mean and std
2025-07-01 12:07:48,891:INFO:Creating metrics dataframe
2025-07-01 12:07:48,893:INFO:Uploading results into container
2025-07-01 12:07:48,894:INFO:Uploading model into container now
2025-07-01 12:07:48,894:INFO:_master_model_container: 8
2025-07-01 12:07:48,895:INFO:_display_container: 2
2025-07-01 12:07:48,895:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-07-01 12:07:48,895:INFO:create_model() successfully completed......................................
2025-07-01 12:07:49,127:INFO:SubProcess create_model() end ==================================
2025-07-01 12:07:49,128:INFO:Creating metrics dataframe
2025-07-01 12:07:49,137:INFO:Initializing Ada Boost Classifier
2025-07-01 12:07:49,138:INFO:Total runtime is 0.06535131931304931 minutes
2025-07-01 12:07:49,141:INFO:SubProcess create_model() called ==================================
2025-07-01 12:07:49,142:INFO:Initializing create_model()
2025-07-01 12:07:49,142:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DFF1A690>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231DD671990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 12:07:49,142:INFO:Checking exceptions
2025-07-01 12:07:49,142:INFO:Importing libraries
2025-07-01 12:07:49,142:INFO:Copying training dataset
2025-07-01 12:07:49,148:INFO:Defining folds
2025-07-01 12:07:49,148:INFO:Declaring metric variables
2025-07-01 12:07:49,153:INFO:Importing untrained model
2025-07-01 12:07:49,157:INFO:Ada Boost Classifier Imported successfully
2025-07-01 12:07:49,167:INFO:Starting cross validation
2025-07-01 12:07:49,168:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 12:07:49,185:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 12:07:49,189:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 12:07:49,190:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 12:07:49,191:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 12:07:49,194:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 12:07:49,195:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 12:07:49,208:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 12:07:49,223:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 12:07:49,433:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 12:07:49,435:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 12:07:49,633:INFO:Calculating mean and std
2025-07-01 12:07:49,634:INFO:Creating metrics dataframe
2025-07-01 12:07:49,638:INFO:Uploading results into container
2025-07-01 12:07:49,639:INFO:Uploading model into container now
2025-07-01 12:07:49,639:INFO:_master_model_container: 9
2025-07-01 12:07:49,639:INFO:_display_container: 2
2025-07-01 12:07:49,640:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=900)
2025-07-01 12:07:49,640:INFO:create_model() successfully completed......................................
2025-07-01 12:07:49,837:INFO:SubProcess create_model() end ==================================
2025-07-01 12:07:49,837:INFO:Creating metrics dataframe
2025-07-01 12:07:49,849:INFO:Initializing Gradient Boosting Classifier
2025-07-01 12:07:49,850:INFO:Total runtime is 0.07720765670140584 minutes
2025-07-01 12:07:49,854:INFO:SubProcess create_model() called ==================================
2025-07-01 12:07:49,855:INFO:Initializing create_model()
2025-07-01 12:07:49,855:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DFF1A690>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231DD671990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 12:07:49,855:INFO:Checking exceptions
2025-07-01 12:07:49,855:INFO:Importing libraries
2025-07-01 12:07:49,855:INFO:Copying training dataset
2025-07-01 12:07:49,861:INFO:Defining folds
2025-07-01 12:07:49,862:INFO:Declaring metric variables
2025-07-01 12:07:49,865:INFO:Importing untrained model
2025-07-01 12:07:49,872:INFO:Gradient Boosting Classifier Imported successfully
2025-07-01 12:07:49,880:INFO:Starting cross validation
2025-07-01 12:07:49,880:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 12:07:50,699:INFO:Calculating mean and std
2025-07-01 12:07:50,700:INFO:Creating metrics dataframe
2025-07-01 12:07:50,704:INFO:Uploading results into container
2025-07-01 12:07:50,705:INFO:Uploading model into container now
2025-07-01 12:07:50,705:INFO:_master_model_container: 10
2025-07-01 12:07:50,705:INFO:_display_container: 2
2025-07-01 12:07:50,706:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=900, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-07-01 12:07:50,706:INFO:create_model() successfully completed......................................
2025-07-01 12:07:50,880:INFO:SubProcess create_model() end ==================================
2025-07-01 12:07:50,880:INFO:Creating metrics dataframe
2025-07-01 12:07:50,890:INFO:Initializing Linear Discriminant Analysis
2025-07-01 12:07:50,890:INFO:Total runtime is 0.09454824924468994 minutes
2025-07-01 12:07:50,894:INFO:SubProcess create_model() called ==================================
2025-07-01 12:07:50,895:INFO:Initializing create_model()
2025-07-01 12:07:50,895:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DFF1A690>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231DD671990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 12:07:50,895:INFO:Checking exceptions
2025-07-01 12:07:50,895:INFO:Importing libraries
2025-07-01 12:07:50,895:INFO:Copying training dataset
2025-07-01 12:07:50,900:INFO:Defining folds
2025-07-01 12:07:50,900:INFO:Declaring metric variables
2025-07-01 12:07:50,905:INFO:Importing untrained model
2025-07-01 12:07:50,909:INFO:Linear Discriminant Analysis Imported successfully
2025-07-01 12:07:50,916:INFO:Starting cross validation
2025-07-01 12:07:50,916:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 12:07:50,993:INFO:Calculating mean and std
2025-07-01 12:07:50,994:INFO:Creating metrics dataframe
2025-07-01 12:07:50,996:INFO:Uploading results into container
2025-07-01 12:07:50,996:INFO:Uploading model into container now
2025-07-01 12:07:50,996:INFO:_master_model_container: 11
2025-07-01 12:07:50,996:INFO:_display_container: 2
2025-07-01 12:07:50,997:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-07-01 12:07:50,997:INFO:create_model() successfully completed......................................
2025-07-01 12:07:51,174:INFO:SubProcess create_model() end ==================================
2025-07-01 12:07:51,174:INFO:Creating metrics dataframe
2025-07-01 12:07:51,182:INFO:Initializing Extra Trees Classifier
2025-07-01 12:07:51,182:INFO:Total runtime is 0.09940957228342691 minutes
2025-07-01 12:07:51,188:INFO:SubProcess create_model() called ==================================
2025-07-01 12:07:51,188:INFO:Initializing create_model()
2025-07-01 12:07:51,188:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DFF1A690>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231DD671990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 12:07:51,189:INFO:Checking exceptions
2025-07-01 12:07:51,189:INFO:Importing libraries
2025-07-01 12:07:51,189:INFO:Copying training dataset
2025-07-01 12:07:51,194:INFO:Defining folds
2025-07-01 12:07:51,194:INFO:Declaring metric variables
2025-07-01 12:07:51,197:INFO:Importing untrained model
2025-07-01 12:07:51,202:INFO:Extra Trees Classifier Imported successfully
2025-07-01 12:07:51,210:INFO:Starting cross validation
2025-07-01 12:07:51,211:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 12:07:51,891:INFO:Calculating mean and std
2025-07-01 12:07:51,893:INFO:Creating metrics dataframe
2025-07-01 12:07:51,895:INFO:Uploading results into container
2025-07-01 12:07:51,895:INFO:Uploading model into container now
2025-07-01 12:07:51,896:INFO:_master_model_container: 12
2025-07-01 12:07:51,896:INFO:_display_container: 2
2025-07-01 12:07:51,896:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=900, verbose=0,
                     warm_start=False)
2025-07-01 12:07:51,897:INFO:create_model() successfully completed......................................
2025-07-01 12:07:52,080:INFO:SubProcess create_model() end ==================================
2025-07-01 12:07:52,080:INFO:Creating metrics dataframe
2025-07-01 12:07:52,091:INFO:Initializing Extreme Gradient Boosting
2025-07-01 12:07:52,091:INFO:Total runtime is 0.11455457607905069 minutes
2025-07-01 12:07:52,094:INFO:SubProcess create_model() called ==================================
2025-07-01 12:07:52,094:INFO:Initializing create_model()
2025-07-01 12:07:52,094:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DFF1A690>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231DD671990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 12:07:52,094:INFO:Checking exceptions
2025-07-01 12:07:52,095:INFO:Importing libraries
2025-07-01 12:07:52,095:INFO:Copying training dataset
2025-07-01 12:07:52,104:INFO:Defining folds
2025-07-01 12:07:52,104:INFO:Declaring metric variables
2025-07-01 12:07:52,109:INFO:Importing untrained model
2025-07-01 12:07:52,131:INFO:Extreme Gradient Boosting Imported successfully
2025-07-01 12:07:52,143:INFO:Starting cross validation
2025-07-01 12:07:52,144:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 12:07:52,563:INFO:Calculating mean and std
2025-07-01 12:07:52,564:INFO:Creating metrics dataframe
2025-07-01 12:07:52,566:INFO:Uploading results into container
2025-07-01 12:07:52,566:INFO:Uploading model into container now
2025-07-01 12:07:52,566:INFO:_master_model_container: 13
2025-07-01 12:07:52,567:INFO:_display_container: 2
2025-07-01 12:07:52,568:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-07-01 12:07:52,568:INFO:create_model() successfully completed......................................
2025-07-01 12:07:52,782:INFO:SubProcess create_model() end ==================================
2025-07-01 12:07:52,782:INFO:Creating metrics dataframe
2025-07-01 12:07:52,794:INFO:Initializing Light Gradient Boosting Machine
2025-07-01 12:07:52,794:INFO:Total runtime is 0.1262752334276835 minutes
2025-07-01 12:07:52,798:INFO:SubProcess create_model() called ==================================
2025-07-01 12:07:52,798:INFO:Initializing create_model()
2025-07-01 12:07:52,798:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DFF1A690>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231DD671990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 12:07:52,798:INFO:Checking exceptions
2025-07-01 12:07:52,799:INFO:Importing libraries
2025-07-01 12:07:52,799:INFO:Copying training dataset
2025-07-01 12:07:52,807:INFO:Defining folds
2025-07-01 12:07:52,807:INFO:Declaring metric variables
2025-07-01 12:07:52,811:INFO:Importing untrained model
2025-07-01 12:07:52,816:INFO:Light Gradient Boosting Machine Imported successfully
2025-07-01 12:07:52,827:INFO:Starting cross validation
2025-07-01 12:07:52,828:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 12:07:53,742:INFO:Calculating mean and std
2025-07-01 12:07:53,744:INFO:Creating metrics dataframe
2025-07-01 12:07:53,746:INFO:Uploading results into container
2025-07-01 12:07:53,747:INFO:Uploading model into container now
2025-07-01 12:07:53,748:INFO:_master_model_container: 14
2025-07-01 12:07:53,748:INFO:_display_container: 2
2025-07-01 12:07:53,749:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=900, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-07-01 12:07:53,749:INFO:create_model() successfully completed......................................
2025-07-01 12:07:53,979:INFO:SubProcess create_model() end ==================================
2025-07-01 12:07:53,979:INFO:Creating metrics dataframe
2025-07-01 12:07:53,991:INFO:Initializing Dummy Classifier
2025-07-01 12:07:53,991:INFO:Total runtime is 0.14623040358225503 minutes
2025-07-01 12:07:53,995:INFO:SubProcess create_model() called ==================================
2025-07-01 12:07:53,996:INFO:Initializing create_model()
2025-07-01 12:07:53,996:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DFF1A690>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231DD671990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 12:07:53,996:INFO:Checking exceptions
2025-07-01 12:07:53,996:INFO:Importing libraries
2025-07-01 12:07:53,996:INFO:Copying training dataset
2025-07-01 12:07:54,003:INFO:Defining folds
2025-07-01 12:07:54,003:INFO:Declaring metric variables
2025-07-01 12:07:54,008:INFO:Importing untrained model
2025-07-01 12:07:54,012:INFO:Dummy Classifier Imported successfully
2025-07-01 12:07:54,020:INFO:Starting cross validation
2025-07-01 12:07:54,021:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 12:07:54,051:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-01 12:07:54,054:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-01 12:07:54,055:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-01 12:07:54,058:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-01 12:07:54,092:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-01 12:07:54,093:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-01 12:07:54,109:INFO:Calculating mean and std
2025-07-01 12:07:54,110:INFO:Creating metrics dataframe
2025-07-01 12:07:54,112:INFO:Uploading results into container
2025-07-01 12:07:54,112:INFO:Uploading model into container now
2025-07-01 12:07:54,113:INFO:_master_model_container: 15
2025-07-01 12:07:54,113:INFO:_display_container: 2
2025-07-01 12:07:54,113:INFO:DummyClassifier(constant=None, random_state=900, strategy='prior')
2025-07-01 12:07:54,113:INFO:create_model() successfully completed......................................
2025-07-01 12:07:54,329:INFO:SubProcess create_model() end ==================================
2025-07-01 12:07:54,329:INFO:Creating metrics dataframe
2025-07-01 12:07:54,342:WARNING:d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-07-01 12:07:54,355:INFO:Initializing create_model()
2025-07-01 12:07:54,355:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231DFF1A690>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=900), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 12:07:54,355:INFO:Checking exceptions
2025-07-01 12:07:54,359:INFO:Importing libraries
2025-07-01 12:07:54,359:INFO:Copying training dataset
2025-07-01 12:07:54,366:INFO:Defining folds
2025-07-01 12:07:54,366:INFO:Declaring metric variables
2025-07-01 12:07:54,366:INFO:Importing untrained model
2025-07-01 12:07:54,366:INFO:Declaring custom model
2025-07-01 12:07:54,367:INFO:Ada Boost Classifier Imported successfully
2025-07-01 12:07:54,368:INFO:Cross validation set to False
2025-07-01 12:07:54,368:INFO:Fitting Model
2025-07-01 12:07:54,372:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 12:07:54,501:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=900)
2025-07-01 12:07:54,501:INFO:create_model() successfully completed......................................
2025-07-01 12:07:54,731:INFO:_master_model_container: 15
2025-07-01 12:07:54,732:INFO:_display_container: 2
2025-07-01 12:07:54,732:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=900)
2025-07-01 12:07:54,732:INFO:compare_models() successfully completed......................................
2025-07-01 13:04:03,419:WARNING:d:\ML_notes\.conda\Lib\site-packages\xgboost\training.py:183: UserWarning: [13:04:03] WARNING: C:\actions-runner\_work\xgboost\xgboost\src\learner.cc:738: 
Parameters: { "use_label_encoder" } are not used.

  bst.update(dtrain, iteration=i, fobj=obj)

2025-07-01 13:05:25,359:WARNING:d:\ML_notes\.conda\Lib\site-packages\xgboost\training.py:183: UserWarning: [13:05:25] WARNING: C:\actions-runner\_work\xgboost\xgboost\src\learner.cc:738: 
Parameters: { "use_label_encoder" } are not used.

  bst.update(dtrain, iteration=i, fobj=obj)

2025-07-01 13:43:31,569:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-01 13:43:31,569:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-01 13:43:31,569:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-01 13:43:31,569:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-01 13:48:31,502:INFO:PyCaret ClassificationExperiment
2025-07-01 13:48:31,503:INFO:Logging name: clf-default-name
2025-07-01 13:48:31,503:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-07-01 13:48:31,503:INFO:version 3.3.2
2025-07-01 13:48:31,503:INFO:Initializing setup()
2025-07-01 13:48:31,503:INFO:self.USI: 9c1e
2025-07-01 13:48:31,503:INFO:self._variable_keys: {'memory', 'gpu_param', 'fold_generator', 'fix_imbalance', 'X', 'exp_id', 'y_train', 'is_multiclass', 'html_param', 'data', 'seed', 'pipeline', 'n_jobs_param', 'logging_param', '_ml_usecase', 'fold_groups_param', 'y_test', 'fold_shuffle_param', 'gpu_n_jobs_param', 'X_train', 'log_plots_param', '_available_plots', 'X_test', 'target_param', 'y', 'exp_name_log', 'idx', 'USI'}
2025-07-01 13:48:31,503:INFO:Checking environment
2025-07-01 13:48:31,503:INFO:python_version: 3.11.13
2025-07-01 13:48:31,503:INFO:python_build: ('main', 'Jun  5 2025 13:03:15')
2025-07-01 13:48:31,503:INFO:machine: AMD64
2025-07-01 13:48:31,503:INFO:platform: Windows-10-10.0.22631-SP0
2025-07-01 13:48:31,507:INFO:Memory: svmem(total=12674457600, available=1310707712, percent=89.7, used=11363749888, free=1310707712)
2025-07-01 13:48:31,507:INFO:Physical Core: 4
2025-07-01 13:48:31,508:INFO:Logical Core: 8
2025-07-01 13:48:31,508:INFO:Checking libraries
2025-07-01 13:48:31,508:INFO:System:
2025-07-01 13:48:31,508:INFO:    python: 3.11.13 | packaged by Anaconda, Inc. | (main, Jun  5 2025, 13:03:15) [MSC v.1929 64 bit (AMD64)]
2025-07-01 13:48:31,508:INFO:executable: d:\ML_notes\.conda\python.exe
2025-07-01 13:48:31,508:INFO:   machine: Windows-10-10.0.22631-SP0
2025-07-01 13:48:31,508:INFO:PyCaret required dependencies:
2025-07-01 13:48:31,552:INFO:                 pip: 25.1
2025-07-01 13:48:31,553:INFO:          setuptools: 78.1.1
2025-07-01 13:48:31,553:INFO:             pycaret: 3.3.2
2025-07-01 13:48:31,553:INFO:             IPython: 9.3.0
2025-07-01 13:48:31,553:INFO:          ipywidgets: 8.1.7
2025-07-01 13:48:31,553:INFO:                tqdm: 4.67.1
2025-07-01 13:48:31,553:INFO:               numpy: 1.26.4
2025-07-01 13:48:31,553:INFO:              pandas: 2.1.4
2025-07-01 13:48:31,553:INFO:              jinja2: 3.1.6
2025-07-01 13:48:31,553:INFO:               scipy: 1.11.4
2025-07-01 13:48:31,553:INFO:              joblib: 1.3.2
2025-07-01 13:48:31,553:INFO:             sklearn: 1.4.2
2025-07-01 13:48:31,553:INFO:                pyod: 2.0.5
2025-07-01 13:48:31,553:INFO:            imblearn: 0.13.0
2025-07-01 13:48:31,553:INFO:   category_encoders: 2.7.0
2025-07-01 13:48:31,553:INFO:            lightgbm: 4.6.0
2025-07-01 13:48:31,553:INFO:               numba: 0.61.0
2025-07-01 13:48:31,553:INFO:            requests: 2.32.4
2025-07-01 13:48:31,553:INFO:          matplotlib: 3.7.5
2025-07-01 13:48:31,553:INFO:          scikitplot: 0.3.7
2025-07-01 13:48:31,553:INFO:         yellowbrick: 1.5
2025-07-01 13:48:31,553:INFO:              plotly: 5.24.1
2025-07-01 13:48:31,553:INFO:    plotly-resampler: Not installed
2025-07-01 13:48:31,553:INFO:             kaleido: 1.0.0
2025-07-01 13:48:31,553:INFO:           schemdraw: 0.15
2025-07-01 13:48:31,553:INFO:         statsmodels: 0.14.4
2025-07-01 13:48:31,553:INFO:              sktime: 0.26.0
2025-07-01 13:48:31,553:INFO:               tbats: 1.1.3
2025-07-01 13:48:31,553:INFO:            pmdarima: 2.0.4
2025-07-01 13:48:31,553:INFO:              psutil: 7.0.0
2025-07-01 13:48:31,553:INFO:          markupsafe: 3.0.2
2025-07-01 13:48:31,554:INFO:             pickle5: Not installed
2025-07-01 13:48:31,554:INFO:         cloudpickle: 3.1.1
2025-07-01 13:48:31,554:INFO:         deprecation: 2.1.0
2025-07-01 13:48:31,554:INFO:              xxhash: 3.5.0
2025-07-01 13:48:31,554:INFO:           wurlitzer: Not installed
2025-07-01 13:48:31,554:INFO:PyCaret optional dependencies:
2025-07-01 13:48:31,567:INFO:                shap: Not installed
2025-07-01 13:48:31,568:INFO:           interpret: Not installed
2025-07-01 13:48:31,568:INFO:                umap: Not installed
2025-07-01 13:48:31,568:INFO:     ydata_profiling: 4.16.1
2025-07-01 13:48:31,568:INFO:  explainerdashboard: Not installed
2025-07-01 13:48:31,568:INFO:             autoviz: Not installed
2025-07-01 13:48:31,568:INFO:           fairlearn: Not installed
2025-07-01 13:48:31,568:INFO:          deepchecks: Not installed
2025-07-01 13:48:31,568:INFO:             xgboost: 3.0.2
2025-07-01 13:48:31,568:INFO:            catboost: Not installed
2025-07-01 13:48:31,568:INFO:              kmodes: Not installed
2025-07-01 13:48:31,568:INFO:             mlxtend: Not installed
2025-07-01 13:48:31,568:INFO:       statsforecast: Not installed
2025-07-01 13:48:31,568:INFO:        tune_sklearn: Not installed
2025-07-01 13:48:31,568:INFO:                 ray: Not installed
2025-07-01 13:48:31,568:INFO:            hyperopt: Not installed
2025-07-01 13:48:31,568:INFO:              optuna: Not installed
2025-07-01 13:48:31,568:INFO:               skopt: Not installed
2025-07-01 13:48:31,568:INFO:              mlflow: Not installed
2025-07-01 13:48:31,568:INFO:              gradio: Not installed
2025-07-01 13:48:31,568:INFO:             fastapi: Not installed
2025-07-01 13:48:31,568:INFO:             uvicorn: Not installed
2025-07-01 13:48:31,568:INFO:              m2cgen: Not installed
2025-07-01 13:48:31,568:INFO:           evidently: Not installed
2025-07-01 13:48:31,568:INFO:               fugue: Not installed
2025-07-01 13:48:31,568:INFO:           streamlit: Not installed
2025-07-01 13:48:31,568:INFO:             prophet: Not installed
2025-07-01 13:48:31,568:INFO:None
2025-07-01 13:48:31,568:INFO:Set up data.
2025-07-01 13:48:31,576:INFO:Set up folding strategy.
2025-07-01 13:48:31,576:INFO:Set up train/test split.
2025-07-01 13:48:31,582:INFO:Set up index.
2025-07-01 13:48:31,583:INFO:Assigning column types.
2025-07-01 13:48:31,586:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-07-01 13:48:31,632:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-01 13:48:31,638:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-01 13:48:31,686:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 13:48:31,688:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 13:48:31,739:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-01 13:48:31,740:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-01 13:48:31,770:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 13:48:31,772:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 13:48:31,772:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-07-01 13:48:31,837:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-01 13:48:31,878:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 13:48:31,884:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 13:48:31,939:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-01 13:48:31,973:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 13:48:31,977:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 13:48:31,978:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-07-01 13:48:32,067:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 13:48:32,069:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 13:48:32,147:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 13:48:32,150:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 13:48:32,152:INFO:Preparing preprocessing pipeline...
2025-07-01 13:48:32,153:INFO:Set up simple imputation.
2025-07-01 13:48:32,230:INFO:Finished creating preprocessing pipeline.
2025-07-01 13:48:32,236:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\YOGA\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'Annual_Income',
                                             'Total_Spend', 'Years_as_Customer',
                                             'Num_of_Purchases',
                                             'Average_Transaction_Amount',
                                             'Num_of_Returns',
                                             'Num_of_Support_Contacts',
                                             'Satisfaction_Score',
                                             'Last_Purchase_Days_Ago',
                                             'Gender_Fem...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-07-01 13:48:32,236:INFO:Creating final display dataframe.
2025-07-01 13:48:32,333:INFO:Setup _display_container:                     Description              Value
0                    Session id               1879
1                        Target  Target_Churn_True
2                   Target type             Binary
3           Original data shape         (1000, 20)
4        Transformed data shape         (1000, 20)
5   Transformed train set shape          (700, 20)
6    Transformed test set shape          (300, 20)
7              Numeric features                 19
8                    Preprocess               True
9               Imputation type             simple
10           Numeric imputation               mean
11       Categorical imputation               mode
12               Fold Generator    StratifiedKFold
13                  Fold Number                 10
14                     CPU Jobs                 -1
15                      Use GPU              False
16               Log Experiment              False
17              Experiment Name   clf-default-name
18                          USI               9c1e
2025-07-01 13:48:32,421:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 13:48:32,425:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 13:48:32,527:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 13:48:32,531:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 13:48:32,532:INFO:setup() successfully completed in 1.03s...............
2025-07-01 13:48:32,532:INFO:Initializing compare_models()
2025-07-01 13:48:32,532:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000014609C9EF90>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000014609C9EF90>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2025-07-01 13:48:32,532:INFO:Checking exceptions
2025-07-01 13:48:32,536:INFO:Preparing display monitor
2025-07-01 13:48:32,565:INFO:Initializing Logistic Regression
2025-07-01 13:48:32,565:INFO:Total runtime is 2.1930535634358724e-05 minutes
2025-07-01 13:48:32,569:INFO:SubProcess create_model() called ==================================
2025-07-01 13:48:32,569:INFO:Initializing create_model()
2025-07-01 13:48:32,569:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000014609C9EF90>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000014606D74390>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 13:48:32,569:INFO:Checking exceptions
2025-07-01 13:48:32,569:INFO:Importing libraries
2025-07-01 13:48:32,569:INFO:Copying training dataset
2025-07-01 13:48:32,581:INFO:Defining folds
2025-07-01 13:48:32,581:INFO:Declaring metric variables
2025-07-01 13:48:32,586:INFO:Importing untrained model
2025-07-01 13:48:32,590:INFO:Logistic Regression Imported successfully
2025-07-01 13:48:32,600:INFO:Starting cross validation
2025-07-01 13:48:32,601:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 13:48:41,457:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-07-01 13:48:41,591:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-07-01 13:48:41,622:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-07-01 13:48:41,651:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-07-01 13:48:41,764:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-07-01 13:48:41,817:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-07-01 13:48:41,822:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-07-01 13:48:41,903:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-07-01 13:48:41,945:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-07-01 13:48:42,196:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-07-01 13:48:42,227:INFO:Calculating mean and std
2025-07-01 13:48:42,230:INFO:Creating metrics dataframe
2025-07-01 13:48:42,233:INFO:Uploading results into container
2025-07-01 13:48:42,233:INFO:Uploading model into container now
2025-07-01 13:48:42,233:INFO:_master_model_container: 1
2025-07-01 13:48:42,234:INFO:_display_container: 2
2025-07-01 13:48:42,234:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1879, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-07-01 13:48:42,234:INFO:create_model() successfully completed......................................
2025-07-01 13:48:42,643:INFO:SubProcess create_model() end ==================================
2025-07-01 13:48:42,644:INFO:Creating metrics dataframe
2025-07-01 13:48:42,649:INFO:Initializing K Neighbors Classifier
2025-07-01 13:48:42,649:INFO:Total runtime is 0.1680891474088033 minutes
2025-07-01 13:48:42,652:INFO:SubProcess create_model() called ==================================
2025-07-01 13:48:42,653:INFO:Initializing create_model()
2025-07-01 13:48:42,653:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000014609C9EF90>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000014606D74390>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 13:48:42,653:INFO:Checking exceptions
2025-07-01 13:48:42,653:INFO:Importing libraries
2025-07-01 13:48:42,654:INFO:Copying training dataset
2025-07-01 13:48:42,662:INFO:Defining folds
2025-07-01 13:48:42,662:INFO:Declaring metric variables
2025-07-01 13:48:42,666:INFO:Importing untrained model
2025-07-01 13:48:42,671:INFO:K Neighbors Classifier Imported successfully
2025-07-01 13:48:42,680:INFO:Starting cross validation
2025-07-01 13:48:42,681:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 13:48:42,945:INFO:Calculating mean and std
2025-07-01 13:48:42,947:INFO:Creating metrics dataframe
2025-07-01 13:48:42,950:INFO:Uploading results into container
2025-07-01 13:48:42,951:INFO:Uploading model into container now
2025-07-01 13:48:42,951:INFO:_master_model_container: 2
2025-07-01 13:48:42,951:INFO:_display_container: 2
2025-07-01 13:48:42,951:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-07-01 13:48:42,952:INFO:create_model() successfully completed......................................
2025-07-01 13:48:43,090:INFO:SubProcess create_model() end ==================================
2025-07-01 13:48:43,090:INFO:Creating metrics dataframe
2025-07-01 13:48:43,099:INFO:Initializing Naive Bayes
2025-07-01 13:48:43,099:INFO:Total runtime is 0.1755796432495117 minutes
2025-07-01 13:48:43,101:INFO:SubProcess create_model() called ==================================
2025-07-01 13:48:43,102:INFO:Initializing create_model()
2025-07-01 13:48:43,102:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000014609C9EF90>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000014606D74390>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 13:48:43,102:INFO:Checking exceptions
2025-07-01 13:48:43,102:INFO:Importing libraries
2025-07-01 13:48:43,102:INFO:Copying training dataset
2025-07-01 13:48:43,110:INFO:Defining folds
2025-07-01 13:48:43,110:INFO:Declaring metric variables
2025-07-01 13:48:43,115:INFO:Importing untrained model
2025-07-01 13:48:43,119:INFO:Naive Bayes Imported successfully
2025-07-01 13:48:43,129:INFO:Starting cross validation
2025-07-01 13:48:43,130:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 13:48:43,260:INFO:Calculating mean and std
2025-07-01 13:48:43,262:INFO:Creating metrics dataframe
2025-07-01 13:48:43,265:INFO:Uploading results into container
2025-07-01 13:48:43,266:INFO:Uploading model into container now
2025-07-01 13:48:43,266:INFO:_master_model_container: 3
2025-07-01 13:48:43,267:INFO:_display_container: 2
2025-07-01 13:48:43,267:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-07-01 13:48:43,267:INFO:create_model() successfully completed......................................
2025-07-01 13:48:43,444:INFO:SubProcess create_model() end ==================================
2025-07-01 13:48:43,444:INFO:Creating metrics dataframe
2025-07-01 13:48:43,451:INFO:Initializing Decision Tree Classifier
2025-07-01 13:48:43,451:INFO:Total runtime is 0.18144812583923337 minutes
2025-07-01 13:48:43,454:INFO:SubProcess create_model() called ==================================
2025-07-01 13:48:43,454:INFO:Initializing create_model()
2025-07-01 13:48:43,454:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000014609C9EF90>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000014606D74390>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 13:48:43,454:INFO:Checking exceptions
2025-07-01 13:48:43,455:INFO:Importing libraries
2025-07-01 13:48:43,455:INFO:Copying training dataset
2025-07-01 13:48:43,463:INFO:Defining folds
2025-07-01 13:48:43,463:INFO:Declaring metric variables
2025-07-01 13:48:43,467:INFO:Importing untrained model
2025-07-01 13:48:43,471:INFO:Decision Tree Classifier Imported successfully
2025-07-01 13:48:43,481:INFO:Starting cross validation
2025-07-01 13:48:43,482:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 13:48:43,601:INFO:Calculating mean and std
2025-07-01 13:48:43,602:INFO:Creating metrics dataframe
2025-07-01 13:48:43,605:INFO:Uploading results into container
2025-07-01 13:48:43,605:INFO:Uploading model into container now
2025-07-01 13:48:43,606:INFO:_master_model_container: 4
2025-07-01 13:48:43,607:INFO:_display_container: 2
2025-07-01 13:48:43,609:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1879, splitter='best')
2025-07-01 13:48:43,609:INFO:create_model() successfully completed......................................
2025-07-01 13:48:43,763:INFO:SubProcess create_model() end ==================================
2025-07-01 13:48:43,763:INFO:Creating metrics dataframe
2025-07-01 13:48:43,770:INFO:Initializing SVM - Linear Kernel
2025-07-01 13:48:43,770:INFO:Total runtime is 0.18675811688105262 minutes
2025-07-01 13:48:43,777:INFO:SubProcess create_model() called ==================================
2025-07-01 13:48:43,778:INFO:Initializing create_model()
2025-07-01 13:48:43,778:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000014609C9EF90>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000014606D74390>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 13:48:43,779:INFO:Checking exceptions
2025-07-01 13:48:43,779:INFO:Importing libraries
2025-07-01 13:48:43,779:INFO:Copying training dataset
2025-07-01 13:48:43,785:INFO:Defining folds
2025-07-01 13:48:43,785:INFO:Declaring metric variables
2025-07-01 13:48:43,792:INFO:Importing untrained model
2025-07-01 13:48:43,798:INFO:SVM - Linear Kernel Imported successfully
2025-07-01 13:48:43,808:INFO:Starting cross validation
2025-07-01 13:48:43,810:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 13:48:43,879:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-01 13:48:43,883:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-01 13:48:43,895:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-01 13:48:43,900:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-01 13:48:43,916:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-01 13:48:43,916:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-01 13:48:43,925:INFO:Calculating mean and std
2025-07-01 13:48:43,928:INFO:Creating metrics dataframe
2025-07-01 13:48:43,930:INFO:Uploading results into container
2025-07-01 13:48:43,931:INFO:Uploading model into container now
2025-07-01 13:48:43,932:INFO:_master_model_container: 5
2025-07-01 13:48:43,932:INFO:_display_container: 2
2025-07-01 13:48:43,933:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=1879, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-07-01 13:48:43,933:INFO:create_model() successfully completed......................................
2025-07-01 13:48:44,083:INFO:SubProcess create_model() end ==================================
2025-07-01 13:48:44,084:INFO:Creating metrics dataframe
2025-07-01 13:48:44,096:INFO:Initializing Ridge Classifier
2025-07-01 13:48:44,097:INFO:Total runtime is 0.1922241965929667 minutes
2025-07-01 13:48:44,101:INFO:SubProcess create_model() called ==================================
2025-07-01 13:48:44,101:INFO:Initializing create_model()
2025-07-01 13:48:44,101:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000014609C9EF90>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000014606D74390>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 13:48:44,101:INFO:Checking exceptions
2025-07-01 13:48:44,102:INFO:Importing libraries
2025-07-01 13:48:44,102:INFO:Copying training dataset
2025-07-01 13:48:44,109:INFO:Defining folds
2025-07-01 13:48:44,110:INFO:Declaring metric variables
2025-07-01 13:48:44,115:INFO:Importing untrained model
2025-07-01 13:48:44,120:INFO:Ridge Classifier Imported successfully
2025-07-01 13:48:44,130:INFO:Starting cross validation
2025-07-01 13:48:44,131:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 13:48:44,245:INFO:Calculating mean and std
2025-07-01 13:48:44,246:INFO:Creating metrics dataframe
2025-07-01 13:48:44,248:INFO:Uploading results into container
2025-07-01 13:48:44,248:INFO:Uploading model into container now
2025-07-01 13:48:44,249:INFO:_master_model_container: 6
2025-07-01 13:48:44,249:INFO:_display_container: 2
2025-07-01 13:48:44,249:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=1879, solver='auto',
                tol=0.0001)
2025-07-01 13:48:44,249:INFO:create_model() successfully completed......................................
2025-07-01 13:48:44,395:INFO:SubProcess create_model() end ==================================
2025-07-01 13:48:44,395:INFO:Creating metrics dataframe
2025-07-01 13:48:44,402:INFO:Initializing Random Forest Classifier
2025-07-01 13:48:44,402:INFO:Total runtime is 0.19729801416397091 minutes
2025-07-01 13:48:44,406:INFO:SubProcess create_model() called ==================================
2025-07-01 13:48:44,407:INFO:Initializing create_model()
2025-07-01 13:48:44,407:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000014609C9EF90>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000014606D74390>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 13:48:44,407:INFO:Checking exceptions
2025-07-01 13:48:44,407:INFO:Importing libraries
2025-07-01 13:48:44,407:INFO:Copying training dataset
2025-07-01 13:48:44,414:INFO:Defining folds
2025-07-01 13:48:44,414:INFO:Declaring metric variables
2025-07-01 13:48:44,419:INFO:Importing untrained model
2025-07-01 13:48:44,423:INFO:Random Forest Classifier Imported successfully
2025-07-01 13:48:44,432:INFO:Starting cross validation
2025-07-01 13:48:44,434:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 13:48:45,298:INFO:Calculating mean and std
2025-07-01 13:48:45,299:INFO:Creating metrics dataframe
2025-07-01 13:48:45,302:INFO:Uploading results into container
2025-07-01 13:48:45,303:INFO:Uploading model into container now
2025-07-01 13:48:45,303:INFO:_master_model_container: 7
2025-07-01 13:48:45,303:INFO:_display_container: 2
2025-07-01 13:48:45,304:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=1879, verbose=0,
                       warm_start=False)
2025-07-01 13:48:45,304:INFO:create_model() successfully completed......................................
2025-07-01 13:48:45,537:INFO:SubProcess create_model() end ==================================
2025-07-01 13:48:45,537:INFO:Creating metrics dataframe
2025-07-01 13:48:45,563:INFO:Initializing Quadratic Discriminant Analysis
2025-07-01 13:48:45,563:INFO:Total runtime is 0.21664200226465857 minutes
2025-07-01 13:48:45,569:INFO:SubProcess create_model() called ==================================
2025-07-01 13:48:45,569:INFO:Initializing create_model()
2025-07-01 13:48:45,569:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000014609C9EF90>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000014606D74390>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 13:48:45,569:INFO:Checking exceptions
2025-07-01 13:48:45,569:INFO:Importing libraries
2025-07-01 13:48:45,569:INFO:Copying training dataset
2025-07-01 13:48:45,581:INFO:Defining folds
2025-07-01 13:48:45,582:INFO:Declaring metric variables
2025-07-01 13:48:45,587:INFO:Importing untrained model
2025-07-01 13:48:45,593:INFO:Quadratic Discriminant Analysis Imported successfully
2025-07-01 13:48:45,603:INFO:Starting cross validation
2025-07-01 13:48:45,605:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 13:48:45,647:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 13:48:45,648:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 13:48:45,669:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 13:48:45,671:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 13:48:45,682:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 13:48:45,683:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 13:48:45,686:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 13:48:45,705:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 13:48:45,706:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 13:48:45,712:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 13:48:45,736:INFO:Calculating mean and std
2025-07-01 13:48:45,736:INFO:Creating metrics dataframe
2025-07-01 13:48:45,738:INFO:Uploading results into container
2025-07-01 13:48:45,739:INFO:Uploading model into container now
2025-07-01 13:48:45,741:INFO:_master_model_container: 8
2025-07-01 13:48:45,741:INFO:_display_container: 2
2025-07-01 13:48:45,742:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-07-01 13:48:45,742:INFO:create_model() successfully completed......................................
2025-07-01 13:48:45,917:INFO:SubProcess create_model() end ==================================
2025-07-01 13:48:45,918:INFO:Creating metrics dataframe
2025-07-01 13:48:45,929:INFO:Initializing Ada Boost Classifier
2025-07-01 13:48:45,929:INFO:Total runtime is 0.22275546789169307 minutes
2025-07-01 13:48:45,933:INFO:SubProcess create_model() called ==================================
2025-07-01 13:48:45,934:INFO:Initializing create_model()
2025-07-01 13:48:45,934:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000014609C9EF90>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000014606D74390>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 13:48:45,934:INFO:Checking exceptions
2025-07-01 13:48:45,934:INFO:Importing libraries
2025-07-01 13:48:45,934:INFO:Copying training dataset
2025-07-01 13:48:45,943:INFO:Defining folds
2025-07-01 13:48:45,944:INFO:Declaring metric variables
2025-07-01 13:48:45,948:INFO:Importing untrained model
2025-07-01 13:48:45,953:INFO:Ada Boost Classifier Imported successfully
2025-07-01 13:48:45,963:INFO:Starting cross validation
2025-07-01 13:48:45,965:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 13:48:45,994:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 13:48:45,998:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 13:48:46,001:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 13:48:46,008:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 13:48:46,008:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 13:48:46,009:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 13:48:46,010:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 13:48:46,072:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 13:48:46,233:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 13:48:46,242:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 13:48:46,560:INFO:Calculating mean and std
2025-07-01 13:48:46,562:INFO:Creating metrics dataframe
2025-07-01 13:48:46,565:INFO:Uploading results into container
2025-07-01 13:48:46,566:INFO:Uploading model into container now
2025-07-01 13:48:46,566:INFO:_master_model_container: 9
2025-07-01 13:48:46,566:INFO:_display_container: 2
2025-07-01 13:48:46,567:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=1879)
2025-07-01 13:48:46,567:INFO:create_model() successfully completed......................................
2025-07-01 13:48:46,728:INFO:SubProcess create_model() end ==================================
2025-07-01 13:48:46,728:INFO:Creating metrics dataframe
2025-07-01 13:48:46,739:INFO:Initializing Gradient Boosting Classifier
2025-07-01 13:48:46,739:INFO:Total runtime is 0.23624612490336094 minutes
2025-07-01 13:48:46,747:INFO:SubProcess create_model() called ==================================
2025-07-01 13:48:46,747:INFO:Initializing create_model()
2025-07-01 13:48:46,747:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000014609C9EF90>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000014606D74390>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 13:48:46,747:INFO:Checking exceptions
2025-07-01 13:48:46,748:INFO:Importing libraries
2025-07-01 13:48:46,748:INFO:Copying training dataset
2025-07-01 13:48:46,755:INFO:Defining folds
2025-07-01 13:48:46,755:INFO:Declaring metric variables
2025-07-01 13:48:46,762:INFO:Importing untrained model
2025-07-01 13:48:46,767:INFO:Gradient Boosting Classifier Imported successfully
2025-07-01 13:48:46,780:INFO:Starting cross validation
2025-07-01 13:48:46,782:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 13:48:47,649:INFO:Calculating mean and std
2025-07-01 13:48:47,650:INFO:Creating metrics dataframe
2025-07-01 13:48:47,653:INFO:Uploading results into container
2025-07-01 13:48:47,654:INFO:Uploading model into container now
2025-07-01 13:48:47,655:INFO:_master_model_container: 10
2025-07-01 13:48:47,655:INFO:_display_container: 2
2025-07-01 13:48:47,656:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=1879, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-07-01 13:48:47,656:INFO:create_model() successfully completed......................................
2025-07-01 13:48:47,878:INFO:SubProcess create_model() end ==================================
2025-07-01 13:48:47,878:INFO:Creating metrics dataframe
2025-07-01 13:48:47,903:INFO:Initializing Linear Discriminant Analysis
2025-07-01 13:48:47,903:INFO:Total runtime is 0.2556557496388753 minutes
2025-07-01 13:48:47,910:INFO:SubProcess create_model() called ==================================
2025-07-01 13:48:47,911:INFO:Initializing create_model()
2025-07-01 13:48:47,911:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000014609C9EF90>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000014606D74390>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 13:48:47,911:INFO:Checking exceptions
2025-07-01 13:48:47,911:INFO:Importing libraries
2025-07-01 13:48:47,911:INFO:Copying training dataset
2025-07-01 13:48:47,920:INFO:Defining folds
2025-07-01 13:48:47,920:INFO:Declaring metric variables
2025-07-01 13:48:47,929:INFO:Importing untrained model
2025-07-01 13:48:47,932:INFO:Linear Discriminant Analysis Imported successfully
2025-07-01 13:48:47,944:INFO:Starting cross validation
2025-07-01 13:48:47,946:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 13:48:48,122:INFO:Calculating mean and std
2025-07-01 13:48:48,125:INFO:Creating metrics dataframe
2025-07-01 13:48:48,129:INFO:Uploading results into container
2025-07-01 13:48:48,129:INFO:Uploading model into container now
2025-07-01 13:48:48,130:INFO:_master_model_container: 11
2025-07-01 13:48:48,130:INFO:_display_container: 2
2025-07-01 13:48:48,130:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-07-01 13:48:48,131:INFO:create_model() successfully completed......................................
2025-07-01 13:48:48,315:INFO:SubProcess create_model() end ==================================
2025-07-01 13:48:48,315:INFO:Creating metrics dataframe
2025-07-01 13:48:48,332:INFO:Initializing Extra Trees Classifier
2025-07-01 13:48:48,333:INFO:Total runtime is 0.26281526486078893 minutes
2025-07-01 13:48:48,338:INFO:SubProcess create_model() called ==================================
2025-07-01 13:48:48,338:INFO:Initializing create_model()
2025-07-01 13:48:48,338:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000014609C9EF90>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000014606D74390>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 13:48:48,338:INFO:Checking exceptions
2025-07-01 13:48:48,339:INFO:Importing libraries
2025-07-01 13:48:48,339:INFO:Copying training dataset
2025-07-01 13:48:48,348:INFO:Defining folds
2025-07-01 13:48:48,348:INFO:Declaring metric variables
2025-07-01 13:48:48,353:INFO:Importing untrained model
2025-07-01 13:48:48,361:INFO:Extra Trees Classifier Imported successfully
2025-07-01 13:48:48,367:INFO:Starting cross validation
2025-07-01 13:48:48,368:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 13:48:49,138:INFO:Calculating mean and std
2025-07-01 13:48:49,144:INFO:Creating metrics dataframe
2025-07-01 13:48:49,146:INFO:Uploading results into container
2025-07-01 13:48:49,148:INFO:Uploading model into container now
2025-07-01 13:48:49,148:INFO:_master_model_container: 12
2025-07-01 13:48:49,148:INFO:_display_container: 2
2025-07-01 13:48:49,149:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=1879, verbose=0,
                     warm_start=False)
2025-07-01 13:48:49,149:INFO:create_model() successfully completed......................................
2025-07-01 13:48:49,331:INFO:SubProcess create_model() end ==================================
2025-07-01 13:48:49,331:INFO:Creating metrics dataframe
2025-07-01 13:48:49,346:INFO:Initializing Extreme Gradient Boosting
2025-07-01 13:48:49,347:INFO:Total runtime is 0.2797231713930765 minutes
2025-07-01 13:48:49,352:INFO:SubProcess create_model() called ==================================
2025-07-01 13:48:49,352:INFO:Initializing create_model()
2025-07-01 13:48:49,352:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000014609C9EF90>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000014606D74390>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 13:48:49,352:INFO:Checking exceptions
2025-07-01 13:48:49,353:INFO:Importing libraries
2025-07-01 13:48:49,353:INFO:Copying training dataset
2025-07-01 13:48:49,360:INFO:Defining folds
2025-07-01 13:48:49,361:INFO:Declaring metric variables
2025-07-01 13:48:49,365:INFO:Importing untrained model
2025-07-01 13:48:49,372:INFO:Extreme Gradient Boosting Imported successfully
2025-07-01 13:48:49,379:INFO:Starting cross validation
2025-07-01 13:48:49,380:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 13:48:49,774:INFO:Calculating mean and std
2025-07-01 13:48:49,776:INFO:Creating metrics dataframe
2025-07-01 13:48:49,779:INFO:Uploading results into container
2025-07-01 13:48:49,779:INFO:Uploading model into container now
2025-07-01 13:48:49,780:INFO:_master_model_container: 13
2025-07-01 13:48:49,780:INFO:_display_container: 2
2025-07-01 13:48:49,781:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-07-01 13:48:49,782:INFO:create_model() successfully completed......................................
2025-07-01 13:48:49,918:INFO:SubProcess create_model() end ==================================
2025-07-01 13:48:49,918:INFO:Creating metrics dataframe
2025-07-01 13:48:49,929:INFO:Initializing Light Gradient Boosting Machine
2025-07-01 13:48:49,929:INFO:Total runtime is 0.2894201755523681 minutes
2025-07-01 13:48:49,933:INFO:SubProcess create_model() called ==================================
2025-07-01 13:48:49,933:INFO:Initializing create_model()
2025-07-01 13:48:49,933:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000014609C9EF90>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000014606D74390>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 13:48:49,933:INFO:Checking exceptions
2025-07-01 13:48:49,934:INFO:Importing libraries
2025-07-01 13:48:49,934:INFO:Copying training dataset
2025-07-01 13:48:49,942:INFO:Defining folds
2025-07-01 13:48:49,942:INFO:Declaring metric variables
2025-07-01 13:48:49,947:INFO:Importing untrained model
2025-07-01 13:48:49,951:INFO:Light Gradient Boosting Machine Imported successfully
2025-07-01 13:48:49,959:INFO:Starting cross validation
2025-07-01 13:48:49,961:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 13:48:50,813:INFO:Calculating mean and std
2025-07-01 13:48:50,814:INFO:Creating metrics dataframe
2025-07-01 13:48:50,817:INFO:Uploading results into container
2025-07-01 13:48:50,817:INFO:Uploading model into container now
2025-07-01 13:48:50,818:INFO:_master_model_container: 14
2025-07-01 13:48:50,818:INFO:_display_container: 2
2025-07-01 13:48:50,819:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=1879, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-07-01 13:48:50,819:INFO:create_model() successfully completed......................................
2025-07-01 13:48:50,981:INFO:SubProcess create_model() end ==================================
2025-07-01 13:48:50,981:INFO:Creating metrics dataframe
2025-07-01 13:48:51,013:INFO:Initializing Dummy Classifier
2025-07-01 13:48:51,013:INFO:Total runtime is 0.3074746131896972 minutes
2025-07-01 13:48:51,016:INFO:SubProcess create_model() called ==================================
2025-07-01 13:48:51,017:INFO:Initializing create_model()
2025-07-01 13:48:51,017:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000014609C9EF90>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000014606D74390>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 13:48:51,018:INFO:Checking exceptions
2025-07-01 13:48:51,018:INFO:Importing libraries
2025-07-01 13:48:51,018:INFO:Copying training dataset
2025-07-01 13:48:51,028:INFO:Defining folds
2025-07-01 13:48:51,028:INFO:Declaring metric variables
2025-07-01 13:48:51,031:INFO:Importing untrained model
2025-07-01 13:48:51,036:INFO:Dummy Classifier Imported successfully
2025-07-01 13:48:51,083:INFO:Starting cross validation
2025-07-01 13:48:51,084:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 13:48:51,220:INFO:Calculating mean and std
2025-07-01 13:48:51,223:INFO:Creating metrics dataframe
2025-07-01 13:48:51,229:INFO:Uploading results into container
2025-07-01 13:48:51,229:INFO:Uploading model into container now
2025-07-01 13:48:51,229:INFO:_master_model_container: 15
2025-07-01 13:48:51,229:INFO:_display_container: 2
2025-07-01 13:48:51,230:INFO:DummyClassifier(constant=None, random_state=1879, strategy='prior')
2025-07-01 13:48:51,230:INFO:create_model() successfully completed......................................
2025-07-01 13:48:51,402:INFO:SubProcess create_model() end ==================================
2025-07-01 13:48:51,403:INFO:Creating metrics dataframe
2025-07-01 13:48:51,429:WARNING:d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-07-01 13:48:51,448:INFO:Initializing create_model()
2025-07-01 13:48:51,449:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000014609C9EF90>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1879, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 13:48:51,449:INFO:Checking exceptions
2025-07-01 13:48:51,451:INFO:Importing libraries
2025-07-01 13:48:51,452:INFO:Copying training dataset
2025-07-01 13:48:51,465:INFO:Defining folds
2025-07-01 13:48:51,465:INFO:Declaring metric variables
2025-07-01 13:48:51,465:INFO:Importing untrained model
2025-07-01 13:48:51,465:INFO:Declaring custom model
2025-07-01 13:48:51,466:INFO:Decision Tree Classifier Imported successfully
2025-07-01 13:48:51,467:INFO:Cross validation set to False
2025-07-01 13:48:51,467:INFO:Fitting Model
2025-07-01 13:48:51,496:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1879, splitter='best')
2025-07-01 13:48:51,496:INFO:create_model() successfully completed......................................
2025-07-01 13:48:51,817:INFO:_master_model_container: 15
2025-07-01 13:48:51,817:INFO:_display_container: 2
2025-07-01 13:48:51,819:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1879, splitter='best')
2025-07-01 13:48:51,819:INFO:compare_models() successfully completed......................................
2025-07-01 13:58:16,216:WARNING:d:\ML_notes\.conda\Lib\site-packages\xgboost\training.py:183: UserWarning: [13:58:16] WARNING: C:\actions-runner\_work\xgboost\xgboost\src\learner.cc:738: 
Parameters: { "use_label_encoder" } are not used.

  bst.update(dtrain, iteration=i, fobj=obj)

2025-07-01 13:58:16,724:WARNING:d:\ML_notes\.conda\Lib\site-packages\xgboost\training.py:183: UserWarning: [13:58:16] WARNING: C:\actions-runner\_work\xgboost\xgboost\src\learner.cc:738: 
Parameters: { "use_label_encoder" } are not used.

  bst.update(dtrain, iteration=i, fobj=obj)

2025-07-01 13:59:12,984:INFO:PyCaret ClassificationExperiment
2025-07-01 13:59:12,984:INFO:Logging name: clf-default-name
2025-07-01 13:59:12,984:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-07-01 13:59:12,984:INFO:version 3.3.2
2025-07-01 13:59:12,986:INFO:Initializing setup()
2025-07-01 13:59:12,986:INFO:self.USI: c443
2025-07-01 13:59:12,986:INFO:self._variable_keys: {'memory', 'gpu_param', 'fold_generator', 'fix_imbalance', 'X', 'exp_id', 'y_train', 'is_multiclass', 'html_param', 'data', 'seed', 'pipeline', 'n_jobs_param', 'logging_param', '_ml_usecase', 'fold_groups_param', 'y_test', 'fold_shuffle_param', 'gpu_n_jobs_param', 'X_train', 'log_plots_param', '_available_plots', 'X_test', 'target_param', 'y', 'exp_name_log', 'idx', 'USI'}
2025-07-01 13:59:12,986:INFO:Checking environment
2025-07-01 13:59:12,986:INFO:python_version: 3.11.13
2025-07-01 13:59:12,986:INFO:python_build: ('main', 'Jun  5 2025 13:03:15')
2025-07-01 13:59:12,986:INFO:machine: AMD64
2025-07-01 13:59:12,986:INFO:platform: Windows-10-10.0.22631-SP0
2025-07-01 13:59:12,990:INFO:Memory: svmem(total=12674457600, available=2372370432, percent=81.3, used=10302087168, free=2372370432)
2025-07-01 13:59:12,991:INFO:Physical Core: 4
2025-07-01 13:59:12,991:INFO:Logical Core: 8
2025-07-01 13:59:12,991:INFO:Checking libraries
2025-07-01 13:59:12,991:INFO:System:
2025-07-01 13:59:12,991:INFO:    python: 3.11.13 | packaged by Anaconda, Inc. | (main, Jun  5 2025, 13:03:15) [MSC v.1929 64 bit (AMD64)]
2025-07-01 13:59:12,991:INFO:executable: d:\ML_notes\.conda\python.exe
2025-07-01 13:59:12,991:INFO:   machine: Windows-10-10.0.22631-SP0
2025-07-01 13:59:12,991:INFO:PyCaret required dependencies:
2025-07-01 13:59:12,991:INFO:                 pip: 25.1
2025-07-01 13:59:12,991:INFO:          setuptools: 78.1.1
2025-07-01 13:59:12,991:INFO:             pycaret: 3.3.2
2025-07-01 13:59:12,991:INFO:             IPython: 9.3.0
2025-07-01 13:59:12,991:INFO:          ipywidgets: 8.1.7
2025-07-01 13:59:12,991:INFO:                tqdm: 4.67.1
2025-07-01 13:59:12,991:INFO:               numpy: 1.26.4
2025-07-01 13:59:12,991:INFO:              pandas: 2.1.4
2025-07-01 13:59:12,991:INFO:              jinja2: 3.1.6
2025-07-01 13:59:12,991:INFO:               scipy: 1.11.4
2025-07-01 13:59:12,992:INFO:              joblib: 1.3.2
2025-07-01 13:59:12,992:INFO:             sklearn: 1.4.2
2025-07-01 13:59:12,992:INFO:                pyod: 2.0.5
2025-07-01 13:59:12,992:INFO:            imblearn: 0.13.0
2025-07-01 13:59:12,992:INFO:   category_encoders: 2.7.0
2025-07-01 13:59:12,992:INFO:            lightgbm: 4.6.0
2025-07-01 13:59:12,992:INFO:               numba: 0.61.0
2025-07-01 13:59:12,992:INFO:            requests: 2.32.4
2025-07-01 13:59:12,992:INFO:          matplotlib: 3.7.5
2025-07-01 13:59:12,992:INFO:          scikitplot: 0.3.7
2025-07-01 13:59:12,992:INFO:         yellowbrick: 1.5
2025-07-01 13:59:12,992:INFO:              plotly: 5.24.1
2025-07-01 13:59:12,992:INFO:    plotly-resampler: Not installed
2025-07-01 13:59:12,992:INFO:             kaleido: 1.0.0
2025-07-01 13:59:12,992:INFO:           schemdraw: 0.15
2025-07-01 13:59:12,992:INFO:         statsmodels: 0.14.4
2025-07-01 13:59:12,992:INFO:              sktime: 0.26.0
2025-07-01 13:59:12,992:INFO:               tbats: 1.1.3
2025-07-01 13:59:12,992:INFO:            pmdarima: 2.0.4
2025-07-01 13:59:12,992:INFO:              psutil: 7.0.0
2025-07-01 13:59:12,992:INFO:          markupsafe: 3.0.2
2025-07-01 13:59:12,992:INFO:             pickle5: Not installed
2025-07-01 13:59:12,992:INFO:         cloudpickle: 3.1.1
2025-07-01 13:59:12,992:INFO:         deprecation: 2.1.0
2025-07-01 13:59:12,992:INFO:              xxhash: 3.5.0
2025-07-01 13:59:12,993:INFO:           wurlitzer: Not installed
2025-07-01 13:59:12,993:INFO:PyCaret optional dependencies:
2025-07-01 13:59:12,993:INFO:                shap: Not installed
2025-07-01 13:59:12,993:INFO:           interpret: Not installed
2025-07-01 13:59:12,993:INFO:                umap: Not installed
2025-07-01 13:59:12,993:INFO:     ydata_profiling: 4.16.1
2025-07-01 13:59:12,993:INFO:  explainerdashboard: Not installed
2025-07-01 13:59:12,993:INFO:             autoviz: Not installed
2025-07-01 13:59:12,993:INFO:           fairlearn: Not installed
2025-07-01 13:59:12,993:INFO:          deepchecks: Not installed
2025-07-01 13:59:12,993:INFO:             xgboost: 3.0.2
2025-07-01 13:59:12,993:INFO:            catboost: Not installed
2025-07-01 13:59:12,993:INFO:              kmodes: Not installed
2025-07-01 13:59:12,993:INFO:             mlxtend: Not installed
2025-07-01 13:59:12,994:INFO:       statsforecast: Not installed
2025-07-01 13:59:12,994:INFO:        tune_sklearn: Not installed
2025-07-01 13:59:12,994:INFO:                 ray: Not installed
2025-07-01 13:59:12,994:INFO:            hyperopt: Not installed
2025-07-01 13:59:12,994:INFO:              optuna: Not installed
2025-07-01 13:59:12,994:INFO:               skopt: Not installed
2025-07-01 13:59:12,994:INFO:              mlflow: Not installed
2025-07-01 13:59:12,994:INFO:              gradio: Not installed
2025-07-01 13:59:12,994:INFO:             fastapi: Not installed
2025-07-01 13:59:12,994:INFO:             uvicorn: Not installed
2025-07-01 13:59:12,994:INFO:              m2cgen: Not installed
2025-07-01 13:59:12,994:INFO:           evidently: Not installed
2025-07-01 13:59:12,994:INFO:               fugue: Not installed
2025-07-01 13:59:12,994:INFO:           streamlit: Not installed
2025-07-01 13:59:12,994:INFO:             prophet: Not installed
2025-07-01 13:59:12,995:INFO:None
2025-07-01 13:59:12,995:INFO:Set up data.
2025-07-01 13:59:13,004:INFO:Set up folding strategy.
2025-07-01 13:59:13,004:INFO:Set up train/test split.
2025-07-01 13:59:13,011:INFO:Set up index.
2025-07-01 13:59:13,011:INFO:Assigning column types.
2025-07-01 13:59:13,018:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-07-01 13:59:13,066:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-01 13:59:13,066:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-01 13:59:13,095:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 13:59:13,098:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 13:59:13,146:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-01 13:59:13,147:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-01 13:59:13,176:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 13:59:13,180:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 13:59:13,180:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-07-01 13:59:13,244:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-01 13:59:13,271:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 13:59:13,278:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 13:59:13,334:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-01 13:59:13,363:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 13:59:13,366:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 13:59:13,366:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-07-01 13:59:13,441:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 13:59:13,444:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 13:59:13,530:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 13:59:13,533:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 13:59:13,534:INFO:Preparing preprocessing pipeline...
2025-07-01 13:59:13,535:INFO:Set up simple imputation.
2025-07-01 13:59:13,556:INFO:Finished creating preprocessing pipeline.
2025-07-01 13:59:13,560:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\YOGA\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'Annual_Income',
                                             'Total_Spend', 'Years_as_Customer',
                                             'Num_of_Purchases',
                                             'Average_Transaction_Amount',
                                             'Num_of_Returns',
                                             'Num_of_Support_Contacts',
                                             'Satisfaction_Score',
                                             'Last_Purchase_Days_Ago',
                                             'Gender_Fem...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-07-01 13:59:13,560:INFO:Creating final display dataframe.
2025-07-01 13:59:13,657:INFO:Setup _display_container:                     Description              Value
0                    Session id               7188
1                        Target  Target_Churn_True
2                   Target type             Binary
3           Original data shape         (1000, 20)
4        Transformed data shape         (1000, 20)
5   Transformed train set shape          (700, 20)
6    Transformed test set shape          (300, 20)
7              Numeric features                 19
8                    Preprocess               True
9               Imputation type             simple
10           Numeric imputation               mean
11       Categorical imputation               mode
12               Fold Generator    StratifiedKFold
13                  Fold Number                 10
14                     CPU Jobs                 -1
15                      Use GPU              False
16               Log Experiment              False
17              Experiment Name   clf-default-name
18                          USI               c443
2025-07-01 13:59:13,754:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 13:59:13,759:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 13:59:13,850:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 13:59:13,853:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 13:59:13,854:INFO:setup() successfully completed in 0.87s...............
2025-07-01 13:59:13,856:INFO:Initializing compare_models()
2025-07-01 13:59:13,856:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000014610954110>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000014610954110>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2025-07-01 13:59:13,856:INFO:Checking exceptions
2025-07-01 13:59:13,863:INFO:Preparing display monitor
2025-07-01 13:59:13,894:INFO:Initializing Logistic Regression
2025-07-01 13:59:13,894:INFO:Total runtime is 0.0 minutes
2025-07-01 13:59:13,904:INFO:SubProcess create_model() called ==================================
2025-07-01 13:59:13,905:INFO:Initializing create_model()
2025-07-01 13:59:13,905:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000014610954110>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000014605A68D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 13:59:13,905:INFO:Checking exceptions
2025-07-01 13:59:13,905:INFO:Importing libraries
2025-07-01 13:59:13,905:INFO:Copying training dataset
2025-07-01 13:59:13,914:INFO:Defining folds
2025-07-01 13:59:13,916:INFO:Declaring metric variables
2025-07-01 13:59:13,925:INFO:Importing untrained model
2025-07-01 13:59:13,930:INFO:Logistic Regression Imported successfully
2025-07-01 13:59:13,945:INFO:Starting cross validation
2025-07-01 13:59:13,946:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 14:00:37,532:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-01 14:00:37,532:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-01 14:00:37,532:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-01 14:00:37,532:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-01 14:00:38,203:INFO:PyCaret ClassificationExperiment
2025-07-01 14:00:38,204:INFO:Logging name: clf-default-name
2025-07-01 14:00:38,204:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-07-01 14:00:38,204:INFO:version 3.3.2
2025-07-01 14:00:38,204:INFO:Initializing setup()
2025-07-01 14:00:38,204:INFO:self.USI: 86a5
2025-07-01 14:00:38,204:INFO:self._variable_keys: {'log_plots_param', 'X_train', '_available_plots', 'X_test', 'logging_param', 'fold_generator', 'gpu_param', 'pipeline', 'exp_id', 'y_train', 'y', 'exp_name_log', 'y_test', 'fold_groups_param', 'fold_shuffle_param', 'fix_imbalance', 'target_param', 'is_multiclass', 'memory', 'X', 'n_jobs_param', 'idx', 'data', 'seed', 'gpu_n_jobs_param', '_ml_usecase', 'USI', 'html_param'}
2025-07-01 14:00:38,204:INFO:Checking environment
2025-07-01 14:00:38,204:INFO:python_version: 3.11.13
2025-07-01 14:00:38,204:INFO:python_build: ('main', 'Jun  5 2025 13:03:15')
2025-07-01 14:00:38,204:INFO:machine: AMD64
2025-07-01 14:00:38,204:INFO:platform: Windows-10-10.0.22631-SP0
2025-07-01 14:00:38,212:INFO:Memory: svmem(total=12674457600, available=2214473728, percent=82.5, used=10459983872, free=2214473728)
2025-07-01 14:00:38,212:INFO:Physical Core: 4
2025-07-01 14:00:38,213:INFO:Logical Core: 8
2025-07-01 14:00:38,213:INFO:Checking libraries
2025-07-01 14:00:38,213:INFO:System:
2025-07-01 14:00:38,213:INFO:    python: 3.11.13 | packaged by Anaconda, Inc. | (main, Jun  5 2025, 13:03:15) [MSC v.1929 64 bit (AMD64)]
2025-07-01 14:00:38,213:INFO:executable: d:\ML_notes\.conda\python.exe
2025-07-01 14:00:38,213:INFO:   machine: Windows-10-10.0.22631-SP0
2025-07-01 14:00:38,213:INFO:PyCaret required dependencies:
2025-07-01 14:00:38,243:INFO:                 pip: 25.1
2025-07-01 14:00:38,243:INFO:          setuptools: 78.1.1
2025-07-01 14:00:38,243:INFO:             pycaret: 3.3.2
2025-07-01 14:00:38,243:INFO:             IPython: 9.3.0
2025-07-01 14:00:38,243:INFO:          ipywidgets: 8.1.7
2025-07-01 14:00:38,243:INFO:                tqdm: 4.67.1
2025-07-01 14:00:38,243:INFO:               numpy: 1.26.4
2025-07-01 14:00:38,244:INFO:              pandas: 2.1.4
2025-07-01 14:00:38,244:INFO:              jinja2: 3.1.6
2025-07-01 14:00:38,244:INFO:               scipy: 1.11.4
2025-07-01 14:00:38,244:INFO:              joblib: 1.3.2
2025-07-01 14:00:38,244:INFO:             sklearn: 1.4.2
2025-07-01 14:00:38,244:INFO:                pyod: 2.0.5
2025-07-01 14:00:38,244:INFO:            imblearn: 0.13.0
2025-07-01 14:00:38,244:INFO:   category_encoders: 2.7.0
2025-07-01 14:00:38,244:INFO:            lightgbm: 4.6.0
2025-07-01 14:00:38,244:INFO:               numba: 0.61.0
2025-07-01 14:00:38,244:INFO:            requests: 2.32.4
2025-07-01 14:00:38,244:INFO:          matplotlib: 3.7.5
2025-07-01 14:00:38,244:INFO:          scikitplot: 0.3.7
2025-07-01 14:00:38,244:INFO:         yellowbrick: 1.5
2025-07-01 14:00:38,244:INFO:              plotly: 5.24.1
2025-07-01 14:00:38,244:INFO:    plotly-resampler: Not installed
2025-07-01 14:00:38,244:INFO:             kaleido: 1.0.0
2025-07-01 14:00:38,244:INFO:           schemdraw: 0.15
2025-07-01 14:00:38,244:INFO:         statsmodels: 0.14.4
2025-07-01 14:00:38,244:INFO:              sktime: 0.26.0
2025-07-01 14:00:38,244:INFO:               tbats: 1.1.3
2025-07-01 14:00:38,244:INFO:            pmdarima: 2.0.4
2025-07-01 14:00:38,244:INFO:              psutil: 7.0.0
2025-07-01 14:00:38,244:INFO:          markupsafe: 3.0.2
2025-07-01 14:00:38,244:INFO:             pickle5: Not installed
2025-07-01 14:00:38,244:INFO:         cloudpickle: 3.1.1
2025-07-01 14:00:38,244:INFO:         deprecation: 2.1.0
2025-07-01 14:00:38,244:INFO:              xxhash: 3.5.0
2025-07-01 14:00:38,244:INFO:           wurlitzer: Not installed
2025-07-01 14:00:38,245:INFO:PyCaret optional dependencies:
2025-07-01 14:00:38,258:INFO:                shap: Not installed
2025-07-01 14:00:38,258:INFO:           interpret: Not installed
2025-07-01 14:00:38,258:INFO:                umap: Not installed
2025-07-01 14:00:38,258:INFO:     ydata_profiling: 4.16.1
2025-07-01 14:00:38,258:INFO:  explainerdashboard: Not installed
2025-07-01 14:00:38,258:INFO:             autoviz: Not installed
2025-07-01 14:00:38,258:INFO:           fairlearn: Not installed
2025-07-01 14:00:38,258:INFO:          deepchecks: Not installed
2025-07-01 14:00:38,258:INFO:             xgboost: 3.0.2
2025-07-01 14:00:38,258:INFO:            catboost: Not installed
2025-07-01 14:00:38,258:INFO:              kmodes: Not installed
2025-07-01 14:00:38,258:INFO:             mlxtend: Not installed
2025-07-01 14:00:38,258:INFO:       statsforecast: Not installed
2025-07-01 14:00:38,258:INFO:        tune_sklearn: Not installed
2025-07-01 14:00:38,258:INFO:                 ray: Not installed
2025-07-01 14:00:38,258:INFO:            hyperopt: Not installed
2025-07-01 14:00:38,258:INFO:              optuna: Not installed
2025-07-01 14:00:38,258:INFO:               skopt: Not installed
2025-07-01 14:00:38,258:INFO:              mlflow: Not installed
2025-07-01 14:00:38,258:INFO:              gradio: Not installed
2025-07-01 14:00:38,258:INFO:             fastapi: Not installed
2025-07-01 14:00:38,258:INFO:             uvicorn: Not installed
2025-07-01 14:00:38,258:INFO:              m2cgen: Not installed
2025-07-01 14:00:38,258:INFO:           evidently: Not installed
2025-07-01 14:00:38,258:INFO:               fugue: Not installed
2025-07-01 14:00:38,259:INFO:           streamlit: Not installed
2025-07-01 14:00:38,259:INFO:             prophet: Not installed
2025-07-01 14:00:38,259:INFO:None
2025-07-01 14:00:38,259:INFO:Set up data.
2025-07-01 14:00:38,267:INFO:Set up folding strategy.
2025-07-01 14:00:38,267:INFO:Set up train/test split.
2025-07-01 14:00:38,271:INFO:Set up index.
2025-07-01 14:00:38,272:INFO:Assigning column types.
2025-07-01 14:00:38,275:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-07-01 14:00:38,324:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-01 14:00:38,331:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-01 14:00:38,373:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 14:00:38,375:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 14:00:38,419:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-01 14:00:38,420:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-01 14:00:38,452:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 14:00:38,455:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 14:00:38,455:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-07-01 14:00:38,505:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-01 14:00:38,535:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 14:00:38,538:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 14:00:38,582:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-01 14:00:38,612:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 14:00:38,617:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 14:00:38,618:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-07-01 14:00:38,689:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 14:00:38,691:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 14:00:38,766:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 14:00:38,769:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 14:00:38,770:INFO:Preparing preprocessing pipeline...
2025-07-01 14:00:38,772:INFO:Set up simple imputation.
2025-07-01 14:00:38,798:INFO:Finished creating preprocessing pipeline.
2025-07-01 14:00:38,802:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\YOGA\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'Annual_Income',
                                             'Total_Spend', 'Years_as_Customer',
                                             'Num_of_Purchases',
                                             'Average_Transaction_Amount',
                                             'Num_of_Returns',
                                             'Num_of_Support_Contacts',
                                             'Satisfaction_Score',
                                             'Last_Purchase_Days_Ago',
                                             'Gender_Fem...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-07-01 14:00:38,802:INFO:Creating final display dataframe.
2025-07-01 14:00:38,887:INFO:Setup _display_container:                     Description              Value
0                    Session id               1218
1                        Target  Target_Churn_True
2                   Target type             Binary
3           Original data shape         (1000, 20)
4        Transformed data shape         (1000, 20)
5   Transformed train set shape          (700, 20)
6    Transformed test set shape          (300, 20)
7              Numeric features                 19
8                    Preprocess               True
9               Imputation type             simple
10           Numeric imputation               mean
11       Categorical imputation               mode
12               Fold Generator    StratifiedKFold
13                  Fold Number                 10
14                     CPU Jobs                 -1
15                      Use GPU              False
16               Log Experiment              False
17              Experiment Name   clf-default-name
18                          USI               86a5
2025-07-01 14:00:38,978:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 14:00:38,980:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 14:00:39,073:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 14:00:39,078:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 14:00:39,080:INFO:setup() successfully completed in 0.88s...............
2025-07-01 14:00:39,080:INFO:Initializing compare_models()
2025-07-01 14:00:39,080:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DBB30CBB50>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001DBB30CBB50>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2025-07-01 14:00:39,080:INFO:Checking exceptions
2025-07-01 14:00:39,084:INFO:Preparing display monitor
2025-07-01 14:00:39,115:INFO:Initializing Logistic Regression
2025-07-01 14:00:39,115:INFO:Total runtime is 1.666545867919922e-05 minutes
2025-07-01 14:00:39,119:INFO:SubProcess create_model() called ==================================
2025-07-01 14:00:39,120:INFO:Initializing create_model()
2025-07-01 14:00:39,120:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DBB30CBB50>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DBB7170B10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 14:00:39,120:INFO:Checking exceptions
2025-07-01 14:00:39,120:INFO:Importing libraries
2025-07-01 14:00:39,120:INFO:Copying training dataset
2025-07-01 14:00:39,128:INFO:Defining folds
2025-07-01 14:00:39,129:INFO:Declaring metric variables
2025-07-01 14:00:39,133:INFO:Importing untrained model
2025-07-01 14:00:39,137:INFO:Logistic Regression Imported successfully
2025-07-01 14:00:39,145:INFO:Starting cross validation
2025-07-01 14:00:39,148:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 14:00:46,657:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-07-01 14:00:46,665:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-07-01 14:00:46,671:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-07-01 14:00:46,696:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-07-01 14:00:46,740:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-07-01 14:00:46,746:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-07-01 14:00:46,974:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-07-01 14:00:47,029:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-07-01 14:00:47,040:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-07-01 14:00:47,042:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-07-01 14:00:47,077:INFO:Calculating mean and std
2025-07-01 14:00:47,080:INFO:Creating metrics dataframe
2025-07-01 14:00:47,083:INFO:Uploading results into container
2025-07-01 14:00:47,084:INFO:Uploading model into container now
2025-07-01 14:00:47,085:INFO:_master_model_container: 1
2025-07-01 14:00:47,085:INFO:_display_container: 2
2025-07-01 14:00:47,086:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1218, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-07-01 14:00:47,087:INFO:create_model() successfully completed......................................
2025-07-01 14:00:47,239:INFO:SubProcess create_model() end ==================================
2025-07-01 14:00:47,239:INFO:Creating metrics dataframe
2025-07-01 14:00:47,249:INFO:Initializing K Neighbors Classifier
2025-07-01 14:00:47,249:INFO:Total runtime is 0.1355932911237081 minutes
2025-07-01 14:00:47,254:INFO:SubProcess create_model() called ==================================
2025-07-01 14:00:47,255:INFO:Initializing create_model()
2025-07-01 14:00:47,255:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DBB30CBB50>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DBB7170B10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 14:00:47,255:INFO:Checking exceptions
2025-07-01 14:00:47,255:INFO:Importing libraries
2025-07-01 14:00:47,255:INFO:Copying training dataset
2025-07-01 14:00:47,265:INFO:Defining folds
2025-07-01 14:00:47,266:INFO:Declaring metric variables
2025-07-01 14:00:47,271:INFO:Importing untrained model
2025-07-01 14:00:47,276:INFO:K Neighbors Classifier Imported successfully
2025-07-01 14:00:47,290:INFO:Starting cross validation
2025-07-01 14:00:47,292:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 14:00:47,527:INFO:Calculating mean and std
2025-07-01 14:00:47,529:INFO:Creating metrics dataframe
2025-07-01 14:00:47,531:INFO:Uploading results into container
2025-07-01 14:00:47,532:INFO:Uploading model into container now
2025-07-01 14:00:47,532:INFO:_master_model_container: 2
2025-07-01 14:00:47,532:INFO:_display_container: 2
2025-07-01 14:00:47,533:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-07-01 14:00:47,533:INFO:create_model() successfully completed......................................
2025-07-01 14:00:47,685:INFO:SubProcess create_model() end ==================================
2025-07-01 14:00:47,685:INFO:Creating metrics dataframe
2025-07-01 14:00:47,695:INFO:Initializing Naive Bayes
2025-07-01 14:00:47,695:INFO:Total runtime is 0.14302007357279461 minutes
2025-07-01 14:00:47,699:INFO:SubProcess create_model() called ==================================
2025-07-01 14:00:47,699:INFO:Initializing create_model()
2025-07-01 14:00:47,700:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DBB30CBB50>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DBB7170B10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 14:00:47,700:INFO:Checking exceptions
2025-07-01 14:00:47,700:INFO:Importing libraries
2025-07-01 14:00:47,700:INFO:Copying training dataset
2025-07-01 14:00:47,709:INFO:Defining folds
2025-07-01 14:00:47,709:INFO:Declaring metric variables
2025-07-01 14:00:47,716:INFO:Importing untrained model
2025-07-01 14:00:47,720:INFO:Naive Bayes Imported successfully
2025-07-01 14:00:47,732:INFO:Starting cross validation
2025-07-01 14:00:47,735:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 14:00:47,850:INFO:Calculating mean and std
2025-07-01 14:00:47,851:INFO:Creating metrics dataframe
2025-07-01 14:00:47,856:INFO:Uploading results into container
2025-07-01 14:00:47,856:INFO:Uploading model into container now
2025-07-01 14:00:47,858:INFO:_master_model_container: 3
2025-07-01 14:00:47,858:INFO:_display_container: 2
2025-07-01 14:00:47,858:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-07-01 14:00:47,858:INFO:create_model() successfully completed......................................
2025-07-01 14:00:47,999:INFO:SubProcess create_model() end ==================================
2025-07-01 14:00:47,999:INFO:Creating metrics dataframe
2025-07-01 14:00:48,008:INFO:Initializing Decision Tree Classifier
2025-07-01 14:00:48,009:INFO:Total runtime is 0.14825033346811933 minutes
2025-07-01 14:00:48,016:INFO:SubProcess create_model() called ==================================
2025-07-01 14:00:48,016:INFO:Initializing create_model()
2025-07-01 14:00:48,016:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DBB30CBB50>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DBB7170B10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 14:00:48,016:INFO:Checking exceptions
2025-07-01 14:00:48,017:INFO:Importing libraries
2025-07-01 14:00:48,017:INFO:Copying training dataset
2025-07-01 14:00:48,027:INFO:Defining folds
2025-07-01 14:00:48,027:INFO:Declaring metric variables
2025-07-01 14:00:48,033:INFO:Importing untrained model
2025-07-01 14:00:48,039:INFO:Decision Tree Classifier Imported successfully
2025-07-01 14:00:48,053:INFO:Starting cross validation
2025-07-01 14:00:48,054:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 14:00:48,189:INFO:Calculating mean and std
2025-07-01 14:00:48,192:INFO:Creating metrics dataframe
2025-07-01 14:00:48,197:INFO:Uploading results into container
2025-07-01 14:00:48,197:INFO:Uploading model into container now
2025-07-01 14:00:48,198:INFO:_master_model_container: 4
2025-07-01 14:00:48,198:INFO:_display_container: 2
2025-07-01 14:00:48,198:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1218, splitter='best')
2025-07-01 14:00:48,199:INFO:create_model() successfully completed......................................
2025-07-01 14:00:48,339:INFO:SubProcess create_model() end ==================================
2025-07-01 14:00:48,339:INFO:Creating metrics dataframe
2025-07-01 14:00:48,350:INFO:Initializing SVM - Linear Kernel
2025-07-01 14:00:48,350:INFO:Total runtime is 0.15394445260365808 minutes
2025-07-01 14:00:48,355:INFO:SubProcess create_model() called ==================================
2025-07-01 14:00:48,356:INFO:Initializing create_model()
2025-07-01 14:00:48,356:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DBB30CBB50>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DBB7170B10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 14:00:48,356:INFO:Checking exceptions
2025-07-01 14:00:48,356:INFO:Importing libraries
2025-07-01 14:00:48,356:INFO:Copying training dataset
2025-07-01 14:00:48,367:INFO:Defining folds
2025-07-01 14:00:48,368:INFO:Declaring metric variables
2025-07-01 14:00:48,373:INFO:Importing untrained model
2025-07-01 14:00:48,379:INFO:SVM - Linear Kernel Imported successfully
2025-07-01 14:00:48,392:INFO:Starting cross validation
2025-07-01 14:00:48,393:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 14:00:48,449:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-01 14:00:48,478:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-01 14:00:48,494:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-01 14:00:48,500:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-01 14:00:48,516:INFO:Calculating mean and std
2025-07-01 14:00:48,517:INFO:Creating metrics dataframe
2025-07-01 14:00:48,519:INFO:Uploading results into container
2025-07-01 14:00:48,520:INFO:Uploading model into container now
2025-07-01 14:00:48,520:INFO:_master_model_container: 5
2025-07-01 14:00:48,521:INFO:_display_container: 2
2025-07-01 14:00:48,521:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=1218, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-07-01 14:00:48,521:INFO:create_model() successfully completed......................................
2025-07-01 14:00:48,665:INFO:SubProcess create_model() end ==================================
2025-07-01 14:00:48,665:INFO:Creating metrics dataframe
2025-07-01 14:00:48,673:INFO:Initializing Ridge Classifier
2025-07-01 14:00:48,674:INFO:Total runtime is 0.15931393305460614 minutes
2025-07-01 14:00:48,680:INFO:SubProcess create_model() called ==================================
2025-07-01 14:00:48,680:INFO:Initializing create_model()
2025-07-01 14:00:48,680:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DBB30CBB50>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DBB7170B10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 14:00:48,681:INFO:Checking exceptions
2025-07-01 14:00:48,681:INFO:Importing libraries
2025-07-01 14:00:48,681:INFO:Copying training dataset
2025-07-01 14:00:48,686:INFO:Defining folds
2025-07-01 14:00:48,686:INFO:Declaring metric variables
2025-07-01 14:00:48,689:INFO:Importing untrained model
2025-07-01 14:00:48,699:INFO:Ridge Classifier Imported successfully
2025-07-01 14:00:48,707:INFO:Starting cross validation
2025-07-01 14:00:48,709:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 14:00:48,817:INFO:Calculating mean and std
2025-07-01 14:00:48,818:INFO:Creating metrics dataframe
2025-07-01 14:00:48,819:INFO:Uploading results into container
2025-07-01 14:00:48,821:INFO:Uploading model into container now
2025-07-01 14:00:48,821:INFO:_master_model_container: 6
2025-07-01 14:00:48,822:INFO:_display_container: 2
2025-07-01 14:00:48,822:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=1218, solver='auto',
                tol=0.0001)
2025-07-01 14:00:48,822:INFO:create_model() successfully completed......................................
2025-07-01 14:00:48,969:INFO:SubProcess create_model() end ==================================
2025-07-01 14:00:48,970:INFO:Creating metrics dataframe
2025-07-01 14:00:48,983:INFO:Initializing Random Forest Classifier
2025-07-01 14:00:48,983:INFO:Total runtime is 0.1644941329956055 minutes
2025-07-01 14:00:48,988:INFO:SubProcess create_model() called ==================================
2025-07-01 14:00:48,989:INFO:Initializing create_model()
2025-07-01 14:00:48,989:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DBB30CBB50>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DBB7170B10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 14:00:48,989:INFO:Checking exceptions
2025-07-01 14:00:48,989:INFO:Importing libraries
2025-07-01 14:00:48,989:INFO:Copying training dataset
2025-07-01 14:00:48,999:INFO:Defining folds
2025-07-01 14:00:48,999:INFO:Declaring metric variables
2025-07-01 14:00:49,004:INFO:Importing untrained model
2025-07-01 14:00:49,010:INFO:Random Forest Classifier Imported successfully
2025-07-01 14:00:49,027:INFO:Starting cross validation
2025-07-01 14:00:49,028:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 14:00:50,422:INFO:Calculating mean and std
2025-07-01 14:00:50,424:INFO:Creating metrics dataframe
2025-07-01 14:00:50,430:INFO:Uploading results into container
2025-07-01 14:00:50,431:INFO:Uploading model into container now
2025-07-01 14:00:50,432:INFO:_master_model_container: 7
2025-07-01 14:00:50,432:INFO:_display_container: 2
2025-07-01 14:00:50,433:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=1218, verbose=0,
                       warm_start=False)
2025-07-01 14:00:50,433:INFO:create_model() successfully completed......................................
2025-07-01 14:00:50,618:INFO:SubProcess create_model() end ==================================
2025-07-01 14:00:50,618:INFO:Creating metrics dataframe
2025-07-01 14:00:50,635:INFO:Initializing Quadratic Discriminant Analysis
2025-07-01 14:00:50,635:INFO:Total runtime is 0.1920159220695496 minutes
2025-07-01 14:00:50,642:INFO:SubProcess create_model() called ==================================
2025-07-01 14:00:50,642:INFO:Initializing create_model()
2025-07-01 14:00:50,642:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DBB30CBB50>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DBB7170B10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 14:00:50,642:INFO:Checking exceptions
2025-07-01 14:00:50,643:INFO:Importing libraries
2025-07-01 14:00:50,643:INFO:Copying training dataset
2025-07-01 14:00:50,655:INFO:Defining folds
2025-07-01 14:00:50,656:INFO:Declaring metric variables
2025-07-01 14:00:50,665:INFO:Importing untrained model
2025-07-01 14:00:50,673:INFO:Quadratic Discriminant Analysis Imported successfully
2025-07-01 14:00:50,682:INFO:Starting cross validation
2025-07-01 14:00:50,684:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 14:00:50,728:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 14:00:50,730:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 14:00:50,734:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 14:00:50,738:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 14:00:50,739:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 14:00:50,782:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 14:00:50,784:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 14:00:50,786:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 14:00:50,789:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 14:00:50,827:INFO:Calculating mean and std
2025-07-01 14:00:50,830:INFO:Creating metrics dataframe
2025-07-01 14:00:50,832:INFO:Uploading results into container
2025-07-01 14:00:50,833:INFO:Uploading model into container now
2025-07-01 14:00:50,833:INFO:_master_model_container: 8
2025-07-01 14:00:50,833:INFO:_display_container: 2
2025-07-01 14:00:50,834:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-07-01 14:00:50,834:INFO:create_model() successfully completed......................................
2025-07-01 14:00:51,050:INFO:SubProcess create_model() end ==================================
2025-07-01 14:00:51,052:INFO:Creating metrics dataframe
2025-07-01 14:00:51,062:INFO:Initializing Ada Boost Classifier
2025-07-01 14:00:51,063:INFO:Total runtime is 0.19914647340774538 minutes
2025-07-01 14:00:51,067:INFO:SubProcess create_model() called ==================================
2025-07-01 14:00:51,068:INFO:Initializing create_model()
2025-07-01 14:00:51,068:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DBB30CBB50>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DBB7170B10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 14:00:51,068:INFO:Checking exceptions
2025-07-01 14:00:51,068:INFO:Importing libraries
2025-07-01 14:00:51,068:INFO:Copying training dataset
2025-07-01 14:00:51,094:INFO:Defining folds
2025-07-01 14:00:51,094:INFO:Declaring metric variables
2025-07-01 14:00:51,102:INFO:Importing untrained model
2025-07-01 14:00:51,113:INFO:Ada Boost Classifier Imported successfully
2025-07-01 14:00:51,127:INFO:Starting cross validation
2025-07-01 14:00:51,130:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 14:00:51,169:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 14:00:51,174:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 14:00:51,180:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 14:00:51,198:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 14:00:51,205:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 14:00:51,214:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 14:00:51,219:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 14:00:51,227:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 14:00:51,480:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 14:00:51,482:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 14:00:51,671:INFO:Calculating mean and std
2025-07-01 14:00:51,672:INFO:Creating metrics dataframe
2025-07-01 14:00:51,677:INFO:Uploading results into container
2025-07-01 14:00:51,679:INFO:Uploading model into container now
2025-07-01 14:00:51,679:INFO:_master_model_container: 9
2025-07-01 14:00:51,679:INFO:_display_container: 2
2025-07-01 14:00:51,680:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=1218)
2025-07-01 14:00:51,680:INFO:create_model() successfully completed......................................
2025-07-01 14:00:51,849:INFO:SubProcess create_model() end ==================================
2025-07-01 14:00:51,849:INFO:Creating metrics dataframe
2025-07-01 14:00:51,863:INFO:Initializing Gradient Boosting Classifier
2025-07-01 14:00:51,863:INFO:Total runtime is 0.21249442497889204 minutes
2025-07-01 14:00:51,867:INFO:SubProcess create_model() called ==================================
2025-07-01 14:00:51,867:INFO:Initializing create_model()
2025-07-01 14:00:51,867:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DBB30CBB50>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DBB7170B10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 14:00:51,868:INFO:Checking exceptions
2025-07-01 14:00:51,868:INFO:Importing libraries
2025-07-01 14:00:51,868:INFO:Copying training dataset
2025-07-01 14:00:51,879:INFO:Defining folds
2025-07-01 14:00:51,879:INFO:Declaring metric variables
2025-07-01 14:00:51,884:INFO:Importing untrained model
2025-07-01 14:00:51,889:INFO:Gradient Boosting Classifier Imported successfully
2025-07-01 14:00:51,899:INFO:Starting cross validation
2025-07-01 14:00:51,902:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 14:00:52,788:INFO:Calculating mean and std
2025-07-01 14:00:52,790:INFO:Creating metrics dataframe
2025-07-01 14:00:52,795:INFO:Uploading results into container
2025-07-01 14:00:52,796:INFO:Uploading model into container now
2025-07-01 14:00:52,796:INFO:_master_model_container: 10
2025-07-01 14:00:52,796:INFO:_display_container: 2
2025-07-01 14:00:52,797:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=1218, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-07-01 14:00:52,797:INFO:create_model() successfully completed......................................
2025-07-01 14:00:52,922:INFO:SubProcess create_model() end ==================================
2025-07-01 14:00:52,922:INFO:Creating metrics dataframe
2025-07-01 14:00:52,933:INFO:Initializing Linear Discriminant Analysis
2025-07-01 14:00:52,933:INFO:Total runtime is 0.2303249518076579 minutes
2025-07-01 14:00:52,936:INFO:SubProcess create_model() called ==================================
2025-07-01 14:00:52,937:INFO:Initializing create_model()
2025-07-01 14:00:52,937:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DBB30CBB50>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DBB7170B10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 14:00:52,937:INFO:Checking exceptions
2025-07-01 14:00:52,937:INFO:Importing libraries
2025-07-01 14:00:52,937:INFO:Copying training dataset
2025-07-01 14:00:52,945:INFO:Defining folds
2025-07-01 14:00:52,946:INFO:Declaring metric variables
2025-07-01 14:00:52,949:INFO:Importing untrained model
2025-07-01 14:00:52,953:INFO:Linear Discriminant Analysis Imported successfully
2025-07-01 14:00:52,962:INFO:Starting cross validation
2025-07-01 14:00:52,963:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 14:00:53,170:INFO:Calculating mean and std
2025-07-01 14:00:53,173:INFO:Creating metrics dataframe
2025-07-01 14:00:53,178:INFO:Uploading results into container
2025-07-01 14:00:53,179:INFO:Uploading model into container now
2025-07-01 14:00:53,179:INFO:_master_model_container: 11
2025-07-01 14:00:53,179:INFO:_display_container: 2
2025-07-01 14:00:53,180:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-07-01 14:00:53,180:INFO:create_model() successfully completed......................................
2025-07-01 14:00:53,342:INFO:SubProcess create_model() end ==================================
2025-07-01 14:00:53,342:INFO:Creating metrics dataframe
2025-07-01 14:00:53,351:INFO:Initializing Extra Trees Classifier
2025-07-01 14:00:53,351:INFO:Total runtime is 0.2372950077056885 minutes
2025-07-01 14:00:53,356:INFO:SubProcess create_model() called ==================================
2025-07-01 14:00:53,357:INFO:Initializing create_model()
2025-07-01 14:00:53,358:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DBB30CBB50>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DBB7170B10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 14:00:53,358:INFO:Checking exceptions
2025-07-01 14:00:53,358:INFO:Importing libraries
2025-07-01 14:00:53,358:INFO:Copying training dataset
2025-07-01 14:00:53,365:INFO:Defining folds
2025-07-01 14:00:53,365:INFO:Declaring metric variables
2025-07-01 14:00:53,370:INFO:Importing untrained model
2025-07-01 14:00:53,378:INFO:Extra Trees Classifier Imported successfully
2025-07-01 14:00:53,386:INFO:Starting cross validation
2025-07-01 14:00:53,387:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 14:00:54,082:INFO:Calculating mean and std
2025-07-01 14:00:54,084:INFO:Creating metrics dataframe
2025-07-01 14:00:54,086:INFO:Uploading results into container
2025-07-01 14:00:54,086:INFO:Uploading model into container now
2025-07-01 14:00:54,087:INFO:_master_model_container: 12
2025-07-01 14:00:54,087:INFO:_display_container: 2
2025-07-01 14:00:54,087:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=1218, verbose=0,
                     warm_start=False)
2025-07-01 14:00:54,088:INFO:create_model() successfully completed......................................
2025-07-01 14:00:54,262:INFO:SubProcess create_model() end ==================================
2025-07-01 14:00:54,263:INFO:Creating metrics dataframe
2025-07-01 14:00:54,273:INFO:Initializing Extreme Gradient Boosting
2025-07-01 14:00:54,273:INFO:Total runtime is 0.2526485482851665 minutes
2025-07-01 14:00:54,283:INFO:SubProcess create_model() called ==================================
2025-07-01 14:00:54,284:INFO:Initializing create_model()
2025-07-01 14:00:54,284:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DBB30CBB50>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DBB7170B10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 14:00:54,284:INFO:Checking exceptions
2025-07-01 14:00:54,284:INFO:Importing libraries
2025-07-01 14:00:54,284:INFO:Copying training dataset
2025-07-01 14:00:54,302:INFO:Defining folds
2025-07-01 14:00:54,303:INFO:Declaring metric variables
2025-07-01 14:00:54,308:INFO:Importing untrained model
2025-07-01 14:00:54,318:INFO:Extreme Gradient Boosting Imported successfully
2025-07-01 14:00:54,327:INFO:Starting cross validation
2025-07-01 14:00:54,329:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 14:00:54,748:INFO:Calculating mean and std
2025-07-01 14:00:54,750:INFO:Creating metrics dataframe
2025-07-01 14:00:54,754:INFO:Uploading results into container
2025-07-01 14:00:54,755:INFO:Uploading model into container now
2025-07-01 14:00:54,755:INFO:_master_model_container: 13
2025-07-01 14:00:54,755:INFO:_display_container: 2
2025-07-01 14:00:54,757:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-07-01 14:00:54,757:INFO:create_model() successfully completed......................................
2025-07-01 14:00:54,878:INFO:SubProcess create_model() end ==================================
2025-07-01 14:00:54,878:INFO:Creating metrics dataframe
2025-07-01 14:00:54,887:INFO:Initializing Light Gradient Boosting Machine
2025-07-01 14:00:54,887:INFO:Total runtime is 0.2628817796707154 minutes
2025-07-01 14:00:54,893:INFO:SubProcess create_model() called ==================================
2025-07-01 14:00:54,893:INFO:Initializing create_model()
2025-07-01 14:00:54,893:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DBB30CBB50>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DBB7170B10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 14:00:54,894:INFO:Checking exceptions
2025-07-01 14:00:54,894:INFO:Importing libraries
2025-07-01 14:00:54,894:INFO:Copying training dataset
2025-07-01 14:00:54,899:INFO:Defining folds
2025-07-01 14:00:54,899:INFO:Declaring metric variables
2025-07-01 14:00:54,904:INFO:Importing untrained model
2025-07-01 14:00:54,910:INFO:Light Gradient Boosting Machine Imported successfully
2025-07-01 14:00:54,918:INFO:Starting cross validation
2025-07-01 14:00:54,919:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 14:00:55,785:INFO:Calculating mean and std
2025-07-01 14:00:55,786:INFO:Creating metrics dataframe
2025-07-01 14:00:55,790:INFO:Uploading results into container
2025-07-01 14:00:55,791:INFO:Uploading model into container now
2025-07-01 14:00:55,791:INFO:_master_model_container: 14
2025-07-01 14:00:55,791:INFO:_display_container: 2
2025-07-01 14:00:55,793:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=1218, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-07-01 14:00:55,793:INFO:create_model() successfully completed......................................
2025-07-01 14:00:55,942:INFO:SubProcess create_model() end ==================================
2025-07-01 14:00:55,942:INFO:Creating metrics dataframe
2025-07-01 14:00:55,953:INFO:Initializing Dummy Classifier
2025-07-01 14:00:55,953:INFO:Total runtime is 0.28064782619476325 minutes
2025-07-01 14:00:55,957:INFO:SubProcess create_model() called ==================================
2025-07-01 14:00:55,959:INFO:Initializing create_model()
2025-07-01 14:00:55,959:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DBB30CBB50>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DBB7170B10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 14:00:55,960:INFO:Checking exceptions
2025-07-01 14:00:55,960:INFO:Importing libraries
2025-07-01 14:00:55,960:INFO:Copying training dataset
2025-07-01 14:00:55,968:INFO:Defining folds
2025-07-01 14:00:55,968:INFO:Declaring metric variables
2025-07-01 14:00:55,972:INFO:Importing untrained model
2025-07-01 14:00:55,978:INFO:Dummy Classifier Imported successfully
2025-07-01 14:00:55,986:INFO:Starting cross validation
2025-07-01 14:00:55,991:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 14:00:56,176:INFO:Calculating mean and std
2025-07-01 14:00:56,180:INFO:Creating metrics dataframe
2025-07-01 14:00:56,184:INFO:Uploading results into container
2025-07-01 14:00:56,185:INFO:Uploading model into container now
2025-07-01 14:00:56,185:INFO:_master_model_container: 15
2025-07-01 14:00:56,185:INFO:_display_container: 2
2025-07-01 14:00:56,186:INFO:DummyClassifier(constant=None, random_state=1218, strategy='prior')
2025-07-01 14:00:56,186:INFO:create_model() successfully completed......................................
2025-07-01 14:00:56,348:INFO:SubProcess create_model() end ==================================
2025-07-01 14:00:56,348:INFO:Creating metrics dataframe
2025-07-01 14:00:56,364:WARNING:d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-07-01 14:00:56,378:INFO:Initializing create_model()
2025-07-01 14:00:56,378:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DBB30CBB50>, estimator=DummyClassifier(constant=None, random_state=1218, strategy='prior'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 14:00:56,378:INFO:Checking exceptions
2025-07-01 14:00:56,381:INFO:Importing libraries
2025-07-01 14:00:56,381:INFO:Copying training dataset
2025-07-01 14:00:56,388:INFO:Defining folds
2025-07-01 14:00:56,388:INFO:Declaring metric variables
2025-07-01 14:00:56,389:INFO:Importing untrained model
2025-07-01 14:00:56,389:INFO:Declaring custom model
2025-07-01 14:00:56,390:INFO:Dummy Classifier Imported successfully
2025-07-01 14:00:56,392:INFO:Cross validation set to False
2025-07-01 14:00:56,392:INFO:Fitting Model
2025-07-01 14:00:56,403:INFO:DummyClassifier(constant=None, random_state=1218, strategy='prior')
2025-07-01 14:00:56,403:INFO:create_model() successfully completed......................................
2025-07-01 14:00:56,600:INFO:_master_model_container: 15
2025-07-01 14:00:56,601:INFO:_display_container: 2
2025-07-01 14:00:56,601:INFO:DummyClassifier(constant=None, random_state=1218, strategy='prior')
2025-07-01 14:00:56,601:INFO:compare_models() successfully completed......................................
2025-07-01 14:01:49,419:INFO:PyCaret ClassificationExperiment
2025-07-01 14:01:49,420:INFO:Logging name: clf-default-name
2025-07-01 14:01:49,420:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-07-01 14:01:49,420:INFO:version 3.3.2
2025-07-01 14:01:49,420:INFO:Initializing setup()
2025-07-01 14:01:49,420:INFO:self.USI: 43ac
2025-07-01 14:01:49,420:INFO:self._variable_keys: {'log_plots_param', 'X_train', '_available_plots', 'X_test', 'logging_param', 'fold_generator', 'gpu_param', 'pipeline', 'exp_id', 'y_train', 'y', 'exp_name_log', 'y_test', 'fold_groups_param', 'fold_shuffle_param', 'fix_imbalance', 'target_param', 'is_multiclass', 'memory', 'X', 'n_jobs_param', 'idx', 'data', 'seed', 'gpu_n_jobs_param', '_ml_usecase', 'USI', 'html_param'}
2025-07-01 14:01:49,420:INFO:Checking environment
2025-07-01 14:01:49,420:INFO:python_version: 3.11.13
2025-07-01 14:01:49,420:INFO:python_build: ('main', 'Jun  5 2025 13:03:15')
2025-07-01 14:01:49,420:INFO:machine: AMD64
2025-07-01 14:01:49,420:INFO:platform: Windows-10-10.0.22631-SP0
2025-07-01 14:01:49,429:INFO:Memory: svmem(total=12674457600, available=1044606976, percent=91.8, used=11629850624, free=1044606976)
2025-07-01 14:01:49,429:INFO:Physical Core: 4
2025-07-01 14:01:49,429:INFO:Logical Core: 8
2025-07-01 14:01:49,429:INFO:Checking libraries
2025-07-01 14:01:49,430:INFO:System:
2025-07-01 14:01:49,430:INFO:    python: 3.11.13 | packaged by Anaconda, Inc. | (main, Jun  5 2025, 13:03:15) [MSC v.1929 64 bit (AMD64)]
2025-07-01 14:01:49,430:INFO:executable: d:\ML_notes\.conda\python.exe
2025-07-01 14:01:49,430:INFO:   machine: Windows-10-10.0.22631-SP0
2025-07-01 14:01:49,430:INFO:PyCaret required dependencies:
2025-07-01 14:01:49,430:INFO:                 pip: 25.1
2025-07-01 14:01:49,430:INFO:          setuptools: 78.1.1
2025-07-01 14:01:49,430:INFO:             pycaret: 3.3.2
2025-07-01 14:01:49,430:INFO:             IPython: 9.3.0
2025-07-01 14:01:49,430:INFO:          ipywidgets: 8.1.7
2025-07-01 14:01:49,430:INFO:                tqdm: 4.67.1
2025-07-01 14:01:49,430:INFO:               numpy: 1.26.4
2025-07-01 14:01:49,431:INFO:              pandas: 2.1.4
2025-07-01 14:01:49,431:INFO:              jinja2: 3.1.6
2025-07-01 14:01:49,431:INFO:               scipy: 1.11.4
2025-07-01 14:01:49,431:INFO:              joblib: 1.3.2
2025-07-01 14:01:49,431:INFO:             sklearn: 1.4.2
2025-07-01 14:01:49,431:INFO:                pyod: 2.0.5
2025-07-01 14:01:49,431:INFO:            imblearn: 0.13.0
2025-07-01 14:01:49,431:INFO:   category_encoders: 2.7.0
2025-07-01 14:01:49,431:INFO:            lightgbm: 4.6.0
2025-07-01 14:01:49,431:INFO:               numba: 0.61.0
2025-07-01 14:01:49,431:INFO:            requests: 2.32.4
2025-07-01 14:01:49,431:INFO:          matplotlib: 3.7.5
2025-07-01 14:01:49,431:INFO:          scikitplot: 0.3.7
2025-07-01 14:01:49,431:INFO:         yellowbrick: 1.5
2025-07-01 14:01:49,431:INFO:              plotly: 5.24.1
2025-07-01 14:01:49,431:INFO:    plotly-resampler: Not installed
2025-07-01 14:01:49,432:INFO:             kaleido: 1.0.0
2025-07-01 14:01:49,432:INFO:           schemdraw: 0.15
2025-07-01 14:01:49,432:INFO:         statsmodels: 0.14.4
2025-07-01 14:01:49,432:INFO:              sktime: 0.26.0
2025-07-01 14:01:49,432:INFO:               tbats: 1.1.3
2025-07-01 14:01:49,432:INFO:            pmdarima: 2.0.4
2025-07-01 14:01:49,432:INFO:              psutil: 7.0.0
2025-07-01 14:01:49,432:INFO:          markupsafe: 3.0.2
2025-07-01 14:01:49,432:INFO:             pickle5: Not installed
2025-07-01 14:01:49,432:INFO:         cloudpickle: 3.1.1
2025-07-01 14:01:49,432:INFO:         deprecation: 2.1.0
2025-07-01 14:01:49,432:INFO:              xxhash: 3.5.0
2025-07-01 14:01:49,432:INFO:           wurlitzer: Not installed
2025-07-01 14:01:49,432:INFO:PyCaret optional dependencies:
2025-07-01 14:01:49,432:INFO:                shap: Not installed
2025-07-01 14:01:49,433:INFO:           interpret: Not installed
2025-07-01 14:01:49,433:INFO:                umap: Not installed
2025-07-01 14:01:49,433:INFO:     ydata_profiling: 4.16.1
2025-07-01 14:01:49,433:INFO:  explainerdashboard: Not installed
2025-07-01 14:01:49,433:INFO:             autoviz: Not installed
2025-07-01 14:01:49,433:INFO:           fairlearn: Not installed
2025-07-01 14:01:49,433:INFO:          deepchecks: Not installed
2025-07-01 14:01:49,433:INFO:             xgboost: 3.0.2
2025-07-01 14:01:49,433:INFO:            catboost: Not installed
2025-07-01 14:01:49,433:INFO:              kmodes: Not installed
2025-07-01 14:01:49,433:INFO:             mlxtend: Not installed
2025-07-01 14:01:49,433:INFO:       statsforecast: Not installed
2025-07-01 14:01:49,433:INFO:        tune_sklearn: Not installed
2025-07-01 14:01:49,433:INFO:                 ray: Not installed
2025-07-01 14:01:49,433:INFO:            hyperopt: Not installed
2025-07-01 14:01:49,433:INFO:              optuna: Not installed
2025-07-01 14:01:49,433:INFO:               skopt: Not installed
2025-07-01 14:01:49,434:INFO:              mlflow: Not installed
2025-07-01 14:01:49,434:INFO:              gradio: Not installed
2025-07-01 14:01:49,434:INFO:             fastapi: Not installed
2025-07-01 14:01:49,434:INFO:             uvicorn: Not installed
2025-07-01 14:01:49,434:INFO:              m2cgen: Not installed
2025-07-01 14:01:49,434:INFO:           evidently: Not installed
2025-07-01 14:01:49,434:INFO:               fugue: Not installed
2025-07-01 14:01:49,434:INFO:           streamlit: Not installed
2025-07-01 14:01:49,434:INFO:             prophet: Not installed
2025-07-01 14:01:49,434:INFO:None
2025-07-01 14:01:49,434:INFO:Set up data.
2025-07-01 14:01:49,442:INFO:Set up folding strategy.
2025-07-01 14:01:49,442:INFO:Set up train/test split.
2025-07-01 14:01:49,450:INFO:Set up index.
2025-07-01 14:01:49,451:INFO:Assigning column types.
2025-07-01 14:01:49,459:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-07-01 14:01:49,515:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-01 14:01:49,516:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-01 14:01:49,547:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 14:01:49,554:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 14:01:49,613:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-01 14:01:49,613:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-01 14:01:49,645:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 14:01:49,648:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 14:01:49,649:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-07-01 14:01:49,710:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-01 14:01:49,752:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 14:01:49,757:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 14:01:49,822:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-01 14:01:49,859:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 14:01:49,863:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 14:01:49,864:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-07-01 14:01:49,964:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 14:01:49,970:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 14:01:50,065:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 14:01:50,070:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 14:01:50,071:INFO:Preparing preprocessing pipeline...
2025-07-01 14:01:50,072:INFO:Set up simple imputation.
2025-07-01 14:01:50,097:INFO:Finished creating preprocessing pipeline.
2025-07-01 14:01:50,101:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\YOGA\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'Annual_Income',
                                             'Average_Transaction_Amount',
                                             'Last_Purchase_Days_Ago',
                                             'Gender_Female', 'Gender_Male',
                                             'Gender_Other',
                                             'Email_Opt_In_True',
                                             'Promotion_Response_Responded',
                                             'Promotion_Response_Unsubscribed...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-07-01 14:01:50,102:INFO:Creating final display dataframe.
2025-07-01 14:01:50,192:INFO:Setup _display_container:                     Description              Value
0                    Session id               8688
1                        Target  Target_Churn_True
2                   Target type             Binary
3           Original data shape         (1000, 14)
4        Transformed data shape         (1000, 14)
5   Transformed train set shape          (700, 14)
6    Transformed test set shape          (300, 14)
7              Numeric features                 13
8                    Preprocess               True
9               Imputation type             simple
10           Numeric imputation               mean
11       Categorical imputation               mode
12               Fold Generator    StratifiedKFold
13                  Fold Number                 10
14                     CPU Jobs                 -1
15                      Use GPU              False
16               Log Experiment              False
17              Experiment Name   clf-default-name
18                          USI               43ac
2025-07-01 14:01:50,308:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 14:01:50,311:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 14:01:50,420:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-01 14:01:50,423:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-01 14:01:50,425:INFO:setup() successfully completed in 1.01s...............
2025-07-01 14:01:50,426:INFO:Initializing compare_models()
2025-07-01 14:01:50,426:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DBB5208410>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001DBB5208410>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2025-07-01 14:01:50,426:INFO:Checking exceptions
2025-07-01 14:01:50,429:INFO:Preparing display monitor
2025-07-01 14:01:50,463:INFO:Initializing Logistic Regression
2025-07-01 14:01:50,463:INFO:Total runtime is 0.0 minutes
2025-07-01 14:01:50,471:INFO:SubProcess create_model() called ==================================
2025-07-01 14:01:50,472:INFO:Initializing create_model()
2025-07-01 14:01:50,472:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DBB5208410>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DBB522CE90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 14:01:50,473:INFO:Checking exceptions
2025-07-01 14:01:50,473:INFO:Importing libraries
2025-07-01 14:01:50,473:INFO:Copying training dataset
2025-07-01 14:01:50,481:INFO:Defining folds
2025-07-01 14:01:50,481:INFO:Declaring metric variables
2025-07-01 14:01:50,486:INFO:Importing untrained model
2025-07-01 14:01:50,494:INFO:Logistic Regression Imported successfully
2025-07-01 14:01:50,506:INFO:Starting cross validation
2025-07-01 14:01:50,508:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 14:01:50,787:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-07-01 14:01:50,817:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-07-01 14:01:50,825:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-07-01 14:01:50,844:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-07-01 14:01:50,944:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-07-01 14:01:50,960:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-07-01 14:01:50,987:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-07-01 14:01:51,010:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-07-01 14:01:51,064:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-07-01 14:01:51,080:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-07-01 14:01:51,114:INFO:Calculating mean and std
2025-07-01 14:01:51,115:INFO:Creating metrics dataframe
2025-07-01 14:01:51,119:INFO:Uploading results into container
2025-07-01 14:01:51,120:INFO:Uploading model into container now
2025-07-01 14:01:51,120:INFO:_master_model_container: 1
2025-07-01 14:01:51,121:INFO:_display_container: 2
2025-07-01 14:01:51,121:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8688, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-07-01 14:01:51,121:INFO:create_model() successfully completed......................................
2025-07-01 14:01:51,291:INFO:SubProcess create_model() end ==================================
2025-07-01 14:01:51,291:INFO:Creating metrics dataframe
2025-07-01 14:01:51,303:INFO:Initializing K Neighbors Classifier
2025-07-01 14:01:51,304:INFO:Total runtime is 0.014007957776387532 minutes
2025-07-01 14:01:51,308:INFO:SubProcess create_model() called ==================================
2025-07-01 14:01:51,310:INFO:Initializing create_model()
2025-07-01 14:01:51,310:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DBB5208410>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DBB522CE90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 14:01:51,311:INFO:Checking exceptions
2025-07-01 14:01:51,311:INFO:Importing libraries
2025-07-01 14:01:51,311:INFO:Copying training dataset
2025-07-01 14:01:51,319:INFO:Defining folds
2025-07-01 14:01:51,319:INFO:Declaring metric variables
2025-07-01 14:01:51,329:INFO:Importing untrained model
2025-07-01 14:01:51,335:INFO:K Neighbors Classifier Imported successfully
2025-07-01 14:01:51,354:INFO:Starting cross validation
2025-07-01 14:01:51,354:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 14:01:51,569:INFO:Calculating mean and std
2025-07-01 14:01:51,572:INFO:Creating metrics dataframe
2025-07-01 14:01:51,576:INFO:Uploading results into container
2025-07-01 14:01:51,576:INFO:Uploading model into container now
2025-07-01 14:01:51,577:INFO:_master_model_container: 2
2025-07-01 14:01:51,578:INFO:_display_container: 2
2025-07-01 14:01:51,578:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-07-01 14:01:51,578:INFO:create_model() successfully completed......................................
2025-07-01 14:01:51,769:INFO:SubProcess create_model() end ==================================
2025-07-01 14:01:51,770:INFO:Creating metrics dataframe
2025-07-01 14:01:51,777:INFO:Initializing Naive Bayes
2025-07-01 14:01:51,778:INFO:Total runtime is 0.0219017227490743 minutes
2025-07-01 14:01:51,787:INFO:SubProcess create_model() called ==================================
2025-07-01 14:01:51,787:INFO:Initializing create_model()
2025-07-01 14:01:51,788:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DBB5208410>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DBB522CE90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 14:01:51,788:INFO:Checking exceptions
2025-07-01 14:01:51,788:INFO:Importing libraries
2025-07-01 14:01:51,788:INFO:Copying training dataset
2025-07-01 14:01:51,795:INFO:Defining folds
2025-07-01 14:01:51,795:INFO:Declaring metric variables
2025-07-01 14:01:51,800:INFO:Importing untrained model
2025-07-01 14:01:51,808:INFO:Naive Bayes Imported successfully
2025-07-01 14:01:51,820:INFO:Starting cross validation
2025-07-01 14:01:51,823:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 14:01:51,939:INFO:Calculating mean and std
2025-07-01 14:01:51,940:INFO:Creating metrics dataframe
2025-07-01 14:01:51,942:INFO:Uploading results into container
2025-07-01 14:01:51,943:INFO:Uploading model into container now
2025-07-01 14:01:51,943:INFO:_master_model_container: 3
2025-07-01 14:01:51,944:INFO:_display_container: 2
2025-07-01 14:01:51,944:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-07-01 14:01:51,944:INFO:create_model() successfully completed......................................
2025-07-01 14:01:52,101:INFO:SubProcess create_model() end ==================================
2025-07-01 14:01:52,101:INFO:Creating metrics dataframe
2025-07-01 14:01:52,110:INFO:Initializing Decision Tree Classifier
2025-07-01 14:01:52,110:INFO:Total runtime is 0.027450454235076905 minutes
2025-07-01 14:01:52,114:INFO:SubProcess create_model() called ==================================
2025-07-01 14:01:52,115:INFO:Initializing create_model()
2025-07-01 14:01:52,115:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DBB5208410>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DBB522CE90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 14:01:52,115:INFO:Checking exceptions
2025-07-01 14:01:52,115:INFO:Importing libraries
2025-07-01 14:01:52,115:INFO:Copying training dataset
2025-07-01 14:01:52,122:INFO:Defining folds
2025-07-01 14:01:52,122:INFO:Declaring metric variables
2025-07-01 14:01:52,126:INFO:Importing untrained model
2025-07-01 14:01:52,131:INFO:Decision Tree Classifier Imported successfully
2025-07-01 14:01:52,143:INFO:Starting cross validation
2025-07-01 14:01:52,143:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 14:01:52,251:INFO:Calculating mean and std
2025-07-01 14:01:52,252:INFO:Creating metrics dataframe
2025-07-01 14:01:52,254:INFO:Uploading results into container
2025-07-01 14:01:52,254:INFO:Uploading model into container now
2025-07-01 14:01:52,255:INFO:_master_model_container: 4
2025-07-01 14:01:52,255:INFO:_display_container: 2
2025-07-01 14:01:52,255:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8688, splitter='best')
2025-07-01 14:01:52,255:INFO:create_model() successfully completed......................................
2025-07-01 14:01:52,419:INFO:SubProcess create_model() end ==================================
2025-07-01 14:01:52,419:INFO:Creating metrics dataframe
2025-07-01 14:01:52,433:INFO:Initializing SVM - Linear Kernel
2025-07-01 14:01:52,434:INFO:Total runtime is 0.03283891280492147 minutes
2025-07-01 14:01:52,439:INFO:SubProcess create_model() called ==================================
2025-07-01 14:01:52,442:INFO:Initializing create_model()
2025-07-01 14:01:52,442:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DBB5208410>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DBB522CE90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 14:01:52,442:INFO:Checking exceptions
2025-07-01 14:01:52,442:INFO:Importing libraries
2025-07-01 14:01:52,442:INFO:Copying training dataset
2025-07-01 14:01:52,451:INFO:Defining folds
2025-07-01 14:01:52,451:INFO:Declaring metric variables
2025-07-01 14:01:52,458:INFO:Importing untrained model
2025-07-01 14:01:52,465:INFO:SVM - Linear Kernel Imported successfully
2025-07-01 14:01:52,478:INFO:Starting cross validation
2025-07-01 14:01:52,479:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 14:01:52,539:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-01 14:01:52,541:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-01 14:01:52,547:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-01 14:01:52,558:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-01 14:01:52,561:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-01 14:01:52,568:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-01 14:01:52,583:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-01 14:01:52,590:INFO:Calculating mean and std
2025-07-01 14:01:52,592:INFO:Creating metrics dataframe
2025-07-01 14:01:52,594:INFO:Uploading results into container
2025-07-01 14:01:52,594:INFO:Uploading model into container now
2025-07-01 14:01:52,594:INFO:_master_model_container: 5
2025-07-01 14:01:52,595:INFO:_display_container: 2
2025-07-01 14:01:52,595:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=8688, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-07-01 14:01:52,596:INFO:create_model() successfully completed......................................
2025-07-01 14:01:52,736:INFO:SubProcess create_model() end ==================================
2025-07-01 14:01:52,736:INFO:Creating metrics dataframe
2025-07-01 14:01:52,746:INFO:Initializing Ridge Classifier
2025-07-01 14:01:52,746:INFO:Total runtime is 0.03803933064142863 minutes
2025-07-01 14:01:52,750:INFO:SubProcess create_model() called ==================================
2025-07-01 14:01:52,750:INFO:Initializing create_model()
2025-07-01 14:01:52,751:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DBB5208410>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DBB522CE90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 14:01:52,751:INFO:Checking exceptions
2025-07-01 14:01:52,751:INFO:Importing libraries
2025-07-01 14:01:52,751:INFO:Copying training dataset
2025-07-01 14:01:52,758:INFO:Defining folds
2025-07-01 14:01:52,758:INFO:Declaring metric variables
2025-07-01 14:01:52,766:INFO:Importing untrained model
2025-07-01 14:01:52,770:INFO:Ridge Classifier Imported successfully
2025-07-01 14:01:52,779:INFO:Starting cross validation
2025-07-01 14:01:52,781:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 14:01:52,884:INFO:Calculating mean and std
2025-07-01 14:01:52,885:INFO:Creating metrics dataframe
2025-07-01 14:01:52,887:INFO:Uploading results into container
2025-07-01 14:01:52,887:INFO:Uploading model into container now
2025-07-01 14:01:52,887:INFO:_master_model_container: 6
2025-07-01 14:01:52,887:INFO:_display_container: 2
2025-07-01 14:01:52,888:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=8688, solver='auto',
                tol=0.0001)
2025-07-01 14:01:52,888:INFO:create_model() successfully completed......................................
2025-07-01 14:01:53,019:INFO:SubProcess create_model() end ==================================
2025-07-01 14:01:53,019:INFO:Creating metrics dataframe
2025-07-01 14:01:53,032:INFO:Initializing Random Forest Classifier
2025-07-01 14:01:53,032:INFO:Total runtime is 0.04280821084976196 minutes
2025-07-01 14:01:53,038:INFO:SubProcess create_model() called ==================================
2025-07-01 14:01:53,038:INFO:Initializing create_model()
2025-07-01 14:01:53,039:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DBB5208410>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DBB522CE90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 14:01:53,039:INFO:Checking exceptions
2025-07-01 14:01:53,039:INFO:Importing libraries
2025-07-01 14:01:53,039:INFO:Copying training dataset
2025-07-01 14:01:53,044:INFO:Defining folds
2025-07-01 14:01:53,044:INFO:Declaring metric variables
2025-07-01 14:01:53,051:INFO:Importing untrained model
2025-07-01 14:01:53,057:INFO:Random Forest Classifier Imported successfully
2025-07-01 14:01:53,065:INFO:Starting cross validation
2025-07-01 14:01:53,067:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 14:01:54,020:INFO:Calculating mean and std
2025-07-01 14:01:54,021:INFO:Creating metrics dataframe
2025-07-01 14:01:54,025:INFO:Uploading results into container
2025-07-01 14:01:54,025:INFO:Uploading model into container now
2025-07-01 14:01:54,026:INFO:_master_model_container: 7
2025-07-01 14:01:54,026:INFO:_display_container: 2
2025-07-01 14:01:54,026:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=8688, verbose=0,
                       warm_start=False)
2025-07-01 14:01:54,027:INFO:create_model() successfully completed......................................
2025-07-01 14:01:54,276:INFO:SubProcess create_model() end ==================================
2025-07-01 14:01:54,276:INFO:Creating metrics dataframe
2025-07-01 14:01:54,289:INFO:Initializing Quadratic Discriminant Analysis
2025-07-01 14:01:54,289:INFO:Total runtime is 0.06376526355743409 minutes
2025-07-01 14:01:54,294:INFO:SubProcess create_model() called ==================================
2025-07-01 14:01:54,295:INFO:Initializing create_model()
2025-07-01 14:01:54,295:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DBB5208410>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DBB522CE90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 14:01:54,295:INFO:Checking exceptions
2025-07-01 14:01:54,295:INFO:Importing libraries
2025-07-01 14:01:54,295:INFO:Copying training dataset
2025-07-01 14:01:54,308:INFO:Defining folds
2025-07-01 14:01:54,308:INFO:Declaring metric variables
2025-07-01 14:01:54,314:INFO:Importing untrained model
2025-07-01 14:01:54,320:INFO:Quadratic Discriminant Analysis Imported successfully
2025-07-01 14:01:54,335:INFO:Starting cross validation
2025-07-01 14:01:54,340:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 14:01:54,372:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 14:01:54,374:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 14:01:54,391:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 14:01:54,398:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-01 14:01:54,405:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 14:01:54,420:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 14:01:54,423:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 14:01:54,424:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 14:01:54,424:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 14:01:54,446:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-01 14:01:54,487:INFO:Calculating mean and std
2025-07-01 14:01:54,490:INFO:Creating metrics dataframe
2025-07-01 14:01:54,494:INFO:Uploading results into container
2025-07-01 14:01:54,495:INFO:Uploading model into container now
2025-07-01 14:01:54,496:INFO:_master_model_container: 8
2025-07-01 14:01:54,496:INFO:_display_container: 2
2025-07-01 14:01:54,496:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-07-01 14:01:54,496:INFO:create_model() successfully completed......................................
2025-07-01 14:01:54,725:INFO:SubProcess create_model() end ==================================
2025-07-01 14:01:54,725:INFO:Creating metrics dataframe
2025-07-01 14:01:54,739:INFO:Initializing Ada Boost Classifier
2025-07-01 14:01:54,739:INFO:Total runtime is 0.07126285632451376 minutes
2025-07-01 14:01:54,743:INFO:SubProcess create_model() called ==================================
2025-07-01 14:01:54,744:INFO:Initializing create_model()
2025-07-01 14:01:54,744:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DBB5208410>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DBB522CE90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 14:01:54,744:INFO:Checking exceptions
2025-07-01 14:01:54,744:INFO:Importing libraries
2025-07-01 14:01:54,744:INFO:Copying training dataset
2025-07-01 14:01:54,754:INFO:Defining folds
2025-07-01 14:01:54,755:INFO:Declaring metric variables
2025-07-01 14:01:54,760:INFO:Importing untrained model
2025-07-01 14:01:54,767:INFO:Ada Boost Classifier Imported successfully
2025-07-01 14:01:54,778:INFO:Starting cross validation
2025-07-01 14:01:54,779:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 14:01:54,806:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 14:01:54,810:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 14:01:54,812:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 14:01:54,814:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 14:01:54,818:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 14:01:54,820:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 14:01:54,841:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 14:01:54,845:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 14:01:55,061:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 14:01:55,136:WARNING:d:\ML_notes\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-01 14:01:55,331:INFO:Calculating mean and std
2025-07-01 14:01:55,334:INFO:Creating metrics dataframe
2025-07-01 14:01:55,337:INFO:Uploading results into container
2025-07-01 14:01:55,337:INFO:Uploading model into container now
2025-07-01 14:01:55,338:INFO:_master_model_container: 9
2025-07-01 14:01:55,338:INFO:_display_container: 2
2025-07-01 14:01:55,339:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=8688)
2025-07-01 14:01:55,339:INFO:create_model() successfully completed......................................
2025-07-01 14:01:55,474:INFO:SubProcess create_model() end ==================================
2025-07-01 14:01:55,474:INFO:Creating metrics dataframe
2025-07-01 14:01:55,484:INFO:Initializing Gradient Boosting Classifier
2025-07-01 14:01:55,484:INFO:Total runtime is 0.0836817502975464 minutes
2025-07-01 14:01:55,487:INFO:SubProcess create_model() called ==================================
2025-07-01 14:01:55,488:INFO:Initializing create_model()
2025-07-01 14:01:55,488:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DBB5208410>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DBB522CE90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 14:01:55,488:INFO:Checking exceptions
2025-07-01 14:01:55,488:INFO:Importing libraries
2025-07-01 14:01:55,488:INFO:Copying training dataset
2025-07-01 14:01:55,493:INFO:Defining folds
2025-07-01 14:01:55,493:INFO:Declaring metric variables
2025-07-01 14:01:55,499:INFO:Importing untrained model
2025-07-01 14:01:55,506:INFO:Gradient Boosting Classifier Imported successfully
2025-07-01 14:01:55,515:INFO:Starting cross validation
2025-07-01 14:01:55,517:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 14:01:56,271:INFO:Calculating mean and std
2025-07-01 14:01:56,272:INFO:Creating metrics dataframe
2025-07-01 14:01:56,274:INFO:Uploading results into container
2025-07-01 14:01:56,275:INFO:Uploading model into container now
2025-07-01 14:01:56,275:INFO:_master_model_container: 10
2025-07-01 14:01:56,275:INFO:_display_container: 2
2025-07-01 14:01:56,276:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=8688, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-07-01 14:01:56,276:INFO:create_model() successfully completed......................................
2025-07-01 14:01:56,417:INFO:SubProcess create_model() end ==================================
2025-07-01 14:01:56,417:INFO:Creating metrics dataframe
2025-07-01 14:01:56,426:INFO:Initializing Linear Discriminant Analysis
2025-07-01 14:01:56,426:INFO:Total runtime is 0.0993826985359192 minutes
2025-07-01 14:01:56,429:INFO:SubProcess create_model() called ==================================
2025-07-01 14:01:56,429:INFO:Initializing create_model()
2025-07-01 14:01:56,430:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DBB5208410>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DBB522CE90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 14:01:56,430:INFO:Checking exceptions
2025-07-01 14:01:56,430:INFO:Importing libraries
2025-07-01 14:01:56,430:INFO:Copying training dataset
2025-07-01 14:01:56,438:INFO:Defining folds
2025-07-01 14:01:56,439:INFO:Declaring metric variables
2025-07-01 14:01:56,443:INFO:Importing untrained model
2025-07-01 14:01:56,448:INFO:Linear Discriminant Analysis Imported successfully
2025-07-01 14:01:56,459:INFO:Starting cross validation
2025-07-01 14:01:56,461:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 14:01:56,559:INFO:Calculating mean and std
2025-07-01 14:01:56,560:INFO:Creating metrics dataframe
2025-07-01 14:01:56,562:INFO:Uploading results into container
2025-07-01 14:01:56,562:INFO:Uploading model into container now
2025-07-01 14:01:56,564:INFO:_master_model_container: 11
2025-07-01 14:01:56,564:INFO:_display_container: 2
2025-07-01 14:01:56,566:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-07-01 14:01:56,566:INFO:create_model() successfully completed......................................
2025-07-01 14:01:56,701:INFO:SubProcess create_model() end ==================================
2025-07-01 14:01:56,701:INFO:Creating metrics dataframe
2025-07-01 14:01:56,709:INFO:Initializing Extra Trees Classifier
2025-07-01 14:01:56,709:INFO:Total runtime is 0.10408978064854942 minutes
2025-07-01 14:01:56,713:INFO:SubProcess create_model() called ==================================
2025-07-01 14:01:56,715:INFO:Initializing create_model()
2025-07-01 14:01:56,715:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DBB5208410>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DBB522CE90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 14:01:56,715:INFO:Checking exceptions
2025-07-01 14:01:56,715:INFO:Importing libraries
2025-07-01 14:01:56,716:INFO:Copying training dataset
2025-07-01 14:01:56,721:INFO:Defining folds
2025-07-01 14:01:56,721:INFO:Declaring metric variables
2025-07-01 14:01:56,725:INFO:Importing untrained model
2025-07-01 14:01:56,734:INFO:Extra Trees Classifier Imported successfully
2025-07-01 14:01:56,742:INFO:Starting cross validation
2025-07-01 14:01:56,744:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 14:01:57,367:INFO:Calculating mean and std
2025-07-01 14:01:57,368:INFO:Creating metrics dataframe
2025-07-01 14:01:57,370:INFO:Uploading results into container
2025-07-01 14:01:57,370:INFO:Uploading model into container now
2025-07-01 14:01:57,371:INFO:_master_model_container: 12
2025-07-01 14:01:57,371:INFO:_display_container: 2
2025-07-01 14:01:57,371:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=8688, verbose=0,
                     warm_start=False)
2025-07-01 14:01:57,372:INFO:create_model() successfully completed......................................
2025-07-01 14:01:57,504:INFO:SubProcess create_model() end ==================================
2025-07-01 14:01:57,504:INFO:Creating metrics dataframe
2025-07-01 14:01:57,518:INFO:Initializing Extreme Gradient Boosting
2025-07-01 14:01:57,518:INFO:Total runtime is 0.11757392088572186 minutes
2025-07-01 14:01:57,521:INFO:SubProcess create_model() called ==================================
2025-07-01 14:01:57,522:INFO:Initializing create_model()
2025-07-01 14:01:57,522:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DBB5208410>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DBB522CE90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 14:01:57,522:INFO:Checking exceptions
2025-07-01 14:01:57,522:INFO:Importing libraries
2025-07-01 14:01:57,522:INFO:Copying training dataset
2025-07-01 14:01:57,528:INFO:Defining folds
2025-07-01 14:01:57,528:INFO:Declaring metric variables
2025-07-01 14:01:57,533:INFO:Importing untrained model
2025-07-01 14:01:57,540:INFO:Extreme Gradient Boosting Imported successfully
2025-07-01 14:01:57,551:INFO:Starting cross validation
2025-07-01 14:01:57,552:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 14:01:57,868:INFO:Calculating mean and std
2025-07-01 14:01:57,870:INFO:Creating metrics dataframe
2025-07-01 14:01:57,872:INFO:Uploading results into container
2025-07-01 14:01:57,873:INFO:Uploading model into container now
2025-07-01 14:01:57,873:INFO:_master_model_container: 13
2025-07-01 14:01:57,874:INFO:_display_container: 2
2025-07-01 14:01:57,875:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-07-01 14:01:57,875:INFO:create_model() successfully completed......................................
2025-07-01 14:01:58,016:INFO:SubProcess create_model() end ==================================
2025-07-01 14:01:58,016:INFO:Creating metrics dataframe
2025-07-01 14:01:58,026:INFO:Initializing Light Gradient Boosting Machine
2025-07-01 14:01:58,026:INFO:Total runtime is 0.1260375221570333 minutes
2025-07-01 14:01:58,031:INFO:SubProcess create_model() called ==================================
2025-07-01 14:01:58,032:INFO:Initializing create_model()
2025-07-01 14:01:58,033:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DBB5208410>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DBB522CE90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 14:01:58,033:INFO:Checking exceptions
2025-07-01 14:01:58,033:INFO:Importing libraries
2025-07-01 14:01:58,033:INFO:Copying training dataset
2025-07-01 14:01:58,038:INFO:Defining folds
2025-07-01 14:01:58,038:INFO:Declaring metric variables
2025-07-01 14:01:58,043:INFO:Importing untrained model
2025-07-01 14:01:58,047:INFO:Light Gradient Boosting Machine Imported successfully
2025-07-01 14:01:58,059:INFO:Starting cross validation
2025-07-01 14:01:58,060:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 14:01:58,977:INFO:Calculating mean and std
2025-07-01 14:01:58,978:INFO:Creating metrics dataframe
2025-07-01 14:01:58,984:INFO:Uploading results into container
2025-07-01 14:01:58,984:INFO:Uploading model into container now
2025-07-01 14:01:58,984:INFO:_master_model_container: 14
2025-07-01 14:01:58,986:INFO:_display_container: 2
2025-07-01 14:01:58,987:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=8688, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-07-01 14:01:58,987:INFO:create_model() successfully completed......................................
2025-07-01 14:01:59,150:INFO:SubProcess create_model() end ==================================
2025-07-01 14:01:59,151:INFO:Creating metrics dataframe
2025-07-01 14:01:59,162:INFO:Initializing Dummy Classifier
2025-07-01 14:01:59,162:INFO:Total runtime is 0.14498225450515748 minutes
2025-07-01 14:01:59,168:INFO:SubProcess create_model() called ==================================
2025-07-01 14:01:59,168:INFO:Initializing create_model()
2025-07-01 14:01:59,168:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DBB5208410>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DBB522CE90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 14:01:59,168:INFO:Checking exceptions
2025-07-01 14:01:59,169:INFO:Importing libraries
2025-07-01 14:01:59,169:INFO:Copying training dataset
2025-07-01 14:01:59,176:INFO:Defining folds
2025-07-01 14:01:59,177:INFO:Declaring metric variables
2025-07-01 14:01:59,183:INFO:Importing untrained model
2025-07-01 14:01:59,187:INFO:Dummy Classifier Imported successfully
2025-07-01 14:01:59,196:INFO:Starting cross validation
2025-07-01 14:01:59,199:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-01 14:01:59,417:INFO:Calculating mean and std
2025-07-01 14:01:59,419:INFO:Creating metrics dataframe
2025-07-01 14:01:59,420:INFO:Uploading results into container
2025-07-01 14:01:59,421:INFO:Uploading model into container now
2025-07-01 14:01:59,421:INFO:_master_model_container: 15
2025-07-01 14:01:59,421:INFO:_display_container: 2
2025-07-01 14:01:59,421:INFO:DummyClassifier(constant=None, random_state=8688, strategy='prior')
2025-07-01 14:01:59,421:INFO:create_model() successfully completed......................................
2025-07-01 14:01:59,591:INFO:SubProcess create_model() end ==================================
2025-07-01 14:01:59,591:INFO:Creating metrics dataframe
2025-07-01 14:01:59,608:WARNING:d:\ML_notes\.conda\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-07-01 14:01:59,622:INFO:Initializing create_model()
2025-07-01 14:01:59,622:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DBB5208410>, estimator=DummyClassifier(constant=None, random_state=8688, strategy='prior'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-01 14:01:59,622:INFO:Checking exceptions
2025-07-01 14:01:59,624:INFO:Importing libraries
2025-07-01 14:01:59,625:INFO:Copying training dataset
2025-07-01 14:01:59,632:INFO:Defining folds
2025-07-01 14:01:59,632:INFO:Declaring metric variables
2025-07-01 14:01:59,633:INFO:Importing untrained model
2025-07-01 14:01:59,633:INFO:Declaring custom model
2025-07-01 14:01:59,634:INFO:Dummy Classifier Imported successfully
2025-07-01 14:01:59,637:INFO:Cross validation set to False
2025-07-01 14:01:59,637:INFO:Fitting Model
2025-07-01 14:01:59,646:INFO:DummyClassifier(constant=None, random_state=8688, strategy='prior')
2025-07-01 14:01:59,646:INFO:create_model() successfully completed......................................
2025-07-01 14:01:59,971:INFO:_master_model_container: 15
2025-07-01 14:01:59,971:INFO:_display_container: 2
2025-07-01 14:01:59,971:INFO:DummyClassifier(constant=None, random_state=8688, strategy='prior')
2025-07-01 14:01:59,971:INFO:compare_models() successfully completed......................................
2025-07-01 14:03:12,308:WARNING:d:\ML_notes\.conda\Lib\site-packages\xgboost\training.py:183: UserWarning: [14:03:12] WARNING: C:\actions-runner\_work\xgboost\xgboost\src\learner.cc:738: 
Parameters: { "use_label_encoder" } are not used.

  bst.update(dtrain, iteration=i, fobj=obj)

2025-07-01 14:03:12,910:WARNING:d:\ML_notes\.conda\Lib\site-packages\xgboost\training.py:183: UserWarning: [14:03:12] WARNING: C:\actions-runner\_work\xgboost\xgboost\src\learner.cc:738: 
Parameters: { "use_label_encoder" } are not used.

  bst.update(dtrain, iteration=i, fobj=obj)

2025-07-01 14:03:13,614:WARNING:d:\ML_notes\.conda\Lib\site-packages\xgboost\training.py:183: UserWarning: [14:03:13] WARNING: C:\actions-runner\_work\xgboost\xgboost\src\learner.cc:738: 
Parameters: { "use_label_encoder" } are not used.

  bst.update(dtrain, iteration=i, fobj=obj)

